ARM GAS  /tmp/ccXE0sEe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB144:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include <stdio.h>
  23:Src/main.c    **** #include <stdlib.h>
  24:Src/main.c    **** #include "main.h"
  25:Src/main.c    **** #include "math.h"
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END Includes */
  31:Src/main.c    **** 
ARM GAS  /tmp/ccXE0sEe.s 			page 2


  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PTD */
  34:Src/main.c    **** typedef struct
  35:Src/main.c    **** {
  36:Src/main.c    **** 	float real;
  37:Src/main.c    **** 	float img;
  38:Src/main.c    **** } Complex_t;
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PTD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PD */
  44:Src/main.c    **** #define SAMPLING_FREQ 120000
  45:Src/main.c    **** #define CARRIER_FREQ 40000
  46:Src/main.c    **** #define START_FREQ 16
  47:Src/main.c    **** #define STOP_FREQ 4096
  48:Src/main.c    **** #define FREQ_STEPS 16
  49:Src/main.c    **** #define FREQ_BAND (STOP_FREQ - START_FREQ)
  50:Src/main.c    **** #define NUM_OF_FREQS (1 + FREQ_BAND / FREQ_STEPS)
  51:Src/main.c    **** #define GROUP_ELEMENT_COUNT 8
  52:Src/main.c    **** #define GROUP_BAND (FREQ_STEPS * GROUP_ELEMENT_COUNT)
  53:Src/main.c    **** #define GROUP_COUNT (NUM_OF_FREQS / GROUP_ELEMENT_COUNT)
  54:Src/main.c    **** #define SAMPLE_POINTS (SAMPLING_FREQ / FREQ_STEPS)
  55:Src/main.c    **** #define BUFFER_ELEMENT_COUNT (SAMPLE_POINTS * 2)
  56:Src/main.c    **** #define TRANSFER_COMPLETED_EVT ((uint16_t)(1U << 0))
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN PM */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PM */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  66:Src/main.c    **** ADC_HandleTypeDef hadc1;
  67:Src/main.c    **** DMA_HandleTypeDef hdma_adc1;
  68:Src/main.c    **** 
  69:Src/main.c    **** DAC_HandleTypeDef hdac;
  70:Src/main.c    **** DMA_HandleTypeDef hdma_dac1;
  71:Src/main.c    **** 
  72:Src/main.c    **** TIM_HandleTypeDef htim2;
  73:Src/main.c    **** TIM_HandleTypeDef htim6;
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN PV */
  76:Src/main.c    **** uint16_t ADCBuffer[BUFFER_ELEMENT_COUNT];
  77:Src/main.c    **** uint16_t DACTable[BUFFER_ELEMENT_COUNT];
  78:Src/main.c    **** 
  79:Src/main.c    **** Complex_t FreqResponse[NUM_OF_FREQS];
  80:Src/main.c    **** 
  81:Src/main.c    **** float Signal[NUM_OF_FREQS];
  82:Src/main.c    **** 
  83:Src/main.c    **** volatile uint16_t Flags;
  84:Src/main.c    **** uint32_t TickDifferenceTable;
  85:Src/main.c    **** uint32_t TickDifferenceFreqResp;
  86:Src/main.c    **** uint32_t TickDifferenceWait;
  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE END PV */
ARM GAS  /tmp/ccXE0sEe.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  91:Src/main.c    **** void SystemClock_Config(void);
  92:Src/main.c    **** static void MX_GPIO_Init(void);
  93:Src/main.c    **** static void MX_DMA_Init(void);
  94:Src/main.c    **** static void MX_ADC1_Init(void);
  95:Src/main.c    **** static void MX_DAC_Init(void);
  96:Src/main.c    **** static void MX_TIM2_Init(void);
  97:Src/main.c    **** static void MX_TIM6_Init(void);
  98:Src/main.c    **** 
  99:Src/main.c    **** /* USER CODE BEGIN PFP */
 100:Src/main.c    **** void StartADC(void);
 101:Src/main.c    **** void StartDAC(void);
 102:Src/main.c    **** void StartMasterTimer(void);
 103:Src/main.c    **** void StopMasterTimer(void);
 104:Src/main.c    **** 
 105:Src/main.c    **** void CreateDACTable(uint16_t startFreq, uint16_t freqSteps, uint16_t numOfFreqs,
 106:Src/main.c    **** 				    uint32_t samplingFreq, uint32_t carrierFreq, uint16_t *table,
 107:Src/main.c    **** 					uint16_t *elementCount);
 108:Src/main.c    **** 
 109:Src/main.c    **** void CalculateFreqResponse(Complex_t *respVector, uint16_t startFreq, uint16_t freqSteps,
 110:Src/main.c    **** 				  uint16_t numOfFreqs, uint32_t samplingFreq, uint16_t carrierFreq,
 111:Src/main.c    **** 				  uint16_t *buffer, uint16_t elementCount);
 112:Src/main.c    **** 
 113:Src/main.c    **** void IFFT(Complex_t *respVector, uint16_t startFreq, uint16_t freqSteps,
 114:Src/main.c    **** 		  uint16_t numOfFreqs, uint16_t resolution, float *signal);
 115:Src/main.c    **** 
 116:Src/main.c    **** /* USER CODE END PFP */
 117:Src/main.c    **** 
 118:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 119:Src/main.c    **** /* USER CODE BEGIN 0 */
 120:Src/main.c    **** 
 121:Src/main.c    **** /* USER CODE END 0 */
 122:Src/main.c    **** 
 123:Src/main.c    **** /**
 124:Src/main.c    ****   * @brief  The application entry point.
 125:Src/main.c    ****   * @retval int
 126:Src/main.c    ****   */
 127:Src/main.c    **** int main(void)
 128:Src/main.c    **** {
 129:Src/main.c    ****   /* USER CODE BEGIN 1 */
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* USER CODE END 1 */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 136:Src/main.c    ****   HAL_Init();
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* USER CODE BEGIN Init */
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* USER CODE END Init */
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* Configure the system clock */
 143:Src/main.c    ****   SystemClock_Config();
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccXE0sEe.s 			page 4


 146:Src/main.c    **** 
 147:Src/main.c    ****   /* USER CODE END SysInit */
 148:Src/main.c    **** 
 149:Src/main.c    ****   /* Initialize all configured peripherals */
 150:Src/main.c    ****   MX_GPIO_Init();
 151:Src/main.c    ****   MX_DMA_Init();
 152:Src/main.c    ****   MX_ADC1_Init();
 153:Src/main.c    ****   MX_DAC_Init();
 154:Src/main.c    ****   MX_TIM2_Init();
 155:Src/main.c    ****   MX_TIM6_Init();
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* USER CODE END 2 */
 158:Src/main.c    ****   Flags = 0;
 159:Src/main.c    ****   uint16_t element_count;
 160:Src/main.c    **** 
 161:Src/main.c    ****   StartADC();
 162:Src/main.c    ****   StartDAC();
 163:Src/main.c    **** 
 164:Src/main.c    ****   // Create DAC table for the first group.
 165:Src/main.c    ****   CreateDACTable(START_FREQ, FREQ_STEPS, GROUP_ELEMENT_COUNT,
 166:Src/main.c    ****   		  		 SAMPLING_FREQ, CARRIER_FREQ, &DACTable[0],
 167:Src/main.c    ****   				 &element_count);
 168:Src/main.c    **** 
 169:Src/main.c    ****   StartMasterTimer();
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* Infinite loop */
 172:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 173:Src/main.c    ****   while (1)
 174:Src/main.c    ****   {
 175:Src/main.c    **** 	  // For each frequency group obtain response.
 176:Src/main.c    **** 	  for (uint8_t g = 0; g < GROUP_COUNT; g++)
 177:Src/main.c    **** 	  {
 178:Src/main.c    **** 		  uint16_t dac_start_freq;
 179:Src/main.c    **** 		  uint16_t adc_start_freq;
 180:Src/main.c    **** 		  uint16_t dac_buff_offset;
 181:Src/main.c    **** 		  uint16_t adc_buff_offset;
 182:Src/main.c    **** 		  uint32_t tick_hold;
 183:Src/main.c    **** 
 184:Src/main.c    **** 		  dac_start_freq = (((g + 1) == GROUP_COUNT) ? 0: g+1) * GROUP_BAND + START_FREQ;
 185:Src/main.c    **** 		  dac_buff_offset = SAMPLE_POINTS * ((g + 1) & 0x0001);
 186:Src/main.c    **** 
 187:Src/main.c    **** 		  tick_hold = HAL_GetTick();
 188:Src/main.c    **** 
 189:Src/main.c    **** 		  // Create DAC table for the next group.
 190:Src/main.c    **** 		  CreateDACTable(dac_start_freq, FREQ_STEPS, GROUP_ELEMENT_COUNT,
 191:Src/main.c    **** 		  				 SAMPLING_FREQ, CARRIER_FREQ, &DACTable[dac_buff_offset],
 192:Src/main.c    **** 						 &element_count);
 193:Src/main.c    **** 
 194:Src/main.c    **** 		  TickDifferenceTable = HAL_GetTick() - tick_hold;
 195:Src/main.c    **** 
 196:Src/main.c    **** 		  tick_hold = HAL_GetTick();
 197:Src/main.c    **** 
 198:Src/main.c    **** 		  // Wait until transfer is completed.
 199:Src/main.c    **** 		  while (!(Flags & TRANSFER_COMPLETED_EVT));
 200:Src/main.c    **** 		  Flags ^= TRANSFER_COMPLETED_EVT;
 201:Src/main.c    **** 
 202:Src/main.c    **** 		  TickDifferenceWait = HAL_GetTick() - tick_hold;
ARM GAS  /tmp/ccXE0sEe.s 			page 5


 203:Src/main.c    **** 
 204:Src/main.c    **** 		  tick_hold = HAL_GetTick();
 205:Src/main.c    **** 
 206:Src/main.c    **** 		  adc_buff_offset = SAMPLE_POINTS * (g & 0x0001);
 207:Src/main.c    **** 		  adc_start_freq = g * GROUP_BAND + START_FREQ;
 208:Src/main.c    **** 
 209:Src/main.c    **** 		  // Calculate frequency response.
 210:Src/main.c    **** 		  CalculateFreqResponse(&FreqResponse[g * GROUP_ELEMENT_COUNT],
 211:Src/main.c    **** 				  	  	  	    adc_start_freq, FREQ_STEPS,
 212:Src/main.c    **** 								GROUP_ELEMENT_COUNT, SAMPLING_FREQ, CARRIER_FREQ,
 213:Src/main.c    **** 								&ADCBuffer[adc_buff_offset], element_count);
 214:Src/main.c    **** 
 215:Src/main.c    **** 		  TickDifferenceFreqResp = HAL_GetTick() - tick_hold;
 216:Src/main.c    **** 	  }
 217:Src/main.c    **** 
 218:Src/main.c    **** 	  IFFT(FreqResponse, START_FREQ, FREQ_STEPS, NUM_OF_FREQS,
 219:Src/main.c    **** 	  	   NUM_OF_FREQS, Signal);
 220:Src/main.c    ****   }
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* USER CODE BEGIN 3 */
 223:Src/main.c    **** 
 224:Src/main.c    ****   /* USER CODE END 3 */
 225:Src/main.c    **** }
 226:Src/main.c    **** 
 227:Src/main.c    **** void StartADC(void)
 228:Src/main.c    **** {
 229:Src/main.c    **** 	// Start ADC.
 230:Src/main.c    **** 	if(HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuffer,
 231:Src/main.c    **** 			BUFFER_ELEMENT_COUNT) != HAL_OK)
 232:Src/main.c    **** 	{
 233:Src/main.c    **** 		while(1);
 234:Src/main.c    **** 	}
 235:Src/main.c    **** }
 236:Src/main.c    **** 
 237:Src/main.c    **** void StartDAC(void)
 238:Src/main.c    **** {
 239:Src/main.c    **** 	// Start DAC.
 240:Src/main.c    **** 	if (HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_1,
 241:Src/main.c    **** 			(uint32_t *)DACTable, BUFFER_ELEMENT_COUNT, DAC_ALIGN_12B_R) != HAL_OK)
 242:Src/main.c    **** 	{
 243:Src/main.c    **** 		while(1);
 244:Src/main.c    **** 	}
 245:Src/main.c    **** }
 246:Src/main.c    **** 
 247:Src/main.c    **** void StartMasterTimer(void)
 248:Src/main.c    **** {
 249:Src/main.c    **** 	// Start time base.
 250:Src/main.c    **** 	if(HAL_TIM_Base_Start(&htim2) != HAL_OK)
 251:Src/main.c    **** 	{
 252:Src/main.c    **** 		while(1);
 253:Src/main.c    **** 	}
 254:Src/main.c    **** }
 255:Src/main.c    **** 
 256:Src/main.c    **** void StopMasterTimer(void)
 257:Src/main.c    **** {
 258:Src/main.c    **** 	if (HAL_TIM_Base_Stop(&htim2) != HAL_OK)
 259:Src/main.c    **** 	{
ARM GAS  /tmp/ccXE0sEe.s 			page 6


 260:Src/main.c    **** 		while (1);
 261:Src/main.c    **** 	}
 262:Src/main.c    **** }
 263:Src/main.c    **** 
 264:Src/main.c    **** /**
 265:Src/main.c    ****   * @brief System Clock Configuration
 266:Src/main.c    ****   * @retval None
 267:Src/main.c    ****   */
 268:Src/main.c    **** void SystemClock_Config(void)
 269:Src/main.c    **** {
 270:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 271:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 272:Src/main.c    **** 
 273:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 274:Src/main.c    ****   */
 275:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 276:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 277:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 278:Src/main.c    ****   */
 279:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 280:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 281:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 282:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 283:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 284:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 285:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 286:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 287:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 288:Src/main.c    ****   {
 289:Src/main.c    ****     Error_Handler();
 290:Src/main.c    ****   }
 291:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 292:Src/main.c    ****   */
 293:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 294:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 295:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 296:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 297:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 298:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 299:Src/main.c    **** 
 300:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 301:Src/main.c    ****   {
 302:Src/main.c    ****     Error_Handler();
 303:Src/main.c    ****   }
 304:Src/main.c    **** }
 305:Src/main.c    **** 
 306:Src/main.c    **** /**
 307:Src/main.c    ****   * @brief ADC1 Initialization Function
 308:Src/main.c    ****   * @param None
 309:Src/main.c    ****   * @retval None
 310:Src/main.c    ****   */
 311:Src/main.c    **** static void MX_ADC1_Init(void)
 312:Src/main.c    **** {
 313:Src/main.c    **** 
 314:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 315:Src/main.c    **** 
 316:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
ARM GAS  /tmp/ccXE0sEe.s 			page 7


 317:Src/main.c    **** 
 318:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 319:Src/main.c    **** 
 320:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 321:Src/main.c    **** 
 322:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 323:Src/main.c    ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 324:Src/main.c    ****   */
 325:Src/main.c    ****   hadc1.Instance = ADC1;
 326:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 327:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 328:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 329:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 330:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 331:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 332:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 333:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 334:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 335:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 336:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 337:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 338:Src/main.c    ****   {
 339:Src/main.c    ****     Error_Handler();
 340:Src/main.c    ****   }
 341:Src/main.c    ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 342:Src/main.c    ****   */
 343:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 344:Src/main.c    ****   sConfig.Rank = 1;
 345:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 346:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 347:Src/main.c    ****   {
 348:Src/main.c    ****     Error_Handler();
 349:Src/main.c    ****   }
 350:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 351:Src/main.c    **** 
 352:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 353:Src/main.c    **** 
 354:Src/main.c    **** }
 355:Src/main.c    **** 
 356:Src/main.c    **** /**
 357:Src/main.c    ****   * @brief DAC Initialization Function
 358:Src/main.c    ****   * @param None
 359:Src/main.c    ****   * @retval None
 360:Src/main.c    ****   */
 361:Src/main.c    **** static void MX_DAC_Init(void)
 362:Src/main.c    **** {
 363:Src/main.c    **** 
 364:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 367:Src/main.c    **** 
 368:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 369:Src/main.c    **** 
 370:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 373:Src/main.c    ****   /** DAC Initialization 
ARM GAS  /tmp/ccXE0sEe.s 			page 8


 374:Src/main.c    ****   */
 375:Src/main.c    ****   hdac.Instance = DAC;
 376:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 377:Src/main.c    ****   {
 378:Src/main.c    ****     Error_Handler();
 379:Src/main.c    ****   }
 380:Src/main.c    ****   /** DAC channel OUT1 config 
 381:Src/main.c    ****   */
 382:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_T2_TRGO;
 383:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 384:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 385:Src/main.c    ****   {
 386:Src/main.c    ****     Error_Handler();
 387:Src/main.c    ****   }
 388:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 389:Src/main.c    **** 
 390:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 391:Src/main.c    **** 
 392:Src/main.c    **** }
 393:Src/main.c    **** 
 394:Src/main.c    **** /**
 395:Src/main.c    ****   * @brief TIM2 Initialization Function
 396:Src/main.c    ****   * @param None
 397:Src/main.c    ****   * @retval None
 398:Src/main.c    ****   */
 399:Src/main.c    **** static void MX_TIM2_Init(void)
 400:Src/main.c    **** {
 401:Src/main.c    **** 
 402:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 403:Src/main.c    **** 
 404:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 405:Src/main.c    **** 
 406:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 407:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 408:Src/main.c    **** 
 409:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 410:Src/main.c    **** 
 411:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 412:Src/main.c    ****   htim2.Instance = TIM2;
 413:Src/main.c    ****   htim2.Init.Prescaler = 0;
 414:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 415:Src/main.c    ****   htim2.Init.Period = (84000000 / SAMPLING_FREQ);
 416:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 417:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 418:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 419:Src/main.c    ****   {
 420:Src/main.c    ****     Error_Handler();
 421:Src/main.c    ****   }
 422:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 423:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 424:Src/main.c    ****   {
 425:Src/main.c    ****     Error_Handler();
 426:Src/main.c    ****   }
 427:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 428:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 429:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 430:Src/main.c    ****   {
ARM GAS  /tmp/ccXE0sEe.s 			page 9


 431:Src/main.c    ****     Error_Handler();
 432:Src/main.c    ****   }
 433:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 434:Src/main.c    **** 
 435:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 436:Src/main.c    **** 
 437:Src/main.c    **** }
 438:Src/main.c    **** 
 439:Src/main.c    **** /**
 440:Src/main.c    ****   * @brief TIM6 Initialization Function
 441:Src/main.c    ****   * @param None
 442:Src/main.c    ****   * @retval None
 443:Src/main.c    ****   */
 444:Src/main.c    **** static void MX_TIM6_Init(void)
 445:Src/main.c    **** {
 446:Src/main.c    **** 
 447:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 448:Src/main.c    **** 
 449:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 450:Src/main.c    **** 
 451:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 452:Src/main.c    **** 
 453:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 454:Src/main.c    **** 
 455:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 456:Src/main.c    ****   htim6.Instance = TIM6;
 457:Src/main.c    ****   htim6.Init.Prescaler = 0;
 458:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 459:Src/main.c    ****   htim6.Init.Period = 0;
 460:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 461:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 462:Src/main.c    ****   {
 463:Src/main.c    ****     Error_Handler();
 464:Src/main.c    ****   }
 465:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 466:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 467:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 468:Src/main.c    ****   {
 469:Src/main.c    ****     Error_Handler();
 470:Src/main.c    ****   }
 471:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 472:Src/main.c    **** 
 473:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 474:Src/main.c    **** 
 475:Src/main.c    **** }
 476:Src/main.c    **** 
 477:Src/main.c    **** /** 
 478:Src/main.c    ****   * Enable DMA controller clock
 479:Src/main.c    ****   */
 480:Src/main.c    **** static void MX_DMA_Init(void) 
 481:Src/main.c    **** {
 482:Src/main.c    ****   /* DMA controller clock enable */
 483:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 484:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 485:Src/main.c    **** 
 486:Src/main.c    ****   /* DMA interrupt init */
 487:Src/main.c    ****   /* DMA1_Stream5_IRQn interrupt configuration */
ARM GAS  /tmp/ccXE0sEe.s 			page 10


 488:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 489:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 490:Src/main.c    ****   /* DMA2_Stream0_IRQn interrupt configuration */
 491:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 492:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 493:Src/main.c    **** 
 494:Src/main.c    **** }
 495:Src/main.c    **** 
 496:Src/main.c    **** /**
 497:Src/main.c    ****   * @brief GPIO Initialization Function
 498:Src/main.c    ****   * @param None
 499:Src/main.c    ****   * @retval None
 500:Src/main.c    ****   */
 501:Src/main.c    **** static void MX_GPIO_Init(void)
 502:Src/main.c    **** {
  28              		.loc 1 502 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
  41 0004 8CB0     		sub	sp, sp, #48
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 72
 503:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  44              		.loc 1 503 3 view .LVU1
  45              		.loc 1 503 20 is_stmt 0 view .LVU2
  46 0006 0024     		movs	r4, #0
  47 0008 0794     		str	r4, [sp, #28]
  48 000a 0894     		str	r4, [sp, #32]
  49 000c 0994     		str	r4, [sp, #36]
  50 000e 0A94     		str	r4, [sp, #40]
  51 0010 0B94     		str	r4, [sp, #44]
 504:Src/main.c    **** 
 505:Src/main.c    ****   /* GPIO Ports Clock Enable */
 506:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 506 3 is_stmt 1 view .LVU3
  53              	.LBB2:
  54              		.loc 1 506 3 view .LVU4
  55 0012 0194     		str	r4, [sp, #4]
  56              		.loc 1 506 3 view .LVU5
  57 0014 4C4B     		ldr	r3, .L3
  58 0016 1A6B     		ldr	r2, [r3, #48]
  59 0018 42F00402 		orr	r2, r2, #4
  60 001c 1A63     		str	r2, [r3, #48]
  61              		.loc 1 506 3 view .LVU6
  62 001e 1A6B     		ldr	r2, [r3, #48]
  63 0020 02F00402 		and	r2, r2, #4
  64 0024 0192     		str	r2, [sp, #4]
  65              		.loc 1 506 3 view .LVU7
ARM GAS  /tmp/ccXE0sEe.s 			page 11


  66 0026 019A     		ldr	r2, [sp, #4]
  67              	.LBE2:
 507:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  68              		.loc 1 507 3 view .LVU8
  69              	.LBB3:
  70              		.loc 1 507 3 view .LVU9
  71 0028 0294     		str	r4, [sp, #8]
  72              		.loc 1 507 3 view .LVU10
  73 002a 1A6B     		ldr	r2, [r3, #48]
  74 002c 42F08002 		orr	r2, r2, #128
  75 0030 1A63     		str	r2, [r3, #48]
  76              		.loc 1 507 3 view .LVU11
  77 0032 1A6B     		ldr	r2, [r3, #48]
  78 0034 02F08002 		and	r2, r2, #128
  79 0038 0292     		str	r2, [sp, #8]
  80              		.loc 1 507 3 view .LVU12
  81 003a 029A     		ldr	r2, [sp, #8]
  82              	.LBE3:
 508:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  83              		.loc 1 508 3 view .LVU13
  84              	.LBB4:
  85              		.loc 1 508 3 view .LVU14
  86 003c 0394     		str	r4, [sp, #12]
  87              		.loc 1 508 3 view .LVU15
  88 003e 1A6B     		ldr	r2, [r3, #48]
  89 0040 42F00102 		orr	r2, r2, #1
  90 0044 1A63     		str	r2, [r3, #48]
  91              		.loc 1 508 3 view .LVU16
  92 0046 1A6B     		ldr	r2, [r3, #48]
  93 0048 02F00102 		and	r2, r2, #1
  94 004c 0392     		str	r2, [sp, #12]
  95              		.loc 1 508 3 view .LVU17
  96 004e 039A     		ldr	r2, [sp, #12]
  97              	.LBE4:
 509:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 509 3 view .LVU18
  99              	.LBB5:
 100              		.loc 1 509 3 view .LVU19
 101 0050 0494     		str	r4, [sp, #16]
 102              		.loc 1 509 3 view .LVU20
 103 0052 1A6B     		ldr	r2, [r3, #48]
 104 0054 42F00202 		orr	r2, r2, #2
 105 0058 1A63     		str	r2, [r3, #48]
 106              		.loc 1 509 3 view .LVU21
 107 005a 1A6B     		ldr	r2, [r3, #48]
 108 005c 02F00202 		and	r2, r2, #2
 109 0060 0492     		str	r2, [sp, #16]
 110              		.loc 1 509 3 view .LVU22
 111 0062 049A     		ldr	r2, [sp, #16]
 112              	.LBE5:
 510:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 113              		.loc 1 510 3 view .LVU23
 114              	.LBB6:
 115              		.loc 1 510 3 view .LVU24
 116 0064 0594     		str	r4, [sp, #20]
 117              		.loc 1 510 3 view .LVU25
 118 0066 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccXE0sEe.s 			page 12


 119 0068 42F01002 		orr	r2, r2, #16
 120 006c 1A63     		str	r2, [r3, #48]
 121              		.loc 1 510 3 view .LVU26
 122 006e 1A6B     		ldr	r2, [r3, #48]
 123 0070 02F01002 		and	r2, r2, #16
 124 0074 0592     		str	r2, [sp, #20]
 125              		.loc 1 510 3 view .LVU27
 126 0076 059A     		ldr	r2, [sp, #20]
 127              	.LBE6:
 511:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 128              		.loc 1 511 3 view .LVU28
 129              	.LBB7:
 130              		.loc 1 511 3 view .LVU29
 131 0078 0694     		str	r4, [sp, #24]
 132              		.loc 1 511 3 view .LVU30
 133 007a 1A6B     		ldr	r2, [r3, #48]
 134 007c 42F00802 		orr	r2, r2, #8
 135 0080 1A63     		str	r2, [r3, #48]
 136              		.loc 1 511 3 view .LVU31
 137 0082 1B6B     		ldr	r3, [r3, #48]
 138 0084 03F00803 		and	r3, r3, #8
 139 0088 0693     		str	r3, [sp, #24]
 140              		.loc 1 511 3 view .LVU32
 141 008a 069B     		ldr	r3, [sp, #24]
 142              	.LBE7:
 512:Src/main.c    **** 
 513:Src/main.c    ****   /*Configure GPIO pin Output Level */
 514:Src/main.c    ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 143              		.loc 1 514 3 view .LVU33
 144 008c 2F4F     		ldr	r7, .L3+4
 145 008e 0122     		movs	r2, #1
 146 0090 1146     		mov	r1, r2
 147 0092 3846     		mov	r0, r7
 148 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 149              	.LVL0:
 515:Src/main.c    **** 
 516:Src/main.c    ****   /*Configure GPIO pin Output Level */
 517:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin, GPIO_PIN_RESET);
 150              		.loc 1 517 3 view .LVU34
 151 0098 2D4E     		ldr	r6, .L3+8
 152 009a 2246     		mov	r2, r4
 153 009c 4FF47041 		mov	r1, #61440
 154 00a0 3046     		mov	r0, r6
 155 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 156              	.LVL1:
 518:Src/main.c    **** 
 519:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
 520:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 157              		.loc 1 520 3 view .LVU35
 158              		.loc 1 520 23 is_stmt 0 view .LVU36
 159 00a6 0125     		movs	r5, #1
 160 00a8 0795     		str	r5, [sp, #28]
 521:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 161              		.loc 1 521 3 is_stmt 1 view .LVU37
 162              		.loc 1 521 24 is_stmt 0 view .LVU38
 163 00aa 0895     		str	r5, [sp, #32]
 522:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccXE0sEe.s 			page 13


 164              		.loc 1 522 3 is_stmt 1 view .LVU39
 165              		.loc 1 522 24 is_stmt 0 view .LVU40
 166 00ac 0994     		str	r4, [sp, #36]
 523:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 167              		.loc 1 523 3 is_stmt 1 view .LVU41
 168              		.loc 1 523 25 is_stmt 0 view .LVU42
 169 00ae 0A94     		str	r4, [sp, #40]
 524:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 170              		.loc 1 524 3 is_stmt 1 view .LVU43
 171 00b0 07A9     		add	r1, sp, #28
 172 00b2 3846     		mov	r0, r7
 173 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL2:
 525:Src/main.c    **** 
 526:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 527:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 175              		.loc 1 527 3 view .LVU44
 176              		.loc 1 527 23 is_stmt 0 view .LVU45
 177 00b8 0795     		str	r5, [sp, #28]
 528:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 178              		.loc 1 528 3 is_stmt 1 view .LVU46
 179              		.loc 1 528 24 is_stmt 0 view .LVU47
 180 00ba 264B     		ldr	r3, .L3+12
 181 00bc 0893     		str	r3, [sp, #32]
 529:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 182              		.loc 1 529 3 is_stmt 1 view .LVU48
 183              		.loc 1 529 24 is_stmt 0 view .LVU49
 184 00be 0994     		str	r4, [sp, #36]
 530:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 185              		.loc 1 530 3 is_stmt 1 view .LVU50
 186 00c0 A7F50067 		sub	r7, r7, #2048
 187 00c4 07A9     		add	r1, sp, #28
 188 00c6 3846     		mov	r0, r7
 189 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 190              	.LVL3:
 531:Src/main.c    **** 
 532:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
 533:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 191              		.loc 1 533 3 view .LVU51
 192              		.loc 1 533 23 is_stmt 0 view .LVU52
 193 00cc 0423     		movs	r3, #4
 194 00ce 0793     		str	r3, [sp, #28]
 534:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 195              		.loc 1 534 3 is_stmt 1 view .LVU53
 196              		.loc 1 534 24 is_stmt 0 view .LVU54
 197 00d0 0894     		str	r4, [sp, #32]
 535:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 198              		.loc 1 535 3 is_stmt 1 view .LVU55
 199              		.loc 1 535 24 is_stmt 0 view .LVU56
 200 00d2 0994     		str	r4, [sp, #36]
 536:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 201              		.loc 1 536 3 is_stmt 1 view .LVU57
 202 00d4 07A9     		add	r1, sp, #28
 203 00d6 2048     		ldr	r0, .L3+16
 204 00d8 FFF7FEFF 		bl	HAL_GPIO_Init
 205              	.LVL4:
 537:Src/main.c    **** 
ARM GAS  /tmp/ccXE0sEe.s 			page 14


 538:Src/main.c    ****   /*Configure GPIO pin : PE9 */
 539:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 206              		.loc 1 539 3 view .LVU58
 207              		.loc 1 539 23 is_stmt 0 view .LVU59
 208 00dc 4FF40078 		mov	r8, #512
 209 00e0 CDF81C80 		str	r8, [sp, #28]
 540:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 210              		.loc 1 540 3 is_stmt 1 view .LVU60
 211              		.loc 1 540 24 is_stmt 0 view .LVU61
 212 00e4 1D4B     		ldr	r3, .L3+20
 213 00e6 0893     		str	r3, [sp, #32]
 541:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 214              		.loc 1 541 3 is_stmt 1 view .LVU62
 215              		.loc 1 541 24 is_stmt 0 view .LVU63
 216 00e8 0994     		str	r4, [sp, #36]
 542:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 217              		.loc 1 542 3 is_stmt 1 view .LVU64
 218 00ea 07A9     		add	r1, sp, #28
 219 00ec 1C48     		ldr	r0, .L3+24
 220 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 221              	.LVL5:
 543:Src/main.c    **** 
 544:Src/main.c    ****   /*Configure GPIO pins : LD4_Pin LD3_Pin LD5_Pin LD6_Pin */
 545:Src/main.c    ****   GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin;
 222              		.loc 1 545 3 view .LVU65
 223              		.loc 1 545 23 is_stmt 0 view .LVU66
 224 00f2 4FF47043 		mov	r3, #61440
 225 00f6 0793     		str	r3, [sp, #28]
 546:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 226              		.loc 1 546 3 is_stmt 1 view .LVU67
 227              		.loc 1 546 24 is_stmt 0 view .LVU68
 228 00f8 0895     		str	r5, [sp, #32]
 547:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 229              		.loc 1 547 3 is_stmt 1 view .LVU69
 230              		.loc 1 547 24 is_stmt 0 view .LVU70
 231 00fa 0994     		str	r4, [sp, #36]
 548:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 232              		.loc 1 548 3 is_stmt 1 view .LVU71
 233              		.loc 1 548 25 is_stmt 0 view .LVU72
 234 00fc 0A94     		str	r4, [sp, #40]
 549:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 235              		.loc 1 549 3 is_stmt 1 view .LVU73
 236 00fe 07A9     		add	r1, sp, #28
 237 0100 3046     		mov	r0, r6
 238 0102 FFF7FEFF 		bl	HAL_GPIO_Init
 239              	.LVL6:
 550:Src/main.c    **** 
 551:Src/main.c    ****   /*Configure GPIO pin : VBUS_FS_Pin */
 552:Src/main.c    ****   GPIO_InitStruct.Pin = VBUS_FS_Pin;
 240              		.loc 1 552 3 view .LVU74
 241              		.loc 1 552 23 is_stmt 0 view .LVU75
 242 0106 CDF81C80 		str	r8, [sp, #28]
 553:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 243              		.loc 1 553 3 is_stmt 1 view .LVU76
 244              		.loc 1 553 24 is_stmt 0 view .LVU77
 245 010a 0894     		str	r4, [sp, #32]
 554:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccXE0sEe.s 			page 15


 246              		.loc 1 554 3 is_stmt 1 view .LVU78
 247              		.loc 1 554 24 is_stmt 0 view .LVU79
 248 010c 0994     		str	r4, [sp, #36]
 555:Src/main.c    ****   HAL_GPIO_Init(VBUS_FS_GPIO_Port, &GPIO_InitStruct);
 249              		.loc 1 555 3 is_stmt 1 view .LVU80
 250 010e 07A9     		add	r1, sp, #28
 251 0110 3846     		mov	r0, r7
 252 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 253              	.LVL7:
 556:Src/main.c    **** 
 557:Src/main.c    ****   /*Configure GPIO pins : OTG_FS_ID_Pin OTG_FS_DM_Pin OTG_FS_DP_Pin */
 558:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_ID_Pin|OTG_FS_DM_Pin|OTG_FS_DP_Pin;
 254              		.loc 1 558 3 view .LVU81
 255              		.loc 1 558 23 is_stmt 0 view .LVU82
 256 0116 4FF4E053 		mov	r3, #7168
 257 011a 0793     		str	r3, [sp, #28]
 559:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 258              		.loc 1 559 3 is_stmt 1 view .LVU83
 259              		.loc 1 559 24 is_stmt 0 view .LVU84
 260 011c 0223     		movs	r3, #2
 261 011e 0893     		str	r3, [sp, #32]
 560:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 262              		.loc 1 560 3 is_stmt 1 view .LVU85
 263              		.loc 1 560 24 is_stmt 0 view .LVU86
 264 0120 0994     		str	r4, [sp, #36]
 561:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 265              		.loc 1 561 3 is_stmt 1 view .LVU87
 266              		.loc 1 561 25 is_stmt 0 view .LVU88
 267 0122 0A94     		str	r4, [sp, #40]
 562:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 268              		.loc 1 562 3 is_stmt 1 view .LVU89
 269              		.loc 1 562 29 is_stmt 0 view .LVU90
 270 0124 0A23     		movs	r3, #10
 271 0126 0B93     		str	r3, [sp, #44]
 563:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 272              		.loc 1 563 3 is_stmt 1 view .LVU91
 273 0128 07A9     		add	r1, sp, #28
 274 012a 3846     		mov	r0, r7
 275 012c FFF7FEFF 		bl	HAL_GPIO_Init
 276              	.LVL8:
 564:Src/main.c    **** 
 565:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
 566:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 277              		.loc 1 566 3 view .LVU92
 278              		.loc 1 566 23 is_stmt 0 view .LVU93
 279 0130 2023     		movs	r3, #32
 280 0132 0793     		str	r3, [sp, #28]
 567:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 281              		.loc 1 567 3 is_stmt 1 view .LVU94
 282              		.loc 1 567 24 is_stmt 0 view .LVU95
 283 0134 0894     		str	r4, [sp, #32]
 568:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 284              		.loc 1 568 3 is_stmt 1 view .LVU96
 285              		.loc 1 568 24 is_stmt 0 view .LVU97
 286 0136 0994     		str	r4, [sp, #36]
 569:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 287              		.loc 1 569 3 is_stmt 1 view .LVU98
ARM GAS  /tmp/ccXE0sEe.s 			page 16


 288 0138 07A9     		add	r1, sp, #28
 289 013a 3046     		mov	r0, r6
 290 013c FFF7FEFF 		bl	HAL_GPIO_Init
 291              	.LVL9:
 570:Src/main.c    **** 
 571:Src/main.c    **** }
 292              		.loc 1 571 1 is_stmt 0 view .LVU99
 293 0140 0CB0     		add	sp, sp, #48
 294              	.LCFI2:
 295              		.cfi_def_cfa_offset 24
 296              		@ sp needed
 297 0142 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 298              	.L4:
 299 0146 00BF     		.align	2
 300              	.L3:
 301 0148 00380240 		.word	1073887232
 302 014c 00080240 		.word	1073874944
 303 0150 000C0240 		.word	1073875968
 304 0154 00001210 		.word	269615104
 305 0158 00040240 		.word	1073873920
 306 015c 00001110 		.word	269549568
 307 0160 00100240 		.word	1073876992
 308              		.cfi_endproc
 309              	.LFE144:
 311              		.section	.text.MX_DMA_Init,"ax",%progbits
 312              		.align	1
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	MX_DMA_Init:
 319              	.LFB143:
 481:Src/main.c    ****   /* DMA controller clock enable */
 320              		.loc 1 481 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 8
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 10B5     		push	{r4, lr}
 325              	.LCFI3:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 329 0002 82B0     		sub	sp, sp, #8
 330              	.LCFI4:
 331              		.cfi_def_cfa_offset 16
 483:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 332              		.loc 1 483 3 view .LVU101
 333              	.LBB8:
 483:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 334              		.loc 1 483 3 view .LVU102
 335 0004 0024     		movs	r4, #0
 336 0006 0094     		str	r4, [sp]
 483:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 337              		.loc 1 483 3 view .LVU103
 338 0008 124B     		ldr	r3, .L7
 339 000a 1A6B     		ldr	r2, [r3, #48]
 340 000c 42F40012 		orr	r2, r2, #2097152
ARM GAS  /tmp/ccXE0sEe.s 			page 17


 341 0010 1A63     		str	r2, [r3, #48]
 483:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 342              		.loc 1 483 3 view .LVU104
 343 0012 1A6B     		ldr	r2, [r3, #48]
 344 0014 02F40012 		and	r2, r2, #2097152
 345 0018 0092     		str	r2, [sp]
 483:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 346              		.loc 1 483 3 view .LVU105
 347 001a 009A     		ldr	r2, [sp]
 348              	.LBE8:
 484:Src/main.c    **** 
 349              		.loc 1 484 3 view .LVU106
 350              	.LBB9:
 484:Src/main.c    **** 
 351              		.loc 1 484 3 view .LVU107
 352 001c 0194     		str	r4, [sp, #4]
 484:Src/main.c    **** 
 353              		.loc 1 484 3 view .LVU108
 354 001e 1A6B     		ldr	r2, [r3, #48]
 355 0020 42F48002 		orr	r2, r2, #4194304
 356 0024 1A63     		str	r2, [r3, #48]
 484:Src/main.c    **** 
 357              		.loc 1 484 3 view .LVU109
 358 0026 1B6B     		ldr	r3, [r3, #48]
 359 0028 03F48003 		and	r3, r3, #4194304
 360 002c 0193     		str	r3, [sp, #4]
 484:Src/main.c    **** 
 361              		.loc 1 484 3 view .LVU110
 362 002e 019B     		ldr	r3, [sp, #4]
 363              	.LBE9:
 488:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 364              		.loc 1 488 3 view .LVU111
 365 0030 2246     		mov	r2, r4
 366 0032 2146     		mov	r1, r4
 367 0034 1020     		movs	r0, #16
 368 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 369              	.LVL10:
 489:Src/main.c    ****   /* DMA2_Stream0_IRQn interrupt configuration */
 370              		.loc 1 489 3 view .LVU112
 371 003a 1020     		movs	r0, #16
 372 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 373              	.LVL11:
 491:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 374              		.loc 1 491 3 view .LVU113
 375 0040 2246     		mov	r2, r4
 376 0042 2146     		mov	r1, r4
 377 0044 3820     		movs	r0, #56
 378 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 379              	.LVL12:
 492:Src/main.c    **** 
 380              		.loc 1 492 3 view .LVU114
 381 004a 3820     		movs	r0, #56
 382 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 383              	.LVL13:
 494:Src/main.c    **** 
 384              		.loc 1 494 1 is_stmt 0 view .LVU115
 385 0050 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccXE0sEe.s 			page 18


 386              	.LCFI5:
 387              		.cfi_def_cfa_offset 8
 388              		@ sp needed
 389 0052 10BD     		pop	{r4, pc}
 390              	.L8:
 391              		.align	2
 392              	.L7:
 393 0054 00380240 		.word	1073887232
 394              		.cfi_endproc
 395              	.LFE143:
 397              		.section	.text.MX_ADC1_Init,"ax",%progbits
 398              		.align	1
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv4-sp-d16
 404              	MX_ADC1_Init:
 405              	.LFB139:
 312:Src/main.c    **** 
 406              		.loc 1 312 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 16
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 30B5     		push	{r4, r5, lr}
 411              	.LCFI6:
 412              		.cfi_def_cfa_offset 12
 413              		.cfi_offset 4, -12
 414              		.cfi_offset 5, -8
 415              		.cfi_offset 14, -4
 416 0002 85B0     		sub	sp, sp, #20
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 32
 318:Src/main.c    **** 
 419              		.loc 1 318 3 view .LVU117
 318:Src/main.c    **** 
 420              		.loc 1 318 26 is_stmt 0 view .LVU118
 421 0004 0023     		movs	r3, #0
 422 0006 0093     		str	r3, [sp]
 423 0008 0193     		str	r3, [sp, #4]
 424 000a 0293     		str	r3, [sp, #8]
 425 000c 0393     		str	r3, [sp, #12]
 325:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 426              		.loc 1 325 3 is_stmt 1 view .LVU119
 325:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 427              		.loc 1 325 18 is_stmt 0 view .LVU120
 428 000e 114C     		ldr	r4, .L11
 429 0010 114A     		ldr	r2, .L11+4
 430 0012 2260     		str	r2, [r4]
 326:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 431              		.loc 1 326 3 is_stmt 1 view .LVU121
 326:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 432              		.loc 1 326 29 is_stmt 0 view .LVU122
 433 0014 4FF48032 		mov	r2, #65536
 434 0018 6260     		str	r2, [r4, #4]
 327:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 435              		.loc 1 327 3 is_stmt 1 view .LVU123
 327:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
ARM GAS  /tmp/ccXE0sEe.s 			page 19


 436              		.loc 1 327 25 is_stmt 0 view .LVU124
 437 001a A360     		str	r3, [r4, #8]
 328:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 438              		.loc 1 328 3 is_stmt 1 view .LVU125
 328:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 439              		.loc 1 328 27 is_stmt 0 view .LVU126
 440 001c 2361     		str	r3, [r4, #16]
 329:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 441              		.loc 1 329 3 is_stmt 1 view .LVU127
 329:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 442              		.loc 1 329 33 is_stmt 0 view .LVU128
 443 001e 2376     		strb	r3, [r4, #24]
 330:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 444              		.loc 1 330 3 is_stmt 1 view .LVU129
 330:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 445              		.loc 1 330 36 is_stmt 0 view .LVU130
 446 0020 84F82030 		strb	r3, [r4, #32]
 331:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 447              		.loc 1 331 3 is_stmt 1 view .LVU131
 331:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 448              		.loc 1 331 35 is_stmt 0 view .LVU132
 449 0024 4FF08052 		mov	r2, #268435456
 450 0028 E262     		str	r2, [r4, #44]
 332:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 451              		.loc 1 332 3 is_stmt 1 view .LVU133
 332:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 452              		.loc 1 332 31 is_stmt 0 view .LVU134
 453 002a 4FF0C062 		mov	r2, #100663296
 454 002e A262     		str	r2, [r4, #40]
 333:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 455              		.loc 1 333 3 is_stmt 1 view .LVU135
 333:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 456              		.loc 1 333 24 is_stmt 0 view .LVU136
 457 0030 E360     		str	r3, [r4, #12]
 334:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 458              		.loc 1 334 3 is_stmt 1 view .LVU137
 334:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 459              		.loc 1 334 30 is_stmt 0 view .LVU138
 460 0032 0125     		movs	r5, #1
 461 0034 E561     		str	r5, [r4, #28]
 335:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 462              		.loc 1 335 3 is_stmt 1 view .LVU139
 335:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 463              		.loc 1 335 36 is_stmt 0 view .LVU140
 464 0036 84F83050 		strb	r5, [r4, #48]
 336:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 465              		.loc 1 336 3 is_stmt 1 view .LVU141
 336:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 466              		.loc 1 336 27 is_stmt 0 view .LVU142
 467 003a 6561     		str	r5, [r4, #20]
 337:Src/main.c    ****   {
 468              		.loc 1 337 3 is_stmt 1 view .LVU143
 337:Src/main.c    ****   {
 469              		.loc 1 337 7 is_stmt 0 view .LVU144
 470 003c 2046     		mov	r0, r4
 471 003e FFF7FEFF 		bl	HAL_ADC_Init
 472              	.LVL14:
ARM GAS  /tmp/ccXE0sEe.s 			page 20


 343:Src/main.c    ****   sConfig.Rank = 1;
 473              		.loc 1 343 3 is_stmt 1 view .LVU145
 343:Src/main.c    ****   sConfig.Rank = 1;
 474              		.loc 1 343 19 is_stmt 0 view .LVU146
 475 0042 0095     		str	r5, [sp]
 344:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 476              		.loc 1 344 3 is_stmt 1 view .LVU147
 344:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 477              		.loc 1 344 16 is_stmt 0 view .LVU148
 478 0044 0195     		str	r5, [sp, #4]
 345:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 479              		.loc 1 345 3 is_stmt 1 view .LVU149
 345:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 480              		.loc 1 345 24 is_stmt 0 view .LVU150
 481 0046 0295     		str	r5, [sp, #8]
 346:Src/main.c    ****   {
 482              		.loc 1 346 3 is_stmt 1 view .LVU151
 346:Src/main.c    ****   {
 483              		.loc 1 346 7 is_stmt 0 view .LVU152
 484 0048 6946     		mov	r1, sp
 485 004a 2046     		mov	r0, r4
 486 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 487              	.LVL15:
 354:Src/main.c    **** 
 488              		.loc 1 354 1 view .LVU153
 489 0050 05B0     		add	sp, sp, #20
 490              	.LCFI8:
 491              		.cfi_def_cfa_offset 12
 492              		@ sp needed
 493 0052 30BD     		pop	{r4, r5, pc}
 494              	.L12:
 495              		.align	2
 496              	.L11:
 497 0054 00000000 		.word	hadc1
 498 0058 00200140 		.word	1073815552
 499              		.cfi_endproc
 500              	.LFE139:
 502              		.section	.text.MX_DAC_Init,"ax",%progbits
 503              		.align	1
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 507              		.fpu fpv4-sp-d16
 509              	MX_DAC_Init:
 510              	.LFB140:
 362:Src/main.c    **** 
 511              		.loc 1 362 1 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 8
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515 0000 30B5     		push	{r4, r5, lr}
 516              	.LCFI9:
 517              		.cfi_def_cfa_offset 12
 518              		.cfi_offset 4, -12
 519              		.cfi_offset 5, -8
 520              		.cfi_offset 14, -4
 521 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccXE0sEe.s 			page 21


 522              	.LCFI10:
 523              		.cfi_def_cfa_offset 24
 368:Src/main.c    **** 
 524              		.loc 1 368 3 view .LVU155
 368:Src/main.c    **** 
 525              		.loc 1 368 26 is_stmt 0 view .LVU156
 526 0004 0024     		movs	r4, #0
 527 0006 0094     		str	r4, [sp]
 528 0008 0194     		str	r4, [sp, #4]
 375:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 529              		.loc 1 375 3 is_stmt 1 view .LVU157
 375:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 530              		.loc 1 375 17 is_stmt 0 view .LVU158
 531 000a 084D     		ldr	r5, .L15
 532 000c 084B     		ldr	r3, .L15+4
 533 000e 2B60     		str	r3, [r5]
 376:Src/main.c    ****   {
 534              		.loc 1 376 3 is_stmt 1 view .LVU159
 376:Src/main.c    ****   {
 535              		.loc 1 376 7 is_stmt 0 view .LVU160
 536 0010 2846     		mov	r0, r5
 537 0012 FFF7FEFF 		bl	HAL_DAC_Init
 538              	.LVL16:
 382:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 539              		.loc 1 382 3 is_stmt 1 view .LVU161
 382:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 540              		.loc 1 382 23 is_stmt 0 view .LVU162
 541 0016 2423     		movs	r3, #36
 542 0018 0093     		str	r3, [sp]
 383:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 543              		.loc 1 383 3 is_stmt 1 view .LVU163
 383:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 544              		.loc 1 383 28 is_stmt 0 view .LVU164
 545 001a 0194     		str	r4, [sp, #4]
 384:Src/main.c    ****   {
 546              		.loc 1 384 3 is_stmt 1 view .LVU165
 384:Src/main.c    ****   {
 547              		.loc 1 384 7 is_stmt 0 view .LVU166
 548 001c 2246     		mov	r2, r4
 549 001e 6946     		mov	r1, sp
 550 0020 2846     		mov	r0, r5
 551 0022 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 552              	.LVL17:
 392:Src/main.c    **** 
 553              		.loc 1 392 1 view .LVU167
 554 0026 03B0     		add	sp, sp, #12
 555              	.LCFI11:
 556              		.cfi_def_cfa_offset 12
 557              		@ sp needed
 558 0028 30BD     		pop	{r4, r5, pc}
 559              	.L16:
 560 002a 00BF     		.align	2
 561              	.L15:
 562 002c 00000000 		.word	hdac
 563 0030 00740040 		.word	1073771520
 564              		.cfi_endproc
 565              	.LFE140:
ARM GAS  /tmp/ccXE0sEe.s 			page 22


 567              		.section	.text.MX_TIM2_Init,"ax",%progbits
 568              		.align	1
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv4-sp-d16
 574              	MX_TIM2_Init:
 575              	.LFB141:
 400:Src/main.c    **** 
 576              		.loc 1 400 1 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 24
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580 0000 30B5     		push	{r4, r5, lr}
 581              	.LCFI12:
 582              		.cfi_def_cfa_offset 12
 583              		.cfi_offset 4, -12
 584              		.cfi_offset 5, -8
 585              		.cfi_offset 14, -4
 586 0002 87B0     		sub	sp, sp, #28
 587              	.LCFI13:
 588              		.cfi_def_cfa_offset 40
 406:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 589              		.loc 1 406 3 view .LVU169
 406:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 590              		.loc 1 406 26 is_stmt 0 view .LVU170
 591 0004 0024     		movs	r4, #0
 592 0006 0294     		str	r4, [sp, #8]
 593 0008 0394     		str	r4, [sp, #12]
 594 000a 0494     		str	r4, [sp, #16]
 595 000c 0594     		str	r4, [sp, #20]
 407:Src/main.c    **** 
 596              		.loc 1 407 3 is_stmt 1 view .LVU171
 407:Src/main.c    **** 
 597              		.loc 1 407 27 is_stmt 0 view .LVU172
 598 000e 0094     		str	r4, [sp]
 599 0010 0194     		str	r4, [sp, #4]
 412:Src/main.c    ****   htim2.Init.Prescaler = 0;
 600              		.loc 1 412 3 is_stmt 1 view .LVU173
 412:Src/main.c    ****   htim2.Init.Prescaler = 0;
 601              		.loc 1 412 18 is_stmt 0 view .LVU174
 602 0012 0F4D     		ldr	r5, .L19
 603 0014 4FF08043 		mov	r3, #1073741824
 604 0018 2B60     		str	r3, [r5]
 413:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 605              		.loc 1 413 3 is_stmt 1 view .LVU175
 413:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 606              		.loc 1 413 24 is_stmt 0 view .LVU176
 607 001a 6C60     		str	r4, [r5, #4]
 414:Src/main.c    ****   htim2.Init.Period = (84000000 / SAMPLING_FREQ);
 608              		.loc 1 414 3 is_stmt 1 view .LVU177
 414:Src/main.c    ****   htim2.Init.Period = (84000000 / SAMPLING_FREQ);
 609              		.loc 1 414 26 is_stmt 0 view .LVU178
 610 001c AC60     		str	r4, [r5, #8]
 415:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 611              		.loc 1 415 3 is_stmt 1 view .LVU179
 415:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccXE0sEe.s 			page 23


 612              		.loc 1 415 21 is_stmt 0 view .LVU180
 613 001e 4FF42F73 		mov	r3, #700
 614 0022 EB60     		str	r3, [r5, #12]
 416:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 615              		.loc 1 416 3 is_stmt 1 view .LVU181
 416:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 616              		.loc 1 416 28 is_stmt 0 view .LVU182
 617 0024 2C61     		str	r4, [r5, #16]
 417:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 618              		.loc 1 417 3 is_stmt 1 view .LVU183
 417:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 619              		.loc 1 417 32 is_stmt 0 view .LVU184
 620 0026 AC61     		str	r4, [r5, #24]
 418:Src/main.c    ****   {
 621              		.loc 1 418 3 is_stmt 1 view .LVU185
 418:Src/main.c    ****   {
 622              		.loc 1 418 7 is_stmt 0 view .LVU186
 623 0028 2846     		mov	r0, r5
 624 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 625              	.LVL18:
 422:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 626              		.loc 1 422 3 is_stmt 1 view .LVU187
 422:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 627              		.loc 1 422 34 is_stmt 0 view .LVU188
 628 002e 4FF48053 		mov	r3, #4096
 629 0032 0293     		str	r3, [sp, #8]
 423:Src/main.c    ****   {
 630              		.loc 1 423 3 is_stmt 1 view .LVU189
 423:Src/main.c    ****   {
 631              		.loc 1 423 7 is_stmt 0 view .LVU190
 632 0034 02A9     		add	r1, sp, #8
 633 0036 2846     		mov	r0, r5
 634 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 635              	.LVL19:
 427:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 636              		.loc 1 427 3 is_stmt 1 view .LVU191
 427:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 637              		.loc 1 427 37 is_stmt 0 view .LVU192
 638 003c 2023     		movs	r3, #32
 639 003e 0093     		str	r3, [sp]
 428:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 640              		.loc 1 428 3 is_stmt 1 view .LVU193
 428:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 641              		.loc 1 428 33 is_stmt 0 view .LVU194
 642 0040 0194     		str	r4, [sp, #4]
 429:Src/main.c    ****   {
 643              		.loc 1 429 3 is_stmt 1 view .LVU195
 429:Src/main.c    ****   {
 644              		.loc 1 429 7 is_stmt 0 view .LVU196
 645 0042 6946     		mov	r1, sp
 646 0044 2846     		mov	r0, r5
 647 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 648              	.LVL20:
 437:Src/main.c    **** 
 649              		.loc 1 437 1 view .LVU197
 650 004a 07B0     		add	sp, sp, #28
 651              	.LCFI14:
ARM GAS  /tmp/ccXE0sEe.s 			page 24


 652              		.cfi_def_cfa_offset 12
 653              		@ sp needed
 654 004c 30BD     		pop	{r4, r5, pc}
 655              	.L20:
 656 004e 00BF     		.align	2
 657              	.L19:
 658 0050 00000000 		.word	htim2
 659              		.cfi_endproc
 660              	.LFE141:
 662              		.section	.text.MX_TIM6_Init,"ax",%progbits
 663              		.align	1
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu fpv4-sp-d16
 669              	MX_TIM6_Init:
 670              	.LFB142:
 445:Src/main.c    **** 
 671              		.loc 1 445 1 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 8
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 0000 30B5     		push	{r4, r5, lr}
 676              	.LCFI15:
 677              		.cfi_def_cfa_offset 12
 678              		.cfi_offset 4, -12
 679              		.cfi_offset 5, -8
 680              		.cfi_offset 14, -4
 681 0002 83B0     		sub	sp, sp, #12
 682              	.LCFI16:
 683              		.cfi_def_cfa_offset 24
 451:Src/main.c    **** 
 684              		.loc 1 451 3 view .LVU199
 451:Src/main.c    **** 
 685              		.loc 1 451 27 is_stmt 0 view .LVU200
 686 0004 0024     		movs	r4, #0
 687 0006 0094     		str	r4, [sp]
 688 0008 0194     		str	r4, [sp, #4]
 456:Src/main.c    ****   htim6.Init.Prescaler = 0;
 689              		.loc 1 456 3 is_stmt 1 view .LVU201
 456:Src/main.c    ****   htim6.Init.Prescaler = 0;
 690              		.loc 1 456 18 is_stmt 0 view .LVU202
 691 000a 094D     		ldr	r5, .L23
 692 000c 094B     		ldr	r3, .L23+4
 693 000e 2B60     		str	r3, [r5]
 457:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 694              		.loc 1 457 3 is_stmt 1 view .LVU203
 457:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 695              		.loc 1 457 24 is_stmt 0 view .LVU204
 696 0010 6C60     		str	r4, [r5, #4]
 458:Src/main.c    ****   htim6.Init.Period = 0;
 697              		.loc 1 458 3 is_stmt 1 view .LVU205
 458:Src/main.c    ****   htim6.Init.Period = 0;
 698              		.loc 1 458 26 is_stmt 0 view .LVU206
 699 0012 AC60     		str	r4, [r5, #8]
 459:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 700              		.loc 1 459 3 is_stmt 1 view .LVU207
ARM GAS  /tmp/ccXE0sEe.s 			page 25


 459:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 701              		.loc 1 459 21 is_stmt 0 view .LVU208
 702 0014 EC60     		str	r4, [r5, #12]
 460:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 703              		.loc 1 460 3 is_stmt 1 view .LVU209
 460:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 704              		.loc 1 460 32 is_stmt 0 view .LVU210
 705 0016 AC61     		str	r4, [r5, #24]
 461:Src/main.c    ****   {
 706              		.loc 1 461 3 is_stmt 1 view .LVU211
 461:Src/main.c    ****   {
 707              		.loc 1 461 7 is_stmt 0 view .LVU212
 708 0018 2846     		mov	r0, r5
 709 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 710              	.LVL21:
 465:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 711              		.loc 1 465 3 is_stmt 1 view .LVU213
 465:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 712              		.loc 1 465 37 is_stmt 0 view .LVU214
 713 001e 0094     		str	r4, [sp]
 466:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 714              		.loc 1 466 3 is_stmt 1 view .LVU215
 466:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 715              		.loc 1 466 33 is_stmt 0 view .LVU216
 716 0020 0194     		str	r4, [sp, #4]
 467:Src/main.c    ****   {
 717              		.loc 1 467 3 is_stmt 1 view .LVU217
 467:Src/main.c    ****   {
 718              		.loc 1 467 7 is_stmt 0 view .LVU218
 719 0022 6946     		mov	r1, sp
 720 0024 2846     		mov	r0, r5
 721 0026 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 722              	.LVL22:
 475:Src/main.c    **** 
 723              		.loc 1 475 1 view .LVU219
 724 002a 03B0     		add	sp, sp, #12
 725              	.LCFI17:
 726              		.cfi_def_cfa_offset 12
 727              		@ sp needed
 728 002c 30BD     		pop	{r4, r5, pc}
 729              	.L24:
 730 002e 00BF     		.align	2
 731              	.L23:
 732 0030 00000000 		.word	htim6
 733 0034 00100040 		.word	1073745920
 734              		.cfi_endproc
 735              	.LFE142:
 737              		.section	.text.StartADC,"ax",%progbits
 738              		.align	1
 739              		.global	StartADC
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv4-sp-d16
 745              	StartADC:
 746              	.LFB134:
 228:Src/main.c    **** 	// Start ADC.
ARM GAS  /tmp/ccXE0sEe.s 			page 26


 747              		.loc 1 228 1 is_stmt 1 view -0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751 0000 08B5     		push	{r3, lr}
 752              	.LCFI18:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 3, -8
 755              		.cfi_offset 14, -4
 230:Src/main.c    **** 			BUFFER_ELEMENT_COUNT) != HAL_OK)
 756              		.loc 1 230 2 view .LVU221
 230:Src/main.c    **** 			BUFFER_ELEMENT_COUNT) != HAL_OK)
 757              		.loc 1 230 5 is_stmt 0 view .LVU222
 758 0002 43F69822 		movw	r2, #15000
 759 0006 0349     		ldr	r1, .L29
 760 0008 0348     		ldr	r0, .L29+4
 761 000a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 762              	.LVL23:
 230:Src/main.c    **** 			BUFFER_ELEMENT_COUNT) != HAL_OK)
 763              		.loc 1 230 4 view .LVU223
 764 000e 00B1     		cbz	r0, .L25
 765              	.L27:
 233:Src/main.c    **** 	}
 766              		.loc 1 233 3 is_stmt 1 discriminator 1 view .LVU224
 233:Src/main.c    **** 	}
 767              		.loc 1 233 11 discriminator 1 view .LVU225
 768 0010 FEE7     		b	.L27
 769              	.L25:
 235:Src/main.c    **** 
 770              		.loc 1 235 1 is_stmt 0 view .LVU226
 771 0012 08BD     		pop	{r3, pc}
 772              	.L30:
 773              		.align	2
 774              	.L29:
 775 0014 00000000 		.word	ADCBuffer
 776 0018 00000000 		.word	hadc1
 777              		.cfi_endproc
 778              	.LFE134:
 780              		.section	.text.StartDAC,"ax",%progbits
 781              		.align	1
 782              		.global	StartDAC
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu fpv4-sp-d16
 788              	StartDAC:
 789              	.LFB135:
 238:Src/main.c    **** 	// Start DAC.
 790              		.loc 1 238 1 is_stmt 1 view -0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794 0000 00B5     		push	{lr}
 795              	.LCFI19:
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 14, -4
 798 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccXE0sEe.s 			page 27


 799              	.LCFI20:
 800              		.cfi_def_cfa_offset 16
 240:Src/main.c    **** 			(uint32_t *)DACTable, BUFFER_ELEMENT_COUNT, DAC_ALIGN_12B_R) != HAL_OK)
 801              		.loc 1 240 2 view .LVU228
 240:Src/main.c    **** 			(uint32_t *)DACTable, BUFFER_ELEMENT_COUNT, DAC_ALIGN_12B_R) != HAL_OK)
 802              		.loc 1 240 6 is_stmt 0 view .LVU229
 803 0004 0021     		movs	r1, #0
 804 0006 0091     		str	r1, [sp]
 805 0008 43F69823 		movw	r3, #15000
 806 000c 044A     		ldr	r2, .L35
 807 000e 0548     		ldr	r0, .L35+4
 808 0010 FFF7FEFF 		bl	HAL_DAC_Start_DMA
 809              	.LVL24:
 240:Src/main.c    **** 			(uint32_t *)DACTable, BUFFER_ELEMENT_COUNT, DAC_ALIGN_12B_R) != HAL_OK)
 810              		.loc 1 240 5 view .LVU230
 811 0014 00B1     		cbz	r0, .L31
 812              	.L33:
 243:Src/main.c    **** 	}
 813              		.loc 1 243 3 is_stmt 1 discriminator 1 view .LVU231
 243:Src/main.c    **** 	}
 814              		.loc 1 243 11 discriminator 1 view .LVU232
 815 0016 FEE7     		b	.L33
 816              	.L31:
 245:Src/main.c    **** 
 817              		.loc 1 245 1 is_stmt 0 view .LVU233
 818 0018 03B0     		add	sp, sp, #12
 819              	.LCFI21:
 820              		.cfi_def_cfa_offset 4
 821              		@ sp needed
 822 001a 5DF804FB 		ldr	pc, [sp], #4
 823              	.L36:
 824 001e 00BF     		.align	2
 825              	.L35:
 826 0020 00000000 		.word	DACTable
 827 0024 00000000 		.word	hdac
 828              		.cfi_endproc
 829              	.LFE135:
 831              		.section	.text.StartMasterTimer,"ax",%progbits
 832              		.align	1
 833              		.global	StartMasterTimer
 834              		.syntax unified
 835              		.thumb
 836              		.thumb_func
 837              		.fpu fpv4-sp-d16
 839              	StartMasterTimer:
 840              	.LFB136:
 248:Src/main.c    **** 	// Start time base.
 841              		.loc 1 248 1 is_stmt 1 view -0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845 0000 08B5     		push	{r3, lr}
 846              	.LCFI22:
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 3, -8
 849              		.cfi_offset 14, -4
 250:Src/main.c    **** 	{
ARM GAS  /tmp/ccXE0sEe.s 			page 28


 850              		.loc 1 250 2 view .LVU235
 250:Src/main.c    **** 	{
 851              		.loc 1 250 5 is_stmt 0 view .LVU236
 852 0002 0348     		ldr	r0, .L41
 853 0004 FFF7FEFF 		bl	HAL_TIM_Base_Start
 854              	.LVL25:
 250:Src/main.c    **** 	{
 855              		.loc 1 250 4 view .LVU237
 856 0008 00B1     		cbz	r0, .L37
 857              	.L39:
 252:Src/main.c    **** 	}
 858              		.loc 1 252 3 is_stmt 1 discriminator 1 view .LVU238
 252:Src/main.c    **** 	}
 859              		.loc 1 252 11 discriminator 1 view .LVU239
 860 000a FEE7     		b	.L39
 861              	.L37:
 254:Src/main.c    **** 
 862              		.loc 1 254 1 is_stmt 0 view .LVU240
 863 000c 08BD     		pop	{r3, pc}
 864              	.L42:
 865 000e 00BF     		.align	2
 866              	.L41:
 867 0010 00000000 		.word	htim2
 868              		.cfi_endproc
 869              	.LFE136:
 871              		.section	.text.StopMasterTimer,"ax",%progbits
 872              		.align	1
 873              		.global	StopMasterTimer
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	StopMasterTimer:
 880              	.LFB137:
 257:Src/main.c    **** 	if (HAL_TIM_Base_Stop(&htim2) != HAL_OK)
 881              		.loc 1 257 1 is_stmt 1 view -0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885 0000 08B5     		push	{r3, lr}
 886              	.LCFI23:
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 3, -8
 889              		.cfi_offset 14, -4
 258:Src/main.c    **** 	{
 890              		.loc 1 258 2 view .LVU242
 258:Src/main.c    **** 	{
 891              		.loc 1 258 6 is_stmt 0 view .LVU243
 892 0002 0348     		ldr	r0, .L47
 893 0004 FFF7FEFF 		bl	HAL_TIM_Base_Stop
 894              	.LVL26:
 258:Src/main.c    **** 	{
 895              		.loc 1 258 5 view .LVU244
 896 0008 00B1     		cbz	r0, .L43
 897              	.L45:
 260:Src/main.c    **** 	}
 898              		.loc 1 260 3 is_stmt 1 discriminator 1 view .LVU245
ARM GAS  /tmp/ccXE0sEe.s 			page 29


 260:Src/main.c    **** 	}
 899              		.loc 1 260 12 discriminator 1 view .LVU246
 900 000a FEE7     		b	.L45
 901              	.L43:
 262:Src/main.c    **** 
 902              		.loc 1 262 1 is_stmt 0 view .LVU247
 903 000c 08BD     		pop	{r3, pc}
 904              	.L48:
 905 000e 00BF     		.align	2
 906              	.L47:
 907 0010 00000000 		.word	htim2
 908              		.cfi_endproc
 909              	.LFE137:
 911              		.section	.text.SystemClock_Config,"ax",%progbits
 912              		.align	1
 913              		.global	SystemClock_Config
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 917              		.fpu fpv4-sp-d16
 919              	SystemClock_Config:
 920              	.LFB138:
 269:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 921              		.loc 1 269 1 is_stmt 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 80
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925 0000 30B5     		push	{r4, r5, lr}
 926              	.LCFI24:
 927              		.cfi_def_cfa_offset 12
 928              		.cfi_offset 4, -12
 929              		.cfi_offset 5, -8
 930              		.cfi_offset 14, -4
 931 0002 95B0     		sub	sp, sp, #84
 932              	.LCFI25:
 933              		.cfi_def_cfa_offset 96
 270:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 934              		.loc 1 270 3 view .LVU249
 270:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 935              		.loc 1 270 22 is_stmt 0 view .LVU250
 936 0004 3022     		movs	r2, #48
 937 0006 0021     		movs	r1, #0
 938 0008 08A8     		add	r0, sp, #32
 939 000a FFF7FEFF 		bl	memset
 940              	.LVL27:
 271:Src/main.c    **** 
 941              		.loc 1 271 3 is_stmt 1 view .LVU251
 271:Src/main.c    **** 
 942              		.loc 1 271 22 is_stmt 0 view .LVU252
 943 000e 0024     		movs	r4, #0
 944 0010 0394     		str	r4, [sp, #12]
 945 0012 0494     		str	r4, [sp, #16]
 946 0014 0594     		str	r4, [sp, #20]
 947 0016 0694     		str	r4, [sp, #24]
 948 0018 0794     		str	r4, [sp, #28]
 275:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 949              		.loc 1 275 3 is_stmt 1 view .LVU253
ARM GAS  /tmp/ccXE0sEe.s 			page 30


 950              	.LBB10:
 275:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 951              		.loc 1 275 3 view .LVU254
 952 001a 0194     		str	r4, [sp, #4]
 275:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 953              		.loc 1 275 3 view .LVU255
 954 001c 1C4B     		ldr	r3, .L51
 955 001e 1A6C     		ldr	r2, [r3, #64]
 956 0020 42F08052 		orr	r2, r2, #268435456
 957 0024 1A64     		str	r2, [r3, #64]
 275:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 958              		.loc 1 275 3 view .LVU256
 959 0026 1B6C     		ldr	r3, [r3, #64]
 960 0028 03F08053 		and	r3, r3, #268435456
 961 002c 0193     		str	r3, [sp, #4]
 275:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 962              		.loc 1 275 3 view .LVU257
 963 002e 019B     		ldr	r3, [sp, #4]
 964              	.LBE10:
 276:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 965              		.loc 1 276 3 view .LVU258
 966              	.LBB11:
 276:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 967              		.loc 1 276 3 view .LVU259
 968 0030 0294     		str	r4, [sp, #8]
 276:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 969              		.loc 1 276 3 view .LVU260
 970 0032 184B     		ldr	r3, .L51+4
 971 0034 1A68     		ldr	r2, [r3]
 972 0036 42F48042 		orr	r2, r2, #16384
 973 003a 1A60     		str	r2, [r3]
 276:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 974              		.loc 1 276 3 view .LVU261
 975 003c 1B68     		ldr	r3, [r3]
 976 003e 03F48043 		and	r3, r3, #16384
 977 0042 0293     		str	r3, [sp, #8]
 276:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 978              		.loc 1 276 3 view .LVU262
 979 0044 029B     		ldr	r3, [sp, #8]
 980              	.LBE11:
 279:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 981              		.loc 1 279 3 view .LVU263
 279:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 982              		.loc 1 279 36 is_stmt 0 view .LVU264
 983 0046 0123     		movs	r3, #1
 984 0048 0893     		str	r3, [sp, #32]
 280:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 985              		.loc 1 280 3 is_stmt 1 view .LVU265
 280:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 986              		.loc 1 280 30 is_stmt 0 view .LVU266
 987 004a 4FF48033 		mov	r3, #65536
 988 004e 0993     		str	r3, [sp, #36]
 281:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 989              		.loc 1 281 3 is_stmt 1 view .LVU267
 281:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 990              		.loc 1 281 34 is_stmt 0 view .LVU268
 991 0050 0225     		movs	r5, #2
ARM GAS  /tmp/ccXE0sEe.s 			page 31


 992 0052 0E95     		str	r5, [sp, #56]
 282:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 993              		.loc 1 282 3 is_stmt 1 view .LVU269
 282:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 994              		.loc 1 282 35 is_stmt 0 view .LVU270
 995 0054 4FF48003 		mov	r3, #4194304
 996 0058 0F93     		str	r3, [sp, #60]
 283:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 997              		.loc 1 283 3 is_stmt 1 view .LVU271
 283:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 998              		.loc 1 283 30 is_stmt 0 view .LVU272
 999 005a 0823     		movs	r3, #8
 1000 005c 1093     		str	r3, [sp, #64]
 284:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1001              		.loc 1 284 3 is_stmt 1 view .LVU273
 284:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1002              		.loc 1 284 30 is_stmt 0 view .LVU274
 1003 005e 4FF4A873 		mov	r3, #336
 1004 0062 1193     		str	r3, [sp, #68]
 285:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1005              		.loc 1 285 3 is_stmt 1 view .LVU275
 285:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1006              		.loc 1 285 30 is_stmt 0 view .LVU276
 1007 0064 1295     		str	r5, [sp, #72]
 286:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1008              		.loc 1 286 3 is_stmt 1 view .LVU277
 286:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1009              		.loc 1 286 30 is_stmt 0 view .LVU278
 1010 0066 0723     		movs	r3, #7
 1011 0068 1393     		str	r3, [sp, #76]
 287:Src/main.c    ****   {
 1012              		.loc 1 287 3 is_stmt 1 view .LVU279
 287:Src/main.c    ****   {
 1013              		.loc 1 287 7 is_stmt 0 view .LVU280
 1014 006a 08A8     		add	r0, sp, #32
 1015 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1016              	.LVL28:
 293:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1017              		.loc 1 293 3 is_stmt 1 view .LVU281
 293:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1018              		.loc 1 293 31 is_stmt 0 view .LVU282
 1019 0070 0F23     		movs	r3, #15
 1020 0072 0393     		str	r3, [sp, #12]
 295:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1021              		.loc 1 295 3 is_stmt 1 view .LVU283
 295:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1022              		.loc 1 295 34 is_stmt 0 view .LVU284
 1023 0074 0495     		str	r5, [sp, #16]
 296:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1024              		.loc 1 296 3 is_stmt 1 view .LVU285
 296:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1025              		.loc 1 296 35 is_stmt 0 view .LVU286
 1026 0076 0594     		str	r4, [sp, #20]
 297:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1027              		.loc 1 297 3 is_stmt 1 view .LVU287
 297:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1028              		.loc 1 297 36 is_stmt 0 view .LVU288
ARM GAS  /tmp/ccXE0sEe.s 			page 32


 1029 0078 4FF4A053 		mov	r3, #5120
 1030 007c 0693     		str	r3, [sp, #24]
 298:Src/main.c    **** 
 1031              		.loc 1 298 3 is_stmt 1 view .LVU289
 298:Src/main.c    **** 
 1032              		.loc 1 298 36 is_stmt 0 view .LVU290
 1033 007e 4FF48053 		mov	r3, #4096
 1034 0082 0793     		str	r3, [sp, #28]
 300:Src/main.c    ****   {
 1035              		.loc 1 300 3 is_stmt 1 view .LVU291
 300:Src/main.c    ****   {
 1036              		.loc 1 300 7 is_stmt 0 view .LVU292
 1037 0084 0521     		movs	r1, #5
 1038 0086 03A8     		add	r0, sp, #12
 1039 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1040              	.LVL29:
 304:Src/main.c    **** 
 1041              		.loc 1 304 1 view .LVU293
 1042 008c 15B0     		add	sp, sp, #84
 1043              	.LCFI26:
 1044              		.cfi_def_cfa_offset 12
 1045              		@ sp needed
 1046 008e 30BD     		pop	{r4, r5, pc}
 1047              	.L52:
 1048              		.align	2
 1049              	.L51:
 1050 0090 00380240 		.word	1073887232
 1051 0094 00700040 		.word	1073770496
 1052              		.cfi_endproc
 1053              	.LFE138:
 1055              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1056              		.align	1
 1057              		.global	HAL_ADC_ConvHalfCpltCallback
 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1061              		.fpu fpv4-sp-d16
 1063              	HAL_ADC_ConvHalfCpltCallback:
 1064              	.LVL30:
 1065              	.LFB145:
 572:Src/main.c    **** 
 573:Src/main.c    **** /* USER CODE BEGIN 4 */
 574:Src/main.c    **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 575:Src/main.c    **** {
 1066              		.loc 1 575 1 is_stmt 1 view -0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 0
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070              		@ link register save eliminated.
 576:Src/main.c    ****   /* Prevent unused argument(s) compilation warning */
 577:Src/main.c    ****   UNUSED(hadc);
 1071              		.loc 1 577 3 view .LVU295
 578:Src/main.c    ****   Flags |= TRANSFER_COMPLETED_EVT;
 1072              		.loc 1 578 3 view .LVU296
 1073              		.loc 1 578 9 is_stmt 0 view .LVU297
 1074 0000 024A     		ldr	r2, .L54
 1075 0002 1388     		ldrh	r3, [r2]
ARM GAS  /tmp/ccXE0sEe.s 			page 33


 1076 0004 43F00103 		orr	r3, r3, #1
 1077 0008 1380     		strh	r3, [r2]	@ movhi
 579:Src/main.c    **** }
 1078              		.loc 1 579 1 view .LVU298
 1079 000a 7047     		bx	lr
 1080              	.L55:
 1081              		.align	2
 1082              	.L54:
 1083 000c 00000000 		.word	Flags
 1084              		.cfi_endproc
 1085              	.LFE145:
 1087              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1088              		.align	1
 1089              		.global	HAL_ADC_ConvCpltCallback
 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
 1093              		.fpu fpv4-sp-d16
 1095              	HAL_ADC_ConvCpltCallback:
 1096              	.LVL31:
 1097              	.LFB146:
 580:Src/main.c    **** 
 581:Src/main.c    **** /* USER CODE BEGIN 4 */
 582:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 583:Src/main.c    **** {
 1098              		.loc 1 583 1 is_stmt 1 view -0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 0
 1101              		@ frame_needed = 0, uses_anonymous_args = 0
 1102              		@ link register save eliminated.
 584:Src/main.c    ****   /* Prevent unused argument(s) compilation warning */
 585:Src/main.c    ****   UNUSED(hadc);
 1103              		.loc 1 585 3 view .LVU300
 586:Src/main.c    ****   Flags |= TRANSFER_COMPLETED_EVT;
 1104              		.loc 1 586 3 view .LVU301
 1105              		.loc 1 586 9 is_stmt 0 view .LVU302
 1106 0000 024A     		ldr	r2, .L57
 1107 0002 1388     		ldrh	r3, [r2]
 1108 0004 43F00103 		orr	r3, r3, #1
 1109 0008 1380     		strh	r3, [r2]	@ movhi
 587:Src/main.c    **** }
 1110              		.loc 1 587 1 view .LVU303
 1111 000a 7047     		bx	lr
 1112              	.L58:
 1113              		.align	2
 1114              	.L57:
 1115 000c 00000000 		.word	Flags
 1116              		.cfi_endproc
 1117              	.LFE146:
 1119              		.section	.text.Error_Handler,"ax",%progbits
 1120              		.align	1
 1121              		.global	Error_Handler
 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1125              		.fpu fpv4-sp-d16
 1127              	Error_Handler:
ARM GAS  /tmp/ccXE0sEe.s 			page 34


 1128              	.LFB147:
 588:Src/main.c    **** /* USER CODE END 4 */
 589:Src/main.c    **** 
 590:Src/main.c    **** /**
 591:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 592:Src/main.c    ****   * @retval None
 593:Src/main.c    ****   */
 594:Src/main.c    **** void Error_Handler(void)
 595:Src/main.c    **** {
 1129              		.loc 1 595 1 is_stmt 1 view -0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 1133              		@ link register save eliminated.
 596:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 597:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 598:Src/main.c    **** 
 599:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 600:Src/main.c    **** }
 1134              		.loc 1 600 1 view .LVU305
 1135 0000 7047     		bx	lr
 1136              		.cfi_endproc
 1137              	.LFE147:
 1139              		.global	__aeabi_f2d
 1140              		.global	__aeabi_d2f
 1141              		.section	.text.CalculateFreqResponse,"ax",%progbits
 1142              		.align	1
 1143              		.global	CalculateFreqResponse
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv4-sp-d16
 1149              	CalculateFreqResponse:
 1150              	.LVL32:
 1151              	.LFB148:
 601:Src/main.c    **** 
 602:Src/main.c    **** void CalculateFreqResponse(Complex_t *respVector, uint16_t startFreq, uint16_t freqSteps,
 603:Src/main.c    **** 				  uint16_t numOfFreqs, uint32_t samplingFreq, uint16_t carrierFreq,
 604:Src/main.c    **** 				  uint16_t *buffer, uint16_t elementCount)
 605:Src/main.c    **** {
 1152              		.loc 1 605 1 view -0
 1153              		.cfi_startproc
 1154              		@ args = 16, pretend = 0, frame = 16
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              		.loc 1 605 1 is_stmt 0 view .LVU307
 1157 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1158              	.LCFI27:
 1159              		.cfi_def_cfa_offset 36
 1160              		.cfi_offset 4, -36
 1161              		.cfi_offset 5, -32
 1162              		.cfi_offset 6, -28
 1163              		.cfi_offset 7, -24
 1164              		.cfi_offset 8, -20
 1165              		.cfi_offset 9, -16
 1166              		.cfi_offset 10, -12
 1167              		.cfi_offset 11, -8
 1168              		.cfi_offset 14, -4
ARM GAS  /tmp/ccXE0sEe.s 			page 35


 1169 0004 2DED068B 		vpush.64	{d8, d9, d10}
 1170              	.LCFI28:
 1171              		.cfi_def_cfa_offset 60
 1172              		.cfi_offset 80, -60
 1173              		.cfi_offset 81, -56
 1174              		.cfi_offset 82, -52
 1175              		.cfi_offset 83, -48
 1176              		.cfi_offset 84, -44
 1177              		.cfi_offset 85, -40
 1178 0008 85B0     		sub	sp, sp, #20
 1179              	.LCFI29:
 1180              		.cfi_def_cfa_offset 80
 1181 000a 8246     		mov	r10, r0
 1182 000c 8946     		mov	r9, r1
 1183 000e 9046     		mov	r8, r2
 1184 0010 1F46     		mov	r7, r3
 1185 0012 169D     		ldr	r5, [sp, #88]
 1186 0014 BDF85C40 		ldrh	r4, [sp, #92]
 606:Src/main.c    **** 	const float two_pi = 2 * 3.1415926535897;
 1187              		.loc 1 606 2 is_stmt 1 view .LVU308
 1188              	.LVL33:
 607:Src/main.c    **** 	float intermediate_signal;
 1189              		.loc 1 607 2 view .LVU309
 608:Src/main.c    **** 	float sum_x;
 1190              		.loc 1 608 2 view .LVU310
 609:Src/main.c    **** 	float sum_y;
 1191              		.loc 1 609 2 view .LVU311
 610:Src/main.c    **** 	float tmp_x;
 1192              		.loc 1 610 2 view .LVU312
 611:Src/main.c    **** 	Complex_t carrier_phasor;
 1193              		.loc 1 611 2 view .LVU313
 612:Src/main.c    **** 	Complex_t if_phasor;
 1194              		.loc 1 612 2 view .LVU314
 613:Src/main.c    **** 	Complex_t carrier_rotate;
 1195              		.loc 1 613 2 view .LVU315
 614:Src/main.c    **** 	Complex_t if_rotate;
 1196              		.loc 1 614 2 view .LVU316
 615:Src/main.c    **** 
 616:Src/main.c    **** 	carrier_rotate.real = cos((two_pi * carrierFreq) / samplingFreq);
 1197              		.loc 1 616 2 view .LVU317
 1198              		.loc 1 616 36 is_stmt 0 view .LVU318
 1199 0018 BDF85430 		ldrh	r3, [sp, #84]
 1200              	.LVL34:
 1201              		.loc 1 616 36 view .LVU319
 1202 001c 07EE903A 		vmov	s15, r3	@ int
 1203 0020 F8EEE77A 		vcvt.f32.s32	s15, s15
 1204 0024 9FED577A 		vldr.32	s14, .L68
 1205 0028 67EE877A 		vmul.f32	s15, s15, s14
 1206              		.loc 1 616 51 view .LVU320
 1207 002c 9DED147A 		vldr.32	s14, [sp, #80]	@ int
 1208 0030 F8EE479A 		vcvt.f32.u32	s19, s14
 1209              		.loc 1 616 24 view .LVU321
 1210 0034 C7EEA97A 		vdiv.f32	s15, s15, s19
 1211 0038 17EE900A 		vmov	r0, s15
 1212              	.LVL35:
 1213              		.loc 1 616 24 view .LVU322
 1214 003c FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  /tmp/ccXE0sEe.s 			page 36


 1215              	.LVL36:
 1216              		.loc 1 616 24 view .LVU323
 1217 0040 41EC180B 		vmov	d8, r0, r1
 1218 0044 41EC100B 		vmov	d0, r0, r1
 1219 0048 FFF7FEFF 		bl	cos
 1220              	.LVL37:
 1221 004c 51EC100B 		vmov	r0, r1, d0
 1222 0050 FFF7FEFF 		bl	__aeabi_d2f
 1223              	.LVL38:
 1224 0054 09EE100A 		vmov	s18, r0
 617:Src/main.c    **** 	carrier_rotate.img = -sin((two_pi * carrierFreq) / samplingFreq);
 1225              		.loc 1 617 2 is_stmt 1 view .LVU324
 1226              		.loc 1 617 24 is_stmt 0 view .LVU325
 1227 0058 B0EE480A 		vmov.f32	s0, s16
 1228 005c F0EE680A 		vmov.f32	s1, s17
 1229 0060 FFF7FEFF 		bl	sin
 1230              	.LVL39:
 1231 0064 51EC100B 		vmov	r0, r1, d0
 1232 0068 FFF7FEFF 		bl	__aeabi_d2f
 1233              	.LVL40:
 1234              		.loc 1 617 21 view .LVU326
 1235 006c 07EE900A 		vmov	s15, r0
 1236 0070 F1EE678A 		vneg.f32	s17, s15
 618:Src/main.c    **** 
 619:Src/main.c    **** 	// Demodulate and find frequency response.
 620:Src/main.c    **** 	for (uint16_t i = 0; i < numOfFreqs; i++)
 1237              		.loc 1 620 2 is_stmt 1 view .LVU327
 1238              	.LBB12:
 1239              		.loc 1 620 7 view .LVU328
 1240              	.LVL41:
 1241              		.loc 1 620 16 is_stmt 0 view .LVU329
 1242 0074 0026     		movs	r6, #0
 1243              		.loc 1 620 2 view .LVU330
 1244 0076 07E0     		b	.L61
 1245              	.LVL42:
 1246              	.L67:
 621:Src/main.c    **** 	{
 622:Src/main.c    **** 		sum_x = 0;
 623:Src/main.c    **** 		sum_y = 0;
 624:Src/main.c    **** 
 625:Src/main.c    **** 		carrier_phasor.real = 1.0;
 626:Src/main.c    **** 		carrier_phasor.img = 0.0;
 627:Src/main.c    **** 		if_phasor.real = 1.0;
 628:Src/main.c    **** 		if_phasor.img = 0.0;
 629:Src/main.c    **** 
 630:Src/main.c    **** 		if_rotate.real = cos((two_pi * (startFreq + freqSteps * i)) / samplingFreq);
 631:Src/main.c    **** 		if_rotate.img = -sin((two_pi * (startFreq + freqSteps * i)) / samplingFreq);
 632:Src/main.c    **** 
 633:Src/main.c    **** 		for (uint16_t j = 0; j < elementCount; j++)
 634:Src/main.c    **** 		{
 635:Src/main.c    **** 			intermediate_signal = buffer[j] * carrier_phasor.real;
 636:Src/main.c    **** 
 637:Src/main.c    **** 			sum_x += intermediate_signal * if_phasor.real;
 638:Src/main.c    **** 			sum_y += intermediate_signal * if_phasor.img;
 639:Src/main.c    **** 
 640:Src/main.c    **** 			// Rotate carrier and intermediate signal.
 641:Src/main.c    **** 			tmp_x = carrier_phasor.real * carrier_rotate.real - carrier_phasor.img * carrier_rotate.img;
ARM GAS  /tmp/ccXE0sEe.s 			page 37


 642:Src/main.c    **** 			carrier_phasor.img = carrier_phasor.real * carrier_rotate.img + carrier_phasor.img * carrier_rot
 643:Src/main.c    **** 			carrier_phasor.real = tmp_x;
 644:Src/main.c    **** 
 645:Src/main.c    **** 			tmp_x = if_phasor.real * if_rotate.real - if_phasor.img * if_rotate.img;
 646:Src/main.c    **** 			if_phasor.img  = if_phasor.real * if_rotate.img + if_phasor.img * if_rotate.real;
 647:Src/main.c    **** 			if_phasor.real = tmp_x;
 648:Src/main.c    **** 		}
 649:Src/main.c    **** 
 650:Src/main.c    **** 		respVector[i].real = sum_x;
 1247              		.loc 1 650 3 is_stmt 1 discriminator 2 view .LVU331
 1248              		.loc 1 650 13 is_stmt 0 discriminator 2 view .LVU332
 1249 0078 0AEBC603 		add	r3, r10, r6, lsl #3
 1250              	.LVL43:
 1251              		.loc 1 650 22 discriminator 2 view .LVU333
 1252 007c 83ED005A 		vstr.32	s10, [r3]
 651:Src/main.c    **** 		respVector[i].img = sum_y;
 1253              		.loc 1 651 3 is_stmt 1 discriminator 2 view .LVU334
 1254              		.loc 1 651 21 is_stmt 0 discriminator 2 view .LVU335
 1255 0080 C3ED014A 		vstr.32	s9, [r3, #4]
 620:Src/main.c    **** 	{
 1256              		.loc 1 620 40 discriminator 2 view .LVU336
 1257 0084 0136     		adds	r6, r6, #1
 1258              	.LVL44:
 620:Src/main.c    **** 	{
 1259              		.loc 1 620 40 discriminator 2 view .LVU337
 1260 0086 B6B2     		uxth	r6, r6
 1261              	.LVL45:
 1262              	.L61:
 620:Src/main.c    **** 	{
 1263              		.loc 1 620 2 discriminator 1 view .LVU338
 1264 0088 BE42     		cmp	r6, r7
 1265 008a 75D2     		bcs	.L66
 622:Src/main.c    **** 		sum_y = 0;
 1266              		.loc 1 622 3 is_stmt 1 view .LVU339
 1267              	.LVL46:
 623:Src/main.c    **** 
 1268              		.loc 1 623 3 view .LVU340
 625:Src/main.c    **** 		carrier_phasor.img = 0.0;
 1269              		.loc 1 625 3 view .LVU341
 625:Src/main.c    **** 		carrier_phasor.img = 0.0;
 1270              		.loc 1 625 23 is_stmt 0 view .LVU342
 1271 008c 4FF07E53 		mov	r3, #1065353216
 1272 0090 0293     		str	r3, [sp, #8]	@ float
 626:Src/main.c    **** 		if_phasor.real = 1.0;
 1273              		.loc 1 626 3 is_stmt 1 view .LVU343
 626:Src/main.c    **** 		if_phasor.real = 1.0;
 1274              		.loc 1 626 22 is_stmt 0 view .LVU344
 1275 0092 4FF0000B 		mov	fp, #0
 1276 0096 CDF80CB0 		str	fp, [sp, #12]	@ float
 627:Src/main.c    **** 		if_phasor.img = 0.0;
 1277              		.loc 1 627 3 is_stmt 1 view .LVU345
 627:Src/main.c    **** 		if_phasor.img = 0.0;
 1278              		.loc 1 627 18 is_stmt 0 view .LVU346
 1279 009a 0093     		str	r3, [sp]	@ float
 628:Src/main.c    **** 
 1280              		.loc 1 628 3 is_stmt 1 view .LVU347
 628:Src/main.c    **** 
ARM GAS  /tmp/ccXE0sEe.s 			page 38


 1281              		.loc 1 628 17 is_stmt 0 view .LVU348
 1282 009c CDF804B0 		str	fp, [sp, #4]	@ float
 630:Src/main.c    **** 		if_rotate.img = -sin((two_pi * (startFreq + freqSteps * i)) / samplingFreq);
 1283              		.loc 1 630 3 is_stmt 1 view .LVU349
 630:Src/main.c    **** 		if_rotate.img = -sin((two_pi * (startFreq + freqSteps * i)) / samplingFreq);
 1284              		.loc 1 630 45 is_stmt 0 view .LVU350
 1285 00a0 06FB0893 		mla	r3, r6, r8, r9
 1286 00a4 07EE903A 		vmov	s15, r3	@ int
 630:Src/main.c    **** 		if_rotate.img = -sin((two_pi * (startFreq + freqSteps * i)) / samplingFreq);
 1287              		.loc 1 630 32 view .LVU351
 1288 00a8 F8EEE77A 		vcvt.f32.s32	s15, s15
 1289 00ac 9FED357A 		vldr.32	s14, .L68
 1290 00b0 67EE877A 		vmul.f32	s15, s15, s14
 630:Src/main.c    **** 		if_rotate.img = -sin((two_pi * (startFreq + freqSteps * i)) / samplingFreq);
 1291              		.loc 1 630 20 view .LVU352
 1292 00b4 C7EEA97A 		vdiv.f32	s15, s15, s19
 1293 00b8 17EE900A 		vmov	r0, s15
 1294 00bc FFF7FEFF 		bl	__aeabi_f2d
 1295              	.LVL47:
 1296 00c0 41EC1A0B 		vmov	d10, r0, r1
 1297 00c4 41EC100B 		vmov	d0, r0, r1
 1298 00c8 FFF7FEFF 		bl	cos
 1299              	.LVL48:
 1300 00cc 51EC100B 		vmov	r0, r1, d0
 1301 00d0 FFF7FEFF 		bl	__aeabi_d2f
 1302              	.LVL49:
 1303 00d4 08EE100A 		vmov	s16, r0
 631:Src/main.c    **** 
 1304              		.loc 1 631 3 is_stmt 1 view .LVU353
 631:Src/main.c    **** 
 1305              		.loc 1 631 20 is_stmt 0 view .LVU354
 1306 00d8 B0EE4A0A 		vmov.f32	s0, s20
 1307 00dc F0EE6A0A 		vmov.f32	s1, s21
 1308 00e0 FFF7FEFF 		bl	sin
 1309              	.LVL50:
 1310 00e4 51EC100B 		vmov	r0, r1, d0
 1311 00e8 FFF7FEFF 		bl	__aeabi_d2f
 1312              	.LVL51:
 631:Src/main.c    **** 
 1313              		.loc 1 631 17 view .LVU355
 1314 00ec 07EE900A 		vmov	s15, r0
 1315 00f0 B1EE674A 		vneg.f32	s8, s15
 633:Src/main.c    **** 		{
 1316              		.loc 1 633 3 is_stmt 1 view .LVU356
 1317              	.LBB13:
 633:Src/main.c    **** 		{
 1318              		.loc 1 633 8 view .LVU357
 1319              	.LVL52:
 633:Src/main.c    **** 		{
 1320              		.loc 1 633 17 is_stmt 0 view .LVU358
 1321 00f4 0023     		movs	r3, #0
 1322              	.LBE13:
 623:Src/main.c    **** 
 1323              		.loc 1 623 9 view .LVU359
 1324 00f6 04EE90BA 		vmov	s9, fp
 622:Src/main.c    **** 		sum_y = 0;
 1325              		.loc 1 622 9 view .LVU360
ARM GAS  /tmp/ccXE0sEe.s 			page 39


 1326 00fa 05EE10BA 		vmov	s10, fp
 1327              	.LVL53:
 1328              	.L62:
 1329              	.LBB14:
 633:Src/main.c    **** 		{
 1330              		.loc 1 633 3 discriminator 1 view .LVU361
 1331 00fe A342     		cmp	r3, r4
 1332 0100 BAD2     		bcs	.L67
 635:Src/main.c    **** 
 1333              		.loc 1 635 4 is_stmt 1 discriminator 3 view .LVU362
 635:Src/main.c    **** 
 1334              		.loc 1 635 32 is_stmt 0 discriminator 3 view .LVU363
 1335 0102 35F81320 		ldrh	r2, [r5, r3, lsl #1]
 1336 0106 07EE902A 		vmov	s15, r2	@ int
 635:Src/main.c    **** 
 1337              		.loc 1 635 36 discriminator 3 view .LVU364
 1338 010a F8EEE77A 		vcvt.f32.s32	s15, s15
 635:Src/main.c    **** 
 1339              		.loc 1 635 52 discriminator 3 view .LVU365
 1340 010e DDED026A 		vldr.32	s13, [sp, #8]
 635:Src/main.c    **** 
 1341              		.loc 1 635 24 discriminator 3 view .LVU366
 1342 0112 67EEA67A 		vmul.f32	s15, s15, s13
 1343              	.LVL54:
 637:Src/main.c    **** 			sum_y += intermediate_signal * if_phasor.img;
 1344              		.loc 1 637 4 is_stmt 1 discriminator 3 view .LVU367
 637:Src/main.c    **** 			sum_y += intermediate_signal * if_phasor.img;
 1345              		.loc 1 637 44 is_stmt 0 discriminator 3 view .LVU368
 1346 0116 9DED007A 		vldr.32	s14, [sp]
 637:Src/main.c    **** 			sum_y += intermediate_signal * if_phasor.img;
 1347              		.loc 1 637 33 discriminator 3 view .LVU369
 1348 011a 27EE276A 		vmul.f32	s12, s14, s15
 637:Src/main.c    **** 			sum_y += intermediate_signal * if_phasor.img;
 1349              		.loc 1 637 10 discriminator 3 view .LVU370
 1350 011e 35EE065A 		vadd.f32	s10, s10, s12
 1351              	.LVL55:
 638:Src/main.c    **** 
 1352              		.loc 1 638 4 is_stmt 1 discriminator 3 view .LVU371
 638:Src/main.c    **** 
 1353              		.loc 1 638 44 is_stmt 0 discriminator 3 view .LVU372
 1354 0122 9DED016A 		vldr.32	s12, [sp, #4]
 638:Src/main.c    **** 
 1355              		.loc 1 638 33 discriminator 3 view .LVU373
 1356 0126 66EE277A 		vmul.f32	s15, s12, s15
 1357              	.LVL56:
 638:Src/main.c    **** 
 1358              		.loc 1 638 10 discriminator 3 view .LVU374
 1359 012a 74EEA74A 		vadd.f32	s9, s9, s15
 1360              	.LVL57:
 641:Src/main.c    **** 			carrier_phasor.img = carrier_phasor.real * carrier_rotate.img + carrier_phasor.img * carrier_rot
 1361              		.loc 1 641 4 is_stmt 1 discriminator 3 view .LVU375
 641:Src/main.c    **** 			carrier_phasor.img = carrier_phasor.real * carrier_rotate.img + carrier_phasor.img * carrier_rot
 1362              		.loc 1 641 32 is_stmt 0 discriminator 3 view .LVU376
 1363 012e 69EE265A 		vmul.f32	s11, s18, s13
 641:Src/main.c    **** 			carrier_phasor.img = carrier_phasor.real * carrier_rotate.img + carrier_phasor.img * carrier_rot
 1364              		.loc 1 641 70 discriminator 3 view .LVU377
 1365 0132 DDED037A 		vldr.32	s15, [sp, #12]
ARM GAS  /tmp/ccXE0sEe.s 			page 40


 641:Src/main.c    **** 			carrier_phasor.img = carrier_phasor.real * carrier_rotate.img + carrier_phasor.img * carrier_rot
 1366              		.loc 1 641 75 discriminator 3 view .LVU378
 1367 0136 68EEA73A 		vmul.f32	s7, s17, s15
 641:Src/main.c    **** 			carrier_phasor.img = carrier_phasor.real * carrier_rotate.img + carrier_phasor.img * carrier_rot
 1368              		.loc 1 641 10 discriminator 3 view .LVU379
 1369 013a 75EEE35A 		vsub.f32	s11, s11, s7
 1370              	.LVL58:
 642:Src/main.c    **** 			carrier_phasor.real = tmp_x;
 1371              		.loc 1 642 4 is_stmt 1 discriminator 3 view .LVU380
 642:Src/main.c    **** 			carrier_phasor.real = tmp_x;
 1372              		.loc 1 642 45 is_stmt 0 discriminator 3 view .LVU381
 1373 013e 68EEA66A 		vmul.f32	s13, s17, s13
 1374              	.LVL59:
 642:Src/main.c    **** 			carrier_phasor.real = tmp_x;
 1375              		.loc 1 642 87 discriminator 3 view .LVU382
 1376 0142 69EE277A 		vmul.f32	s15, s18, s15
 642:Src/main.c    **** 			carrier_phasor.real = tmp_x;
 1377              		.loc 1 642 66 discriminator 3 view .LVU383
 1378 0146 76EEA76A 		vadd.f32	s13, s13, s15
 642:Src/main.c    **** 			carrier_phasor.real = tmp_x;
 1379              		.loc 1 642 23 discriminator 3 view .LVU384
 1380 014a CDED036A 		vstr.32	s13, [sp, #12]
 643:Src/main.c    **** 
 1381              		.loc 1 643 4 is_stmt 1 discriminator 3 view .LVU385
 643:Src/main.c    **** 
 1382              		.loc 1 643 24 is_stmt 0 discriminator 3 view .LVU386
 1383 014e CDED025A 		vstr.32	s11, [sp, #8]
 1384              	.LVL60:
 645:Src/main.c    **** 			if_phasor.img  = if_phasor.real * if_rotate.img + if_phasor.img * if_rotate.real;
 1385              		.loc 1 645 4 is_stmt 1 discriminator 3 view .LVU387
 645:Src/main.c    **** 			if_phasor.img  = if_phasor.real * if_rotate.img + if_phasor.img * if_rotate.real;
 1386              		.loc 1 645 27 is_stmt 0 discriminator 3 view .LVU388
 1387 0152 68EE077A 		vmul.f32	s15, s16, s14
 645:Src/main.c    **** 			if_phasor.img  = if_phasor.real * if_rotate.img + if_phasor.img * if_rotate.real;
 1388              		.loc 1 645 60 discriminator 3 view .LVU389
 1389 0156 64EE066A 		vmul.f32	s13, s8, s12
 645:Src/main.c    **** 			if_phasor.img  = if_phasor.real * if_rotate.img + if_phasor.img * if_rotate.real;
 1390              		.loc 1 645 10 discriminator 3 view .LVU390
 1391 015a 77EEE67A 		vsub.f32	s15, s15, s13
 1392              	.LVL61:
 646:Src/main.c    **** 			if_phasor.real = tmp_x;
 1393              		.loc 1 646 4 is_stmt 1 discriminator 3 view .LVU391
 646:Src/main.c    **** 			if_phasor.real = tmp_x;
 1394              		.loc 1 646 36 is_stmt 0 discriminator 3 view .LVU392
 1395 015e 24EE077A 		vmul.f32	s14, s8, s14
 646:Src/main.c    **** 			if_phasor.real = tmp_x;
 1396              		.loc 1 646 68 discriminator 3 view .LVU393
 1397 0162 28EE066A 		vmul.f32	s12, s16, s12
 646:Src/main.c    **** 			if_phasor.real = tmp_x;
 1398              		.loc 1 646 52 discriminator 3 view .LVU394
 1399 0166 37EE067A 		vadd.f32	s14, s14, s12
 646:Src/main.c    **** 			if_phasor.real = tmp_x;
 1400              		.loc 1 646 19 discriminator 3 view .LVU395
 1401 016a 8DED017A 		vstr.32	s14, [sp, #4]
 647:Src/main.c    **** 		}
 1402              		.loc 1 647 4 is_stmt 1 discriminator 3 view .LVU396
 647:Src/main.c    **** 		}
ARM GAS  /tmp/ccXE0sEe.s 			page 41


 1403              		.loc 1 647 19 is_stmt 0 discriminator 3 view .LVU397
 1404 016e CDED007A 		vstr.32	s15, [sp]
 633:Src/main.c    **** 		{
 1405              		.loc 1 633 43 discriminator 3 view .LVU398
 1406 0172 0133     		adds	r3, r3, #1
 1407              	.LVL62:
 633:Src/main.c    **** 		{
 1408              		.loc 1 633 43 discriminator 3 view .LVU399
 1409 0174 9BB2     		uxth	r3, r3
 1410              	.LVL63:
 633:Src/main.c    **** 		{
 1411              		.loc 1 633 43 discriminator 3 view .LVU400
 1412 0176 C2E7     		b	.L62
 1413              	.LVL64:
 1414              	.L66:
 633:Src/main.c    **** 		{
 1415              		.loc 1 633 43 discriminator 3 view .LVU401
 1416              	.LBE14:
 1417              	.LBE12:
 652:Src/main.c    **** 	}
 653:Src/main.c    **** }
 1418              		.loc 1 653 1 view .LVU402
 1419 0178 05B0     		add	sp, sp, #20
 1420              	.LCFI30:
 1421              		.cfi_def_cfa_offset 60
 1422              		@ sp needed
 1423 017a BDEC068B 		vldm	sp!, {d8-d10}
 1424              	.LCFI31:
 1425              		.cfi_restore 84
 1426              		.cfi_restore 85
 1427              		.cfi_restore 82
 1428              		.cfi_restore 83
 1429              		.cfi_restore 80
 1430              		.cfi_restore 81
 1431              		.cfi_def_cfa_offset 36
 1432 017e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1433              	.LVL65:
 1434              	.L69:
 1435              		.loc 1 653 1 view .LVU403
 1436 0182 00BF     		.align	2
 1437              	.L68:
 1438 0184 DB0FC940 		.word	1086918619
 1439              		.cfi_endproc
 1440              	.LFE148:
 1442              		.section	.text.CreateDACTable,"ax",%progbits
 1443              		.align	1
 1444              		.global	CreateDACTable
 1445              		.syntax unified
 1446              		.thumb
 1447              		.thumb_func
 1448              		.fpu fpv4-sp-d16
 1450              	CreateDACTable:
 1451              	.LVL66:
 1452              	.LFB149:
 654:Src/main.c    **** 
 655:Src/main.c    **** void CreateDACTable(uint16_t startFreq, uint16_t freqSteps, uint16_t numOfFreqs,
 656:Src/main.c    **** 				    uint32_t samplingFreq, uint32_t carrierFreq, uint16_t *table,
ARM GAS  /tmp/ccXE0sEe.s 			page 42


 657:Src/main.c    **** 					uint16_t *elementCount)
 658:Src/main.c    **** {
 1453              		.loc 1 658 1 is_stmt 1 view -0
 1454              		.cfi_startproc
 1455              		@ args = 12, pretend = 0, frame = 32
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              		.loc 1 658 1 is_stmt 0 view .LVU405
 1458 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1459              	.LCFI32:
 1460              		.cfi_def_cfa_offset 20
 1461              		.cfi_offset 4, -20
 1462              		.cfi_offset 5, -16
 1463              		.cfi_offset 6, -12
 1464              		.cfi_offset 7, -8
 1465              		.cfi_offset 14, -4
 1466 0002 2DED0A8B 		vpush.64	{d8, d9, d10, d11, d12}
 1467              	.LCFI33:
 1468              		.cfi_def_cfa_offset 60
 1469              		.cfi_offset 80, -60
 1470              		.cfi_offset 81, -56
 1471              		.cfi_offset 82, -52
 1472              		.cfi_offset 83, -48
 1473              		.cfi_offset 84, -44
 1474              		.cfi_offset 85, -40
 1475              		.cfi_offset 86, -36
 1476              		.cfi_offset 87, -32
 1477              		.cfi_offset 88, -28
 1478              		.cfi_offset 89, -24
 1479 0006 89B0     		sub	sp, sp, #36
 1480              	.LCFI34:
 1481              		.cfi_def_cfa_offset 96
 1482 0008 0F46     		mov	r7, r1
 1483 000a 1446     		mov	r4, r2
 1484 000c 199E     		ldr	r6, [sp, #100]
 659:Src/main.c    **** 	uint16_t __element_count;
 1485              		.loc 1 659 2 is_stmt 1 view .LVU406
 660:Src/main.c    **** 	uint16_t dac_value;
 1486              		.loc 1 660 2 view .LVU407
 661:Src/main.c    **** 	Complex_t start_freq_phasor;
 1487              		.loc 1 661 2 view .LVU408
 662:Src/main.c    **** 	Complex_t start_freq_rotate;
 1488              		.loc 1 662 2 view .LVU409
 663:Src/main.c    **** 	Complex_t freq_step_phasor;
 1489              		.loc 1 663 2 view .LVU410
 664:Src/main.c    **** 	Complex_t freq_step_rotate;
 1490              		.loc 1 664 2 view .LVU411
 665:Src/main.c    **** 	Complex_t diff_freq_phasor;
 1491              		.loc 1 665 2 view .LVU412
 666:Src/main.c    **** 	Complex_t carrier_phasor;
 1492              		.loc 1 666 2 view .LVU413
 667:Src/main.c    **** 	Complex_t carrier_rotate;
 1493              		.loc 1 667 2 view .LVU414
 668:Src/main.c    **** 
 669:Src/main.c    **** 	float tmp_x;
 1494              		.loc 1 669 2 view .LVU415
 670:Src/main.c    **** 	float sum;
 1495              		.loc 1 670 2 view .LVU416
ARM GAS  /tmp/ccXE0sEe.s 			page 43


 671:Src/main.c    **** 	const float two_pi = 2 * 3.1415926535897;
 1496              		.loc 1 671 2 view .LVU417
 1497              	.LVL67:
 672:Src/main.c    **** 	const float safety_scale = 0.999;
 1498              		.loc 1 672 2 view .LVU418
 673:Src/main.c    **** 	float scale;
 1499              		.loc 1 673 2 view .LVU419
 674:Src/main.c    **** 
 675:Src/main.c    **** 	__element_count = samplingFreq / freqSteps;
 1500              		.loc 1 675 2 view .LVU420
 1501              		.loc 1 675 33 is_stmt 0 view .LVU421
 1502 000e B3FBF1F5 		udiv	r5, r3, r1
 1503              		.loc 1 675 18 view .LVU422
 1504 0012 ADB2     		uxth	r5, r5
 1505              	.LVL68:
 676:Src/main.c    **** 
 677:Src/main.c    **** 	scale = safety_scale / numOfFreqs;
 1506              		.loc 1 677 2 is_stmt 1 view .LVU423
 1507              		.loc 1 677 23 is_stmt 0 view .LVU424
 1508 0014 07EE902A 		vmov	s15, r2	@ int
 1509 0018 F8EEE77A 		vcvt.f32.s32	s15, s15
 1510              		.loc 1 677 8 view .LVU425
 1511 001c 9FED7F7A 		vldr.32	s14, .L78
 1512 0020 C7EE279A 		vdiv.f32	s19, s14, s15
 1513              	.LVL69:
 678:Src/main.c    **** 
 679:Src/main.c    **** 	carrier_phasor.real = 1.0;
 1514              		.loc 1 679 2 is_stmt 1 view .LVU426
 1515              		.loc 1 679 22 is_stmt 0 view .LVU427
 1516 0024 4FF07E51 		mov	r1, #1065353216
 1517              	.LVL70:
 1518              		.loc 1 679 22 view .LVU428
 1519 0028 0091     		str	r1, [sp]	@ float
 680:Src/main.c    **** 	carrier_phasor.img = 0.0;
 1520              		.loc 1 680 2 is_stmt 1 view .LVU429
 1521              		.loc 1 680 21 is_stmt 0 view .LVU430
 1522 002a 0022     		movs	r2, #0
 1523              	.LVL71:
 1524              		.loc 1 680 21 view .LVU431
 1525 002c 0192     		str	r2, [sp, #4]	@ float
 681:Src/main.c    **** 	start_freq_phasor.real = 1.0;
 1526              		.loc 1 681 2 is_stmt 1 view .LVU432
 1527              		.loc 1 681 25 is_stmt 0 view .LVU433
 1528 002e 0691     		str	r1, [sp, #24]	@ float
 682:Src/main.c    **** 	start_freq_phasor.img = 0.0;
 1529              		.loc 1 682 2 is_stmt 1 view .LVU434
 1530              		.loc 1 682 24 is_stmt 0 view .LVU435
 1531 0030 0792     		str	r2, [sp, #28]	@ float
 683:Src/main.c    **** 	freq_step_phasor.real = 1.0;
 1532              		.loc 1 683 2 is_stmt 1 view .LVU436
 1533              		.loc 1 683 24 is_stmt 0 view .LVU437
 1534 0032 0491     		str	r1, [sp, #16]	@ float
 684:Src/main.c    **** 	freq_step_phasor.img = 0.0;
 1535              		.loc 1 684 2 is_stmt 1 view .LVU438
 1536              		.loc 1 684 23 is_stmt 0 view .LVU439
 1537 0034 0592     		str	r2, [sp, #20]	@ float
 685:Src/main.c    **** 
ARM GAS  /tmp/ccXE0sEe.s 			page 44


 686:Src/main.c    **** 	start_freq_rotate.real = cos(two_pi * startFreq / samplingFreq);
 1538              		.loc 1 686 2 is_stmt 1 view .LVU440
 1539              		.loc 1 686 38 is_stmt 0 view .LVU441
 1540 0036 07EE900A 		vmov	s15, r0	@ int
 1541 003a F8EEE77A 		vcvt.f32.s32	s15, s15
 1542 003e 9FED78CA 		vldr.32	s24, .L78+4
 1543 0042 67EE8C7A 		vmul.f32	s15, s15, s24
 1544              		.loc 1 686 50 view .LVU442
 1545 0046 07EE103A 		vmov	s14, r3	@ int
 1546 004a B8EE47BA 		vcvt.f32.u32	s22, s14
 1547              		.loc 1 686 27 view .LVU443
 1548 004e C7EE8B7A 		vdiv.f32	s15, s15, s22
 1549 0052 17EE900A 		vmov	r0, s15
 1550              	.LVL72:
 1551              		.loc 1 686 27 view .LVU444
 1552 0056 FFF7FEFF 		bl	__aeabi_f2d
 1553              	.LVL73:
 1554              		.loc 1 686 27 view .LVU445
 1555 005a 41EC180B 		vmov	d8, r0, r1
 1556 005e 41EC100B 		vmov	d0, r0, r1
 1557 0062 FFF7FEFF 		bl	cos
 1558              	.LVL74:
 1559 0066 51EC100B 		vmov	r0, r1, d0
 1560 006a FFF7FEFF 		bl	__aeabi_d2f
 1561              	.LVL75:
 1562 006e 09EE100A 		vmov	s18, r0
 687:Src/main.c    **** 	start_freq_rotate.img = sin(two_pi * startFreq / samplingFreq);
 1563              		.loc 1 687 2 is_stmt 1 view .LVU446
 1564              		.loc 1 687 26 is_stmt 0 view .LVU447
 1565 0072 B0EE480A 		vmov.f32	s0, s16
 1566 0076 F0EE680A 		vmov.f32	s1, s17
 1567 007a FFF7FEFF 		bl	sin
 1568              	.LVL76:
 1569 007e 51EC100B 		vmov	r0, r1, d0
 1570 0082 FFF7FEFF 		bl	__aeabi_d2f
 1571              	.LVL77:
 1572 0086 08EE900A 		vmov	s17, r0
 688:Src/main.c    **** 	freq_step_rotate.real = cos(two_pi * freqSteps / samplingFreq);
 1573              		.loc 1 688 2 is_stmt 1 view .LVU448
 1574              		.loc 1 688 37 is_stmt 0 view .LVU449
 1575 008a 07EE907A 		vmov	s15, r7	@ int
 1576 008e F8EEE77A 		vcvt.f32.s32	s15, s15
 1577 0092 67EE8C7A 		vmul.f32	s15, s15, s24
 1578              		.loc 1 688 26 view .LVU450
 1579 0096 C7EE8B7A 		vdiv.f32	s15, s15, s22
 1580 009a 17EE900A 		vmov	r0, s15
 1581 009e FFF7FEFF 		bl	__aeabi_f2d
 1582              	.LVL78:
 1583 00a2 41EC1A0B 		vmov	d10, r0, r1
 1584 00a6 41EC100B 		vmov	d0, r0, r1
 1585 00aa FFF7FEFF 		bl	cos
 1586              	.LVL79:
 1587 00ae 51EC100B 		vmov	r0, r1, d0
 1588 00b2 FFF7FEFF 		bl	__aeabi_d2f
 1589              	.LVL80:
 1590 00b6 08EE100A 		vmov	s16, r0
 689:Src/main.c    **** 	freq_step_rotate.img = sin(two_pi * freqSteps / samplingFreq);
ARM GAS  /tmp/ccXE0sEe.s 			page 45


 1591              		.loc 1 689 2 is_stmt 1 view .LVU451
 1592              		.loc 1 689 25 is_stmt 0 view .LVU452
 1593 00ba B0EE4A0A 		vmov.f32	s0, s20
 1594 00be F0EE6A0A 		vmov.f32	s1, s21
 1595 00c2 FFF7FEFF 		bl	sin
 1596              	.LVL81:
 1597 00c6 51EC100B 		vmov	r0, r1, d0
 1598 00ca FFF7FEFF 		bl	__aeabi_d2f
 1599              	.LVL82:
 1600 00ce 0BEE900A 		vmov	s23, r0
 690:Src/main.c    **** 	carrier_rotate.real = cos(two_pi * carrierFreq / samplingFreq);
 1601              		.loc 1 690 2 is_stmt 1 view .LVU453
 1602              		.loc 1 690 35 is_stmt 0 view .LVU454
 1603 00d2 DDED187A 		vldr.32	s15, [sp, #96]	@ int
 1604 00d6 F8EE677A 		vcvt.f32.u32	s15, s15
 1605 00da 67EE8C7A 		vmul.f32	s15, s15, s24
 1606              		.loc 1 690 24 view .LVU455
 1607 00de C7EE8B7A 		vdiv.f32	s15, s15, s22
 1608 00e2 17EE900A 		vmov	r0, s15
 1609 00e6 FFF7FEFF 		bl	__aeabi_f2d
 1610              	.LVL83:
 1611 00ea 41EC1A0B 		vmov	d10, r0, r1
 1612 00ee 41EC100B 		vmov	d0, r0, r1
 1613 00f2 FFF7FEFF 		bl	cos
 1614              	.LVL84:
 1615 00f6 51EC100B 		vmov	r0, r1, d0
 1616 00fa FFF7FEFF 		bl	__aeabi_d2f
 1617              	.LVL85:
 1618 00fe 0BEE100A 		vmov	s22, r0
 691:Src/main.c    **** 	carrier_rotate.img = sin(two_pi * carrierFreq / samplingFreq);
 1619              		.loc 1 691 2 is_stmt 1 view .LVU456
 1620              		.loc 1 691 23 is_stmt 0 view .LVU457
 1621 0102 B0EE4A0A 		vmov.f32	s0, s20
 1622 0106 F0EE6A0A 		vmov.f32	s1, s21
 1623 010a FFF7FEFF 		bl	sin
 1624              	.LVL86:
 1625 010e 51EC100B 		vmov	r0, r1, d0
 1626 0112 FFF7FEFF 		bl	__aeabi_d2f
 1627              	.LVL87:
 1628 0116 03EE900A 		vmov	s7, r0
 692:Src/main.c    **** 
 693:Src/main.c    **** 	for (uint16_t i = 0; i < __element_count; i++)
 1629              		.loc 1 693 2 is_stmt 1 view .LVU458
 1630              	.LBB15:
 1631              		.loc 1 693 7 view .LVU459
 1632              	.LVL88:
 1633              		.loc 1 693 16 is_stmt 0 view .LVU460
 1634 011a 0022     		movs	r2, #0
 1635              		.loc 1 693 2 view .LVU461
 1636 011c 4BE0     		b	.L71
 1637              	.LVL89:
 1638              	.L77:
 694:Src/main.c    **** 	{
 695:Src/main.c    **** 		sum = 0.0f;
 696:Src/main.c    **** 
 697:Src/main.c    **** 		diff_freq_phasor.real = start_freq_phasor.real;
 698:Src/main.c    **** 		diff_freq_phasor.img = start_freq_phasor.img;
ARM GAS  /tmp/ccXE0sEe.s 			page 46


 699:Src/main.c    **** 
 700:Src/main.c    **** 		// Sum different frequency components.
 701:Src/main.c    **** 		for (uint16_t j = 0; j < numOfFreqs; j++)
 702:Src/main.c    **** 		{
 703:Src/main.c    **** 			sum += diff_freq_phasor.real;
 704:Src/main.c    **** 
 705:Src/main.c    **** 			// Rotate to obtain for different frequencies.
 706:Src/main.c    **** 			tmp_x = diff_freq_phasor.real * freq_step_phasor.real - diff_freq_phasor.img * freq_step_phasor.
 707:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 708:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 709:Src/main.c    **** 		}
 710:Src/main.c    **** 
 711:Src/main.c    **** 		// Modulate.
 712:Src/main.c    **** 		sum *= carrier_phasor.real;
 1639              		.loc 1 712 3 is_stmt 1 discriminator 2 view .LVU462
 1640              		.loc 1 712 24 is_stmt 0 discriminator 2 view .LVU463
 1641 011e 9DED007A 		vldr.32	s14, [sp]
 1642              		.loc 1 712 7 discriminator 2 view .LVU464
 1643 0122 67EE067A 		vmul.f32	s15, s14, s12
 1644              	.LVL90:
 713:Src/main.c    **** 
 714:Src/main.c    **** 		// Calculate DAC value.
 715:Src/main.c    **** 		dac_value = (1.0f + sum * scale) * (1 << 11);
 1645              		.loc 1 715 3 is_stmt 1 discriminator 2 view .LVU465
 1646              		.loc 1 715 27 is_stmt 0 discriminator 2 view .LVU466
 1647 0126 69EEA77A 		vmul.f32	s15, s19, s15
 1648              	.LVL91:
 1649              		.loc 1 715 21 discriminator 2 view .LVU467
 1650 012a B7EE006A 		vmov.f32	s12, #1.0e+0
 1651              	.LVL92:
 1652              		.loc 1 715 21 discriminator 2 view .LVU468
 1653 012e 77EE867A 		vadd.f32	s15, s15, s12
 1654              		.loc 1 715 36 discriminator 2 view .LVU469
 1655 0132 DFED3C6A 		vldr.32	s13, .L78+8
 1656 0136 67EEA67A 		vmul.f32	s15, s15, s13
 1657              		.loc 1 715 13 discriminator 2 view .LVU470
 1658 013a FCEEE77A 		vcvt.u32.f32	s15, s15
 1659              	.LVL93:
 716:Src/main.c    **** 		table[i] = dac_value;
 1660              		.loc 1 716 3 is_stmt 1 discriminator 2 view .LVU471
 1661              		.loc 1 716 12 is_stmt 0 discriminator 2 view .LVU472
 1662 013e 17EE903A 		vmov	r3, s15	@ int
 1663              	.LVL94:
 1664              		.loc 1 716 12 discriminator 2 view .LVU473
 1665 0142 26F81230 		strh	r3, [r6, r2, lsl #1]	@ movhi
 717:Src/main.c    **** 
 718:Src/main.c    **** 		// Rotate start_freq component.
 719:Src/main.c    **** 		tmp_x = start_freq_phasor.real * start_freq_rotate.real - start_freq_phasor.img * start_freq_rota
 1666              		.loc 1 719 3 is_stmt 1 discriminator 2 view .LVU474
 1667              		.loc 1 719 34 is_stmt 0 discriminator 2 view .LVU475
 1668 0146 69EE047A 		vmul.f32	s15, s18, s8
 1669              	.LVL95:
 1670              		.loc 1 719 83 discriminator 2 view .LVU476
 1671 014a 68EE836A 		vmul.f32	s13, s17, s6
 1672              		.loc 1 719 9 discriminator 2 view .LVU477
 1673 014e 77EEE67A 		vsub.f32	s15, s15, s13
 1674              	.LVL96:
ARM GAS  /tmp/ccXE0sEe.s 			page 47


 720:Src/main.c    **** 		start_freq_phasor.img = start_freq_phasor.real * start_freq_rotate.img + start_freq_phasor.img * 
 1675              		.loc 1 720 3 is_stmt 1 discriminator 2 view .LVU478
 1676              		.loc 1 720 50 is_stmt 0 discriminator 2 view .LVU479
 1677 0152 28EE844A 		vmul.f32	s8, s17, s8
 1678              		.loc 1 720 98 discriminator 2 view .LVU480
 1679 0156 29EE033A 		vmul.f32	s6, s18, s6
 1680              		.loc 1 720 74 discriminator 2 view .LVU481
 1681 015a 34EE034A 		vadd.f32	s8, s8, s6
 1682              		.loc 1 720 25 discriminator 2 view .LVU482
 1683 015e 8DED074A 		vstr.32	s8, [sp, #28]
 721:Src/main.c    **** 		start_freq_phasor.real = tmp_x;
 1684              		.loc 1 721 3 is_stmt 1 discriminator 2 view .LVU483
 1685              		.loc 1 721 26 is_stmt 0 discriminator 2 view .LVU484
 1686 0162 CDED067A 		vstr.32	s15, [sp, #24]
 722:Src/main.c    **** 
 723:Src/main.c    **** 		// Rotate freq step component.
 724:Src/main.c    **** 		tmp_x = freq_step_phasor.real * freq_step_rotate.real - freq_step_phasor.img * freq_step_rotate.i
 1687              		.loc 1 724 3 is_stmt 1 discriminator 2 view .LVU485
 1688              		.loc 1 724 27 is_stmt 0 discriminator 2 view .LVU486
 1689 0166 DDED047A 		vldr.32	s15, [sp, #16]
 1690              	.LVL97:
 1691              		.loc 1 724 33 discriminator 2 view .LVU487
 1692 016a 28EE276A 		vmul.f32	s12, s16, s15
 1693              		.loc 1 724 75 discriminator 2 view .LVU488
 1694 016e DDED056A 		vldr.32	s13, [sp, #20]
 1695              		.loc 1 724 80 discriminator 2 view .LVU489
 1696 0172 6BEEA65A 		vmul.f32	s11, s23, s13
 1697              		.loc 1 724 9 discriminator 2 view .LVU490
 1698 0176 36EE656A 		vsub.f32	s12, s12, s11
 1699              	.LVL98:
 725:Src/main.c    **** 		freq_step_phasor.img = freq_step_phasor.real * freq_step_rotate.img + freq_step_phasor.img * freq
 1700              		.loc 1 725 3 is_stmt 1 discriminator 2 view .LVU491
 1701              		.loc 1 725 48 is_stmt 0 discriminator 2 view .LVU492
 1702 017a 6BEEA77A 		vmul.f32	s15, s23, s15
 1703              		.loc 1 725 94 discriminator 2 view .LVU493
 1704 017e 68EE266A 		vmul.f32	s13, s16, s13
 1705              		.loc 1 725 71 discriminator 2 view .LVU494
 1706 0182 77EEA67A 		vadd.f32	s15, s15, s13
 1707              		.loc 1 725 24 discriminator 2 view .LVU495
 1708 0186 CDED057A 		vstr.32	s15, [sp, #20]
 726:Src/main.c    **** 		freq_step_phasor.real = tmp_x;
 1709              		.loc 1 726 3 is_stmt 1 discriminator 2 view .LVU496
 1710              		.loc 1 726 25 is_stmt 0 discriminator 2 view .LVU497
 1711 018a 8DED046A 		vstr.32	s12, [sp, #16]
 727:Src/main.c    **** 
 728:Src/main.c    **** 		// Rotate carrier.
 729:Src/main.c    **** 		tmp_x = carrier_phasor.real * carrier_rotate.real - carrier_phasor.img * carrier_rotate.img;
 1712              		.loc 1 729 3 is_stmt 1 discriminator 2 view .LVU498
 1713              		.loc 1 729 31 is_stmt 0 discriminator 2 view .LVU499
 1714 018e 6BEE076A 		vmul.f32	s13, s22, s14
 1715              		.loc 1 729 69 discriminator 2 view .LVU500
 1716 0192 DDED017A 		vldr.32	s15, [sp, #4]
 1717              		.loc 1 729 74 discriminator 2 view .LVU501
 1718 0196 23EEA76A 		vmul.f32	s12, s7, s15
 1719              	.LVL99:
 1720              		.loc 1 729 9 discriminator 2 view .LVU502
 1721 019a 76EEC66A 		vsub.f32	s13, s13, s12
ARM GAS  /tmp/ccXE0sEe.s 			page 48


 1722              	.LVL100:
 730:Src/main.c    **** 		carrier_phasor.img = carrier_phasor.real * carrier_rotate.img + carrier_phasor.img * carrier_rota
 1723              		.loc 1 730 3 is_stmt 1 discriminator 2 view .LVU503
 1724              		.loc 1 730 44 is_stmt 0 discriminator 2 view .LVU504
 1725 019e 23EE877A 		vmul.f32	s14, s7, s14
 1726              		.loc 1 730 86 discriminator 2 view .LVU505
 1727 01a2 6BEE277A 		vmul.f32	s15, s22, s15
 1728              		.loc 1 730 65 discriminator 2 view .LVU506
 1729 01a6 37EE277A 		vadd.f32	s14, s14, s15
 1730              		.loc 1 730 22 discriminator 2 view .LVU507
 1731 01aa 8DED017A 		vstr.32	s14, [sp, #4]
 731:Src/main.c    **** 		carrier_phasor.real = tmp_x;
 1732              		.loc 1 731 3 is_stmt 1 discriminator 2 view .LVU508
 1733              		.loc 1 731 23 is_stmt 0 discriminator 2 view .LVU509
 1734 01ae CDED006A 		vstr.32	s13, [sp]
 693:Src/main.c    **** 	{
 1735              		.loc 1 693 45 discriminator 2 view .LVU510
 1736 01b2 0132     		adds	r2, r2, #1
 1737              	.LVL101:
 693:Src/main.c    **** 	{
 1738              		.loc 1 693 45 discriminator 2 view .LVU511
 1739 01b4 92B2     		uxth	r2, r2
 1740              	.LVL102:
 1741              	.L71:
 693:Src/main.c    **** 	{
 1742              		.loc 1 693 2 discriminator 1 view .LVU512
 1743 01b6 AA42     		cmp	r2, r5
 1744 01b8 29D2     		bcs	.L76
 695:Src/main.c    **** 
 1745              		.loc 1 695 3 is_stmt 1 view .LVU513
 1746              	.LVL103:
 697:Src/main.c    **** 		diff_freq_phasor.img = start_freq_phasor.img;
 1747              		.loc 1 697 3 view .LVU514
 697:Src/main.c    **** 		diff_freq_phasor.img = start_freq_phasor.img;
 1748              		.loc 1 697 44 is_stmt 0 view .LVU515
 1749 01ba 9DED064A 		vldr.32	s8, [sp, #24]
 697:Src/main.c    **** 		diff_freq_phasor.img = start_freq_phasor.img;
 1750              		.loc 1 697 25 view .LVU516
 1751 01be 8DED024A 		vstr.32	s8, [sp, #8]
 698:Src/main.c    **** 
 1752              		.loc 1 698 3 is_stmt 1 view .LVU517
 698:Src/main.c    **** 
 1753              		.loc 1 698 43 is_stmt 0 view .LVU518
 1754 01c2 9DED073A 		vldr.32	s6, [sp, #28]
 698:Src/main.c    **** 
 1755              		.loc 1 698 24 view .LVU519
 1756 01c6 8DED033A 		vstr.32	s6, [sp, #12]
 701:Src/main.c    **** 		{
 1757              		.loc 1 701 3 is_stmt 1 view .LVU520
 1758              	.LBB16:
 701:Src/main.c    **** 		{
 1759              		.loc 1 701 8 view .LVU521
 1760              	.LVL104:
 701:Src/main.c    **** 		{
 1761              		.loc 1 701 17 is_stmt 0 view .LVU522
 1762 01ca 0023     		movs	r3, #0
 1763              	.LBE16:
ARM GAS  /tmp/ccXE0sEe.s 			page 49


 695:Src/main.c    **** 
 1764              		.loc 1 695 7 view .LVU523
 1765 01cc 9FED166A 		vldr.32	s12, .L78+12
 1766              	.LVL105:
 1767              	.L72:
 1768              	.LBB17:
 701:Src/main.c    **** 		{
 1769              		.loc 1 701 3 discriminator 1 view .LVU524
 1770 01d0 A342     		cmp	r3, r4
 1771 01d2 A4D2     		bcs	.L77
 703:Src/main.c    **** 
 1772              		.loc 1 703 4 is_stmt 1 discriminator 3 view .LVU525
 703:Src/main.c    **** 
 1773              		.loc 1 703 27 is_stmt 0 discriminator 3 view .LVU526
 1774 01d4 DDED027A 		vldr.32	s15, [sp, #8]
 703:Src/main.c    **** 
 1775              		.loc 1 703 8 discriminator 3 view .LVU527
 1776 01d8 36EE276A 		vadd.f32	s12, s12, s15
 1777              	.LVL106:
 706:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 1778              		.loc 1 706 4 is_stmt 1 discriminator 3 view .LVU528
 706:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 1779              		.loc 1 706 52 is_stmt 0 discriminator 3 view .LVU529
 1780 01dc 9DED047A 		vldr.32	s14, [sp, #16]
 706:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 1781              		.loc 1 706 34 discriminator 3 view .LVU530
 1782 01e0 67EE876A 		vmul.f32	s13, s15, s14
 706:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 1783              		.loc 1 706 76 discriminator 3 view .LVU531
 1784 01e4 DDED035A 		vldr.32	s11, [sp, #12]
 706:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 1785              		.loc 1 706 99 discriminator 3 view .LVU532
 1786 01e8 9DED055A 		vldr.32	s10, [sp, #20]
 706:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 1787              		.loc 1 706 81 discriminator 3 view .LVU533
 1788 01ec 65EE854A 		vmul.f32	s9, s11, s10
 706:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 1789              		.loc 1 706 10 discriminator 3 view .LVU534
 1790 01f0 76EEE46A 		vsub.f32	s13, s13, s9
 1791              	.LVL107:
 707:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 1792              		.loc 1 707 4 is_stmt 1 discriminator 3 view .LVU535
 707:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 1793              		.loc 1 707 49 is_stmt 0 discriminator 3 view .LVU536
 1794 01f4 67EE857A 		vmul.f32	s15, s15, s10
 707:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 1795              		.loc 1 707 95 discriminator 3 view .LVU537
 1796 01f8 27EE257A 		vmul.f32	s14, s14, s11
 707:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 1797              		.loc 1 707 72 discriminator 3 view .LVU538
 1798 01fc 77EE877A 		vadd.f32	s15, s15, s14
 707:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 1799              		.loc 1 707 25 discriminator 3 view .LVU539
 1800 0200 CDED037A 		vstr.32	s15, [sp, #12]
 708:Src/main.c    **** 		}
 1801              		.loc 1 708 4 is_stmt 1 discriminator 3 view .LVU540
 708:Src/main.c    **** 		}
ARM GAS  /tmp/ccXE0sEe.s 			page 50


 1802              		.loc 1 708 26 is_stmt 0 discriminator 3 view .LVU541
 1803 0204 CDED026A 		vstr.32	s13, [sp, #8]
 701:Src/main.c    **** 		{
 1804              		.loc 1 701 41 discriminator 3 view .LVU542
 1805 0208 0133     		adds	r3, r3, #1
 1806              	.LVL108:
 701:Src/main.c    **** 		{
 1807              		.loc 1 701 41 discriminator 3 view .LVU543
 1808 020a 9BB2     		uxth	r3, r3
 1809              	.LVL109:
 701:Src/main.c    **** 		{
 1810              		.loc 1 701 41 discriminator 3 view .LVU544
 1811 020c E0E7     		b	.L72
 1812              	.LVL110:
 1813              	.L76:
 701:Src/main.c    **** 		{
 1814              		.loc 1 701 41 discriminator 3 view .LVU545
 1815              	.LBE17:
 1816              	.LBE15:
 732:Src/main.c    **** 	}
 733:Src/main.c    **** 
 734:Src/main.c    **** 	*elementCount = __element_count;
 1817              		.loc 1 734 2 is_stmt 1 view .LVU546
 1818              		.loc 1 734 16 is_stmt 0 view .LVU547
 1819 020e 1A9B     		ldr	r3, [sp, #104]
 1820 0210 1D80     		strh	r5, [r3]	@ movhi
 735:Src/main.c    **** }
 1821              		.loc 1 735 1 view .LVU548
 1822 0212 09B0     		add	sp, sp, #36
 1823              	.LCFI35:
 1824              		.cfi_def_cfa_offset 60
 1825              		@ sp needed
 1826 0214 BDEC0A8B 		vldm	sp!, {d8-d12}
 1827              	.LCFI36:
 1828              		.cfi_restore 88
 1829              		.cfi_restore 89
 1830              		.cfi_restore 86
 1831              		.cfi_restore 87
 1832              		.cfi_restore 84
 1833              		.cfi_restore 85
 1834              		.cfi_restore 82
 1835              		.cfi_restore 83
 1836              		.cfi_restore 80
 1837              		.cfi_restore 81
 1838              		.cfi_def_cfa_offset 20
 1839 0218 F0BD     		pop	{r4, r5, r6, r7, pc}
 1840              	.LVL111:
 1841              	.L79:
 1842              		.loc 1 735 1 view .LVU549
 1843 021a 00BF     		.align	2
 1844              	.L78:
 1845 021c 77BE7F3F 		.word	1065336439
 1846 0220 DB0FC940 		.word	1086918619
 1847 0224 00000045 		.word	1157627904
 1848 0228 00000000 		.word	0
 1849              		.cfi_endproc
 1850              	.LFE149:
ARM GAS  /tmp/ccXE0sEe.s 			page 51


 1852              		.section	.text.IFFT,"ax",%progbits
 1853              		.align	1
 1854              		.global	IFFT
 1855              		.syntax unified
 1856              		.thumb
 1857              		.thumb_func
 1858              		.fpu fpv4-sp-d16
 1860              	IFFT:
 1861              	.LVL112:
 1862              	.LFB150:
 736:Src/main.c    **** 
 737:Src/main.c    **** void IFFT(Complex_t *respVector, uint16_t startFreq, uint16_t freqSteps,
 738:Src/main.c    **** 		  uint16_t numOfFreqs, uint16_t resolution, float *signal)
 739:Src/main.c    **** {
 1863              		.loc 1 739 1 is_stmt 1 view -0
 1864              		.cfi_startproc
 1865              		@ args = 8, pretend = 0, frame = 1048
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867              		.loc 1 739 1 is_stmt 0 view .LVU551
 1868 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1869              	.LCFI37:
 1870              		.cfi_def_cfa_offset 20
 1871              		.cfi_offset 4, -20
 1872              		.cfi_offset 5, -16
 1873              		.cfi_offset 6, -12
 1874              		.cfi_offset 7, -8
 1875              		.cfi_offset 14, -4
 1876 0002 2DED088B 		vpush.64	{d8, d9, d10, d11}
 1877              	.LCFI38:
 1878              		.cfi_def_cfa_offset 52
 1879              		.cfi_offset 80, -52
 1880              		.cfi_offset 81, -48
 1881              		.cfi_offset 82, -44
 1882              		.cfi_offset 83, -40
 1883              		.cfi_offset 84, -36
 1884              		.cfi_offset 85, -32
 1885              		.cfi_offset 86, -28
 1886              		.cfi_offset 87, -24
 1887 0006 ADF21C4D 		subw	sp, sp, #1052
 1888              	.LCFI39:
 1889              		.cfi_def_cfa_offset 1104
 1890 000a 0546     		mov	r5, r0
 1891 000c 1C46     		mov	r4, r3
 1892 000e BDF85064 		ldrh	r6, [sp, #1104]
 1893 0012 DDF85474 		ldr	r7, [sp, #1108]
 740:Src/main.c    **** 	Complex_t start_freq_phasor;
 1894              		.loc 1 740 2 is_stmt 1 view .LVU552
 741:Src/main.c    **** 	Complex_t start_freq_rotate;
 1895              		.loc 1 741 2 view .LVU553
 742:Src/main.c    **** 	Complex_t freq_step_phasor;
 1896              		.loc 1 742 2 view .LVU554
 743:Src/main.c    **** 	Complex_t freq_step_rotate;
 1897              		.loc 1 743 2 view .LVU555
 744:Src/main.c    **** 	Complex_t diff_freq_phasor;
 1898              		.loc 1 744 2 view .LVU556
 745:Src/main.c    **** 
 746:Src/main.c    **** 	float tmp_x;
ARM GAS  /tmp/ccXE0sEe.s 			page 52


 1899              		.loc 1 746 2 view .LVU557
 747:Src/main.c    **** 	float sum_x;
 1900              		.loc 1 747 2 view .LVU558
 748:Src/main.c    **** 	float sum_y;
 1901              		.loc 1 748 2 view .LVU559
 749:Src/main.c    **** 	float power = 0;
 1902              		.loc 1 749 2 view .LVU560
 1903              	.LVL113:
 750:Src/main.c    **** 	const float two_pi = 2 * 3.1415926535897;
 1904              		.loc 1 750 2 view .LVU561
 751:Src/main.c    **** 	float buff[NUM_OF_FREQS];
 1905              		.loc 1 751 2 view .LVU562
 752:Src/main.c    **** 
 753:Src/main.c    **** 	start_freq_phasor.real = 1.0;
 1906              		.loc 1 753 2 view .LVU563
 1907              		.loc 1 753 25 is_stmt 0 view .LVU564
 1908 0016 4FF07E53 		mov	r3, #1065353216
 1909              	.LVL114:
 1910              		.loc 1 753 25 view .LVU565
 1911 001a 0DF58260 		add	r0, sp, #1040
 1912              	.LVL115:
 1913              		.loc 1 753 25 view .LVU566
 1914 001e 0360     		str	r3, [r0]	@ float
 754:Src/main.c    **** 	start_freq_phasor.img = 0.0;
 1915              		.loc 1 754 2 is_stmt 1 view .LVU567
 1916              		.loc 1 754 24 is_stmt 0 view .LVU568
 1917 0020 9FED8B8A 		vldr.32	s16, .L90
 1918 0024 0DF21440 		addw	r0, sp, #1044
 1919 0028 80ED008A 		vstr.32	s16, [r0]
 755:Src/main.c    **** 	freq_step_phasor.real = 1.0;
 1920              		.loc 1 755 2 is_stmt 1 view .LVU569
 1921              		.loc 1 755 24 is_stmt 0 view .LVU570
 1922 002c 0DF58160 		add	r0, sp, #1032
 1923 0030 0360     		str	r3, [r0]	@ float
 756:Src/main.c    **** 	freq_step_phasor.img = 0.0;
 1924              		.loc 1 756 2 is_stmt 1 view .LVU571
 1925              		.loc 1 756 23 is_stmt 0 view .LVU572
 1926 0032 0DF20C43 		addw	r3, sp, #1036
 1927 0036 83ED008A 		vstr.32	s16, [r3]
 757:Src/main.c    **** 
 758:Src/main.c    **** 	start_freq_rotate.real = cos(((two_pi * startFreq) / freqSteps) / resolution);
 1928              		.loc 1 758 2 is_stmt 1 view .LVU573
 1929              		.loc 1 758 40 is_stmt 0 view .LVU574
 1930 003a 07EE901A 		vmov	s15, r1	@ int
 1931 003e F8EEE77A 		vcvt.f32.s32	s15, s15
 1932 0042 9FED84BA 		vldr.32	s22, .L90+4
 1933 0046 67EE8B7A 		vmul.f32	s15, s15, s22
 1934              		.loc 1 758 53 view .LVU575
 1935 004a 07EE102A 		vmov	s14, r2	@ int
 1936 004e F8EEC76A 		vcvt.f32.s32	s13, s14
 1937 0052 87EEA67A 		vdiv.f32	s14, s15, s13
 1938              		.loc 1 758 66 view .LVU576
 1939 0056 07EE906A 		vmov	s15, r6	@ int
 1940 005a F8EEE78A 		vcvt.f32.s32	s17, s15
 1941              		.loc 1 758 27 view .LVU577
 1942 005e C7EE287A 		vdiv.f32	s15, s14, s17
 1943 0062 17EE900A 		vmov	r0, s15
ARM GAS  /tmp/ccXE0sEe.s 			page 53


 1944 0066 FFF7FEFF 		bl	__aeabi_f2d
 1945              	.LVL116:
 1946              		.loc 1 758 27 view .LVU578
 1947 006a 41EC1A0B 		vmov	d10, r0, r1
 1948 006e 41EC100B 		vmov	d0, r0, r1
 1949 0072 FFF7FEFF 		bl	cos
 1950              	.LVL117:
 1951 0076 51EC100B 		vmov	r0, r1, d0
 1952 007a FFF7FEFF 		bl	__aeabi_d2f
 1953              	.LVL118:
 1954 007e 09EE900A 		vmov	s19, r0
 759:Src/main.c    **** 	start_freq_rotate.img = sin(((two_pi * startFreq) / freqSteps) / resolution);
 1955              		.loc 1 759 2 is_stmt 1 view .LVU579
 1956              		.loc 1 759 26 is_stmt 0 view .LVU580
 1957 0082 B0EE4A0A 		vmov.f32	s0, s20
 1958 0086 F0EE6A0A 		vmov.f32	s1, s21
 1959 008a FFF7FEFF 		bl	sin
 1960              	.LVL119:
 1961 008e 51EC100B 		vmov	r0, r1, d0
 1962 0092 FFF7FEFF 		bl	__aeabi_d2f
 1963              	.LVL120:
 1964 0096 09EE100A 		vmov	s18, r0
 760:Src/main.c    **** 	freq_step_rotate.real = cos(two_pi / resolution);
 1965              		.loc 1 760 2 is_stmt 1 view .LVU581
 1966              		.loc 1 760 26 is_stmt 0 view .LVU582
 1967 009a CBEE287A 		vdiv.f32	s15, s22, s17
 1968 009e 17EE900A 		vmov	r0, s15
 1969 00a2 FFF7FEFF 		bl	__aeabi_f2d
 1970              	.LVL121:
 1971 00a6 41EC1A0B 		vmov	d10, r0, r1
 1972 00aa 41EC100B 		vmov	d0, r0, r1
 1973 00ae FFF7FEFF 		bl	cos
 1974              	.LVL122:
 1975 00b2 51EC100B 		vmov	r0, r1, d0
 1976 00b6 FFF7FEFF 		bl	__aeabi_d2f
 1977              	.LVL123:
 1978 00ba 08EE900A 		vmov	s17, r0
 761:Src/main.c    **** 	freq_step_rotate.img = sin(two_pi / resolution);
 1979              		.loc 1 761 2 is_stmt 1 view .LVU583
 1980              		.loc 1 761 25 is_stmt 0 view .LVU584
 1981 00be B0EE4A0A 		vmov.f32	s0, s20
 1982 00c2 F0EE6A0A 		vmov.f32	s1, s21
 1983 00c6 FFF7FEFF 		bl	sin
 1984              	.LVL124:
 1985 00ca 51EC100B 		vmov	r0, r1, d0
 1986 00ce FFF7FEFF 		bl	__aeabi_d2f
 1987              	.LVL125:
 1988 00d2 03EE100A 		vmov	s6, r0
 762:Src/main.c    **** 
 763:Src/main.c    **** 	for (uint16_t i = 0; i < resolution; i++)
 1989              		.loc 1 763 2 is_stmt 1 view .LVU585
 1990              	.LBB18:
 1991              		.loc 1 763 7 view .LVU586
 1992              	.LVL126:
 1993              		.loc 1 763 16 is_stmt 0 view .LVU587
 1994 00d6 0021     		movs	r1, #0
 1995              		.loc 1 763 2 view .LVU588
ARM GAS  /tmp/ccXE0sEe.s 			page 54


 1996 00d8 47E0     		b	.L81
 1997              	.LVL127:
 1998              	.L89:
 1999              	.LBB19:
 764:Src/main.c    **** 	{
 765:Src/main.c    **** 		sum_x = 0.0f;
 766:Src/main.c    **** 		sum_y = 0.0f;
 767:Src/main.c    **** 
 768:Src/main.c    **** 		diff_freq_phasor.real = start_freq_phasor.real;
 769:Src/main.c    **** 		diff_freq_phasor.img = start_freq_phasor.img;
 770:Src/main.c    **** 
 771:Src/main.c    **** 		// Sum different frequency components.
 772:Src/main.c    **** 		for (uint16_t j = 0; j < numOfFreqs; j++)
 773:Src/main.c    **** 		{
 774:Src/main.c    **** 			float x;
 775:Src/main.c    **** 			float y;
 776:Src/main.c    **** 
 777:Src/main.c    **** 			// Add base rotation.
 778:Src/main.c    **** 			x = diff_freq_phasor.real * respVector[j].real - diff_freq_phasor.img * respVector[j].img;
 779:Src/main.c    **** 			y = diff_freq_phasor.real * respVector[j].img + diff_freq_phasor.img * respVector[j].real;
 780:Src/main.c    **** 
 781:Src/main.c    **** 			sum_x += x;
 782:Src/main.c    **** 			sum_y += y;
 783:Src/main.c    **** 
 784:Src/main.c    **** 			// Rotate to obtain for different frequencies.
 785:Src/main.c    **** 			tmp_x = diff_freq_phasor.real * freq_step_phasor.real - diff_freq_phasor.img * freq_step_phasor.
 786:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 787:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 788:Src/main.c    **** 		}
 789:Src/main.c    **** 
 790:Src/main.c    **** 		float __equivalent_power;
 2000              		.loc 1 790 3 is_stmt 1 discriminator 2 view .LVU589
 791:Src/main.c    **** 		__equivalent_power = (sum_x * sum_x + sum_y * sum_y) * (i + 3.5f) * (i + 3.5f);
 2001              		.loc 1 791 3 discriminator 2 view .LVU590
 2002              		.loc 1 791 31 is_stmt 0 discriminator 2 view .LVU591
 2003 00da 25EE055A 		vmul.f32	s10, s10, s10
 2004              	.LVL128:
 2005              		.loc 1 791 47 discriminator 2 view .LVU592
 2006 00de 64EEA44A 		vmul.f32	s9, s9, s9
 2007              	.LVL129:
 2008              		.loc 1 791 39 discriminator 2 view .LVU593
 2009 00e2 35EE245A 		vadd.f32	s10, s10, s9
 2010              		.loc 1 791 61 discriminator 2 view .LVU594
 2011 00e6 07EE901A 		vmov	s15, r1	@ int
 2012 00ea F8EEE77A 		vcvt.f32.s32	s15, s15
 2013 00ee B0EE0C7A 		vmov.f32	s14, #3.5e+0
 2014 00f2 77EE877A 		vadd.f32	s15, s15, s14
 2015              		.loc 1 791 56 discriminator 2 view .LVU595
 2016 00f6 25EE275A 		vmul.f32	s10, s10, s15
 2017              		.loc 1 791 22 discriminator 2 view .LVU596
 2018 00fa 27EE855A 		vmul.f32	s10, s15, s10
 2019              	.LVL130:
 792:Src/main.c    **** 
 793:Src/main.c    **** 		// Parse signal.
 794:Src/main.c    **** 		buff[i] = __equivalent_power;
 2020              		.loc 1 794 3 is_stmt 1 discriminator 2 view .LVU597
 2021              		.loc 1 794 11 is_stmt 0 discriminator 2 view .LVU598
ARM GAS  /tmp/ccXE0sEe.s 			page 55


 2022 00fe 0DEB8103 		add	r3, sp, r1, lsl #2
 2023              	.LVL131:
 2024              		.loc 1 794 11 discriminator 2 view .LVU599
 2025 0102 83ED005A 		vstr.32	s10, [r3]
 795:Src/main.c    **** 		power += __equivalent_power;
 2026              		.loc 1 795 3 is_stmt 1 discriminator 2 view .LVU600
 2027              		.loc 1 795 9 is_stmt 0 discriminator 2 view .LVU601
 2028 0106 38EE058A 		vadd.f32	s16, s16, s10
 2029              	.LVL132:
 796:Src/main.c    **** 
 797:Src/main.c    **** 		// Rotate start_freq component.
 798:Src/main.c    **** 		tmp_x = start_freq_phasor.real * start_freq_rotate.real - start_freq_phasor.img * start_freq_rota
 2030              		.loc 1 798 3 is_stmt 1 discriminator 2 view .LVU602
 2031              		.loc 1 798 34 is_stmt 0 discriminator 2 view .LVU603
 2032 010a 69EEA37A 		vmul.f32	s15, s19, s7
 2033              		.loc 1 798 83 discriminator 2 view .LVU604
 2034 010e 29EE227A 		vmul.f32	s14, s18, s5
 2035              		.loc 1 798 9 discriminator 2 view .LVU605
 2036 0112 77EEC77A 		vsub.f32	s15, s15, s14
 2037              	.LVL133:
 799:Src/main.c    **** 		start_freq_phasor.img = start_freq_phasor.real * start_freq_rotate.img + start_freq_phasor.img * 
 2038              		.loc 1 799 3 is_stmt 1 discriminator 2 view .LVU606
 2039              		.loc 1 799 50 is_stmt 0 discriminator 2 view .LVU607
 2040 0116 69EE233A 		vmul.f32	s7, s18, s7
 2041              		.loc 1 799 98 discriminator 2 view .LVU608
 2042 011a 69EEA22A 		vmul.f32	s5, s19, s5
 2043              		.loc 1 799 74 discriminator 2 view .LVU609
 2044 011e 73EEA23A 		vadd.f32	s7, s7, s5
 2045              		.loc 1 799 25 discriminator 2 view .LVU610
 2046 0122 0DF21443 		addw	r3, sp, #1044
 2047 0126 C3ED003A 		vstr.32	s7, [r3]
 800:Src/main.c    **** 		start_freq_phasor.real = tmp_x;
 2048              		.loc 1 800 3 is_stmt 1 discriminator 2 view .LVU611
 2049              		.loc 1 800 26 is_stmt 0 discriminator 2 view .LVU612
 2050 012a 0DF58263 		add	r3, sp, #1040
 2051 012e C3ED007A 		vstr.32	s15, [r3]
 801:Src/main.c    **** 
 802:Src/main.c    **** 		// Rotate freq step component.
 803:Src/main.c    **** 		tmp_x = freq_step_phasor.real * freq_step_rotate.real - freq_step_phasor.img * freq_step_rotate.i
 2052              		.loc 1 803 3 is_stmt 1 discriminator 2 view .LVU613
 2053              		.loc 1 803 27 is_stmt 0 discriminator 2 view .LVU614
 2054 0132 0DF58163 		add	r3, sp, #1032
 2055 0136 D3ED007A 		vldr.32	s15, [r3]
 2056              	.LVL134:
 2057              		.loc 1 803 33 discriminator 2 view .LVU615
 2058 013a 68EEA76A 		vmul.f32	s13, s17, s15
 2059              		.loc 1 803 75 discriminator 2 view .LVU616
 2060 013e 0DF20C43 		addw	r3, sp, #1036
 2061 0142 93ED007A 		vldr.32	s14, [r3]
 2062              		.loc 1 803 80 discriminator 2 view .LVU617
 2063 0146 23EE076A 		vmul.f32	s12, s6, s14
 2064              		.loc 1 803 9 discriminator 2 view .LVU618
 2065 014a 76EEC66A 		vsub.f32	s13, s13, s12
 2066              	.LVL135:
 804:Src/main.c    **** 		freq_step_phasor.img = freq_step_phasor.real * freq_step_rotate.img + freq_step_phasor.img * freq
 2067              		.loc 1 804 3 is_stmt 1 discriminator 2 view .LVU619
 2068              		.loc 1 804 48 is_stmt 0 discriminator 2 view .LVU620
ARM GAS  /tmp/ccXE0sEe.s 			page 56


 2069 014e 63EE277A 		vmul.f32	s15, s6, s15
 2070              		.loc 1 804 94 discriminator 2 view .LVU621
 2071 0152 28EE877A 		vmul.f32	s14, s17, s14
 2072              		.loc 1 804 71 discriminator 2 view .LVU622
 2073 0156 77EE877A 		vadd.f32	s15, s15, s14
 2074              		.loc 1 804 24 discriminator 2 view .LVU623
 2075 015a C3ED007A 		vstr.32	s15, [r3]
 805:Src/main.c    **** 		freq_step_phasor.real = tmp_x;
 2076              		.loc 1 805 3 is_stmt 1 discriminator 2 view .LVU624
 2077              		.loc 1 805 25 is_stmt 0 discriminator 2 view .LVU625
 2078 015e 0DF58163 		add	r3, sp, #1032
 2079 0162 C3ED006A 		vstr.32	s13, [r3]
 2080              	.LBE19:
 763:Src/main.c    **** 	{
 2081              		.loc 1 763 40 discriminator 2 view .LVU626
 2082 0166 0131     		adds	r1, r1, #1
 2083              	.LVL136:
 763:Src/main.c    **** 	{
 2084              		.loc 1 763 40 discriminator 2 view .LVU627
 2085 0168 89B2     		uxth	r1, r1
 2086              	.LVL137:
 2087              	.L81:
 763:Src/main.c    **** 	{
 2088              		.loc 1 763 2 discriminator 1 view .LVU628
 2089 016a B142     		cmp	r1, r6
 2090 016c 51D2     		bcs	.L88
 2091              	.LBB23:
 765:Src/main.c    **** 		sum_y = 0.0f;
 2092              		.loc 1 765 3 is_stmt 1 view .LVU629
 2093              	.LVL138:
 766:Src/main.c    **** 
 2094              		.loc 1 766 3 view .LVU630
 768:Src/main.c    **** 		diff_freq_phasor.img = start_freq_phasor.img;
 2095              		.loc 1 768 3 view .LVU631
 768:Src/main.c    **** 		diff_freq_phasor.img = start_freq_phasor.img;
 2096              		.loc 1 768 44 is_stmt 0 view .LVU632
 2097 016e 0DF58263 		add	r3, sp, #1040
 2098 0172 D3ED003A 		vldr.32	s7, [r3]
 768:Src/main.c    **** 		diff_freq_phasor.img = start_freq_phasor.img;
 2099              		.loc 1 768 25 view .LVU633
 2100 0176 0DF58063 		add	r3, sp, #1024
 2101 017a C3ED003A 		vstr.32	s7, [r3]
 769:Src/main.c    **** 
 2102              		.loc 1 769 3 is_stmt 1 view .LVU634
 769:Src/main.c    **** 
 2103              		.loc 1 769 43 is_stmt 0 view .LVU635
 2104 017e 0DF21443 		addw	r3, sp, #1044
 2105 0182 D3ED002A 		vldr.32	s5, [r3]
 769:Src/main.c    **** 
 2106              		.loc 1 769 24 view .LVU636
 2107 0186 0DF20443 		addw	r3, sp, #1028
 2108 018a C3ED002A 		vstr.32	s5, [r3]
 772:Src/main.c    **** 		{
 2109              		.loc 1 772 3 is_stmt 1 view .LVU637
 2110              	.LBB20:
 772:Src/main.c    **** 		{
 2111              		.loc 1 772 8 view .LVU638
ARM GAS  /tmp/ccXE0sEe.s 			page 57


 2112              	.LVL139:
 772:Src/main.c    **** 		{
 2113              		.loc 1 772 17 is_stmt 0 view .LVU639
 2114 018e 0023     		movs	r3, #0
 2115              	.LBE20:
 766:Src/main.c    **** 
 2116              		.loc 1 766 9 view .LVU640
 2117 0190 DFED2F4A 		vldr.32	s9, .L90
 765:Src/main.c    **** 		sum_y = 0.0f;
 2118              		.loc 1 765 9 view .LVU641
 2119 0194 B0EE645A 		vmov.f32	s10, s9
 2120              	.LVL140:
 2121              	.L82:
 2122              	.LBB22:
 772:Src/main.c    **** 		{
 2123              		.loc 1 772 3 discriminator 1 view .LVU642
 2124 0198 A342     		cmp	r3, r4
 2125 019a 9ED2     		bcs	.L89
 2126              	.LBB21:
 774:Src/main.c    **** 			float y;
 2127              		.loc 1 774 4 is_stmt 1 discriminator 3 view .LVU643
 775:Src/main.c    **** 
 2128              		.loc 1 775 4 discriminator 3 view .LVU644
 778:Src/main.c    **** 			y = diff_freq_phasor.real * respVector[j].img + diff_freq_phasor.img * respVector[j].real;
 2129              		.loc 1 778 4 discriminator 3 view .LVU645
 778:Src/main.c    **** 			y = diff_freq_phasor.real * respVector[j].img + diff_freq_phasor.img * respVector[j].real;
 2130              		.loc 1 778 24 is_stmt 0 discriminator 3 view .LVU646
 2131 019c 0DF58062 		add	r2, sp, #1024
 2132 01a0 D2ED007A 		vldr.32	s15, [r2]
 778:Src/main.c    **** 			y = diff_freq_phasor.real * respVector[j].img + diff_freq_phasor.img * respVector[j].real;
 2133              		.loc 1 778 42 discriminator 3 view .LVU647
 2134 01a4 05EBC302 		add	r2, r5, r3, lsl #3
 778:Src/main.c    **** 			y = diff_freq_phasor.real * respVector[j].img + diff_freq_phasor.img * respVector[j].real;
 2135              		.loc 1 778 45 discriminator 3 view .LVU648
 2136 01a8 92ED006A 		vldr.32	s12, [r2]
 778:Src/main.c    **** 			y = diff_freq_phasor.real * respVector[j].img + diff_freq_phasor.img * respVector[j].real;
 2137              		.loc 1 778 30 discriminator 3 view .LVU649
 2138 01ac 67EE865A 		vmul.f32	s11, s15, s12
 778:Src/main.c    **** 			y = diff_freq_phasor.real * respVector[j].img + diff_freq_phasor.img * respVector[j].real;
 2139              		.loc 1 778 69 discriminator 3 view .LVU650
 2140 01b0 0DF20440 		addw	r0, sp, #1028
 2141 01b4 90ED007A 		vldr.32	s14, [r0]
 778:Src/main.c    **** 			y = diff_freq_phasor.real * respVector[j].img + diff_freq_phasor.img * respVector[j].real;
 2142              		.loc 1 778 89 discriminator 3 view .LVU651
 2143 01b8 D2ED016A 		vldr.32	s13, [r2, #4]
 778:Src/main.c    **** 			y = diff_freq_phasor.real * respVector[j].img + diff_freq_phasor.img * respVector[j].real;
 2144              		.loc 1 778 74 discriminator 3 view .LVU652
 2145 01bc 27EE264A 		vmul.f32	s8, s14, s13
 778:Src/main.c    **** 			y = diff_freq_phasor.real * respVector[j].img + diff_freq_phasor.img * respVector[j].real;
 2146              		.loc 1 778 6 discriminator 3 view .LVU653
 2147 01c0 75EEC45A 		vsub.f32	s11, s11, s8
 2148              	.LVL141:
 779:Src/main.c    **** 
 2149              		.loc 1 779 4 is_stmt 1 discriminator 3 view .LVU654
 779:Src/main.c    **** 
 2150              		.loc 1 779 30 is_stmt 0 discriminator 3 view .LVU655
 2151 01c4 67EEA66A 		vmul.f32	s13, s15, s13
ARM GAS  /tmp/ccXE0sEe.s 			page 58


 779:Src/main.c    **** 
 2152              		.loc 1 779 73 discriminator 3 view .LVU656
 2153 01c8 26EE076A 		vmul.f32	s12, s12, s14
 779:Src/main.c    **** 
 2154              		.loc 1 779 6 discriminator 3 view .LVU657
 2155 01cc 76EE866A 		vadd.f32	s13, s13, s12
 2156              	.LVL142:
 781:Src/main.c    **** 			sum_y += y;
 2157              		.loc 1 781 4 is_stmt 1 discriminator 3 view .LVU658
 781:Src/main.c    **** 			sum_y += y;
 2158              		.loc 1 781 10 is_stmt 0 discriminator 3 view .LVU659
 2159 01d0 35EE255A 		vadd.f32	s10, s10, s11
 2160              	.LVL143:
 782:Src/main.c    **** 
 2161              		.loc 1 782 4 is_stmt 1 discriminator 3 view .LVU660
 782:Src/main.c    **** 
 2162              		.loc 1 782 10 is_stmt 0 discriminator 3 view .LVU661
 2163 01d4 74EEA64A 		vadd.f32	s9, s9, s13
 2164              	.LVL144:
 785:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 2165              		.loc 1 785 4 is_stmt 1 discriminator 3 view .LVU662
 785:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 2166              		.loc 1 785 52 is_stmt 0 discriminator 3 view .LVU663
 2167 01d8 0DF58162 		add	r2, sp, #1032
 2168 01dc 92ED006A 		vldr.32	s12, [r2]
 785:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 2169              		.loc 1 785 34 discriminator 3 view .LVU664
 2170 01e0 67EE866A 		vmul.f32	s13, s15, s12
 2171              	.LVL145:
 785:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 2172              		.loc 1 785 99 discriminator 3 view .LVU665
 2173 01e4 0DF20C42 		addw	r2, sp, #1036
 2174 01e8 D2ED005A 		vldr.32	s11, [r2]
 2175              	.LVL146:
 785:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 2176              		.loc 1 785 81 discriminator 3 view .LVU666
 2177 01ec 27EE254A 		vmul.f32	s8, s14, s11
 2178              	.LVL147:
 785:Src/main.c    **** 			diff_freq_phasor.img = diff_freq_phasor.real * freq_step_phasor.img + diff_freq_phasor.img * fre
 2179              		.loc 1 785 10 discriminator 3 view .LVU667
 2180 01f0 76EEC46A 		vsub.f32	s13, s13, s8
 2181              	.LVL148:
 786:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 2182              		.loc 1 786 4 is_stmt 1 discriminator 3 view .LVU668
 786:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 2183              		.loc 1 786 49 is_stmt 0 discriminator 3 view .LVU669
 2184 01f4 67EEA57A 		vmul.f32	s15, s15, s11
 2185              	.LVL149:
 786:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 2186              		.loc 1 786 95 discriminator 3 view .LVU670
 2187 01f8 27EE067A 		vmul.f32	s14, s14, s12
 2188              	.LVL150:
 786:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 2189              		.loc 1 786 72 discriminator 3 view .LVU671
 2190 01fc 77EE877A 		vadd.f32	s15, s15, s14
 786:Src/main.c    **** 			diff_freq_phasor.real = tmp_x;
 2191              		.loc 1 786 25 discriminator 3 view .LVU672
ARM GAS  /tmp/ccXE0sEe.s 			page 59


 2192 0200 C0ED007A 		vstr.32	s15, [r0]
 2193              	.LVL151:
 787:Src/main.c    **** 		}
 2194              		.loc 1 787 4 is_stmt 1 discriminator 3 view .LVU673
 787:Src/main.c    **** 		}
 2195              		.loc 1 787 26 is_stmt 0 discriminator 3 view .LVU674
 2196 0204 0DF58062 		add	r2, sp, #1024
 787:Src/main.c    **** 		}
 2197              		.loc 1 787 26 discriminator 3 view .LVU675
 2198 0208 C2ED006A 		vstr.32	s13, [r2]
 787:Src/main.c    **** 		}
 2199              		.loc 1 787 26 discriminator 3 view .LVU676
 2200              	.LBE21:
 772:Src/main.c    **** 		{
 2201              		.loc 1 772 41 discriminator 3 view .LVU677
 2202 020c 0133     		adds	r3, r3, #1
 2203              	.LVL152:
 772:Src/main.c    **** 		{
 2204              		.loc 1 772 41 discriminator 3 view .LVU678
 2205 020e 9BB2     		uxth	r3, r3
 2206              	.LVL153:
 772:Src/main.c    **** 		{
 2207              		.loc 1 772 41 discriminator 3 view .LVU679
 2208 0210 C2E7     		b	.L82
 2209              	.LVL154:
 2210              	.L88:
 772:Src/main.c    **** 		{
 2211              		.loc 1 772 41 discriminator 3 view .LVU680
 2212              	.LBE22:
 2213              	.LBE23:
 2214              	.LBE18:
 2215              	.LBB24:
 806:Src/main.c    **** 	}
 807:Src/main.c    **** 
 808:Src/main.c    **** 	for (int i = 0; i < numOfFreqs; i++)
 2216              		.loc 1 808 11 view .LVU681
 2217 0212 0026     		movs	r6, #0
 2218 0214 15E0     		b	.L85
 2219              	.LVL155:
 2220              	.L86:
 809:Src/main.c    **** 	{
 810:Src/main.c    **** 		signal[i] = sqrt(buff[i] / power);
 2221              		.loc 1 810 3 is_stmt 1 discriminator 3 view .LVU682
 2222              		.loc 1 810 24 is_stmt 0 discriminator 3 view .LVU683
 2223 0216 B500     		lsls	r5, r6, #2
 2224 0218 0DEB0503 		add	r3, sp, r5
 2225 021c D3ED007A 		vldr.32	s15, [r3]
 2226              		.loc 1 810 15 discriminator 3 view .LVU684
 2227 0220 C7EE887A 		vdiv.f32	s15, s15, s16
 2228 0224 17EE900A 		vmov	r0, s15
 2229 0228 FFF7FEFF 		bl	__aeabi_f2d
 2230              	.LVL156:
 2231 022c 41EC100B 		vmov	d0, r0, r1
 2232 0230 FFF7FEFF 		bl	sqrt
 2233              	.LVL157:
 2234              		.loc 1 810 9 discriminator 3 view .LVU685
 2235 0234 3D44     		add	r5, r5, r7
ARM GAS  /tmp/ccXE0sEe.s 			page 60


 2236              		.loc 1 810 15 discriminator 3 view .LVU686
 2237 0236 51EC100B 		vmov	r0, r1, d0
 2238 023a FFF7FEFF 		bl	__aeabi_d2f
 2239              	.LVL158:
 2240              		.loc 1 810 13 discriminator 3 view .LVU687
 2241 023e 2860     		str	r0, [r5]	@ float
 808:Src/main.c    **** 	{
 2242              		.loc 1 808 35 discriminator 3 view .LVU688
 2243 0240 0136     		adds	r6, r6, #1
 2244              	.LVL159:
 2245              	.L85:
 808:Src/main.c    **** 	{
 2246              		.loc 1 808 2 discriminator 1 view .LVU689
 2247 0242 B442     		cmp	r4, r6
 2248 0244 E7DC     		bgt	.L86
 2249              	.LBE24:
 811:Src/main.c    **** 	}
 812:Src/main.c    **** }
 2250              		.loc 1 812 1 view .LVU690
 2251 0246 0DF21C4D 		addw	sp, sp, #1052
 2252              	.LCFI40:
 2253              		.cfi_def_cfa_offset 52
 2254              		@ sp needed
 2255 024a BDEC088B 		vldm	sp!, {d8-d11}
 2256              	.LCFI41:
 2257              		.cfi_restore 86
 2258              		.cfi_restore 87
 2259              		.cfi_restore 84
 2260              		.cfi_restore 85
 2261              		.cfi_restore 82
 2262              		.cfi_restore 83
 2263              		.cfi_restore 80
 2264              		.cfi_restore 81
 2265              		.cfi_def_cfa_offset 20
 2266              	.LVL160:
 2267              		.loc 1 812 1 view .LVU691
 2268 024e F0BD     		pop	{r4, r5, r6, r7, pc}
 2269              	.LVL161:
 2270              	.L91:
 2271              		.loc 1 812 1 view .LVU692
 2272              		.align	2
 2273              	.L90:
 2274 0250 00000000 		.word	0
 2275 0254 DB0FC940 		.word	1086918619
 2276              		.cfi_endproc
 2277              	.LFE150:
 2279              		.section	.text.main,"ax",%progbits
 2280              		.align	1
 2281              		.global	main
 2282              		.syntax unified
 2283              		.thumb
 2284              		.thumb_func
 2285              		.fpu fpv4-sp-d16
 2287              	main:
 2288              	.LFB133:
 128:Src/main.c    ****   /* USER CODE BEGIN 1 */
 2289              		.loc 1 128 1 is_stmt 1 view -0
ARM GAS  /tmp/ccXE0sEe.s 			page 61


 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 8
 2292              		@ frame_needed = 0, uses_anonymous_args = 0
 2293 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2294              	.LCFI42:
 2295              		.cfi_def_cfa_offset 24
 2296              		.cfi_offset 4, -24
 2297              		.cfi_offset 5, -20
 2298              		.cfi_offset 6, -16
 2299              		.cfi_offset 7, -12
 2300              		.cfi_offset 8, -8
 2301              		.cfi_offset 14, -4
 2302 0004 86B0     		sub	sp, sp, #24
 2303              	.LCFI43:
 2304              		.cfi_def_cfa_offset 48
 136:Src/main.c    **** 
 2305              		.loc 1 136 3 view .LVU694
 2306 0006 FFF7FEFF 		bl	HAL_Init
 2307              	.LVL162:
 143:Src/main.c    **** 
 2308              		.loc 1 143 3 view .LVU695
 2309 000a FFF7FEFF 		bl	SystemClock_Config
 2310              	.LVL163:
 150:Src/main.c    ****   MX_DMA_Init();
 2311              		.loc 1 150 3 view .LVU696
 2312 000e FFF7FEFF 		bl	MX_GPIO_Init
 2313              	.LVL164:
 151:Src/main.c    ****   MX_ADC1_Init();
 2314              		.loc 1 151 3 view .LVU697
 2315 0012 FFF7FEFF 		bl	MX_DMA_Init
 2316              	.LVL165:
 152:Src/main.c    ****   MX_DAC_Init();
 2317              		.loc 1 152 3 view .LVU698
 2318 0016 FFF7FEFF 		bl	MX_ADC1_Init
 2319              	.LVL166:
 153:Src/main.c    ****   MX_TIM2_Init();
 2320              		.loc 1 153 3 view .LVU699
 2321 001a FFF7FEFF 		bl	MX_DAC_Init
 2322              	.LVL167:
 154:Src/main.c    ****   MX_TIM6_Init();
 2323              		.loc 1 154 3 view .LVU700
 2324 001e FFF7FEFF 		bl	MX_TIM2_Init
 2325              	.LVL168:
 155:Src/main.c    **** 
 2326              		.loc 1 155 3 view .LVU701
 2327 0022 FFF7FEFF 		bl	MX_TIM6_Init
 2328              	.LVL169:
 158:Src/main.c    ****   uint16_t element_count;
 2329              		.loc 1 158 3 view .LVU702
 158:Src/main.c    ****   uint16_t element_count;
 2330              		.loc 1 158 9 is_stmt 0 view .LVU703
 2331 0026 474B     		ldr	r3, .L101
 2332 0028 0022     		movs	r2, #0
 2333 002a 1A80     		strh	r2, [r3]	@ movhi
 159:Src/main.c    **** 
 2334              		.loc 1 159 3 is_stmt 1 view .LVU704
 161:Src/main.c    ****   StartDAC();
ARM GAS  /tmp/ccXE0sEe.s 			page 62


 2335              		.loc 1 161 3 view .LVU705
 2336 002c FFF7FEFF 		bl	StartADC
 2337              	.LVL170:
 162:Src/main.c    **** 
 2338              		.loc 1 162 3 view .LVU706
 2339 0030 FFF7FEFF 		bl	StartDAC
 2340              	.LVL171:
 165:Src/main.c    ****   		  		 SAMPLING_FREQ, CARRIER_FREQ, &DACTable[0],
 2341              		.loc 1 165 3 view .LVU707
 2342 0034 0DF11603 		add	r3, sp, #22
 2343 0038 0293     		str	r3, [sp, #8]
 2344 003a 434B     		ldr	r3, .L101+4
 2345 003c 0193     		str	r3, [sp, #4]
 2346 003e 49F64043 		movw	r3, #40000
 2347 0042 0093     		str	r3, [sp]
 2348 0044 414B     		ldr	r3, .L101+8
 2349 0046 0822     		movs	r2, #8
 2350 0048 1021     		movs	r1, #16
 2351 004a 0846     		mov	r0, r1
 2352 004c FFF7FEFF 		bl	CreateDACTable
 2353              	.LVL172:
 169:Src/main.c    **** 
 2354              		.loc 1 169 3 view .LVU708
 2355 0050 FFF7FEFF 		bl	StartMasterTimer
 2356              	.LVL173:
 2357 0054 74E0     		b	.L97
 2358              	.LVL174:
 2359              	.L98:
 2360              	.LBB25:
 2361              	.LBB26:
 184:Src/main.c    **** 		  dac_buff_offset = SAMPLE_POINTS * ((g + 1) & 0x0001);
 2362              		.loc 1 184 20 is_stmt 0 view .LVU709
 2363 0056 1026     		movs	r6, #16
 2364              	.L94:
 2365              	.LVL175:
 185:Src/main.c    **** 
 2366              		.loc 1 185 5 is_stmt 1 discriminator 4 view .LVU710
 185:Src/main.c    **** 
 2367              		.loc 1 185 43 is_stmt 0 discriminator 4 view .LVU711
 2368 0058 2546     		mov	r5, r4
 2369 005a 631C     		adds	r3, r4, #1
 185:Src/main.c    **** 
 2370              		.loc 1 185 21 discriminator 4 view .LVU712
 2371 005c 03F00103 		and	r3, r3, #1
 2372 0060 5A01     		lsls	r2, r3, #5
 2373 0062 D21A     		subs	r2, r2, r3
 2374 0064 03EB8203 		add	r3, r3, r2, lsl #2
 2375 0068 C3EB0313 		rsb	r3, r3, r3, lsl #4
 2376 006c 9A00     		lsls	r2, r3, #2
 2377 006e 97B2     		uxth	r7, r2
 2378              	.LVL176:
 187:Src/main.c    **** 
 2379              		.loc 1 187 5 is_stmt 1 discriminator 4 view .LVU713
 187:Src/main.c    **** 
 2380              		.loc 1 187 17 is_stmt 0 discriminator 4 view .LVU714
 2381 0070 FFF7FEFF 		bl	HAL_GetTick
 2382              	.LVL177:
ARM GAS  /tmp/ccXE0sEe.s 			page 63


 2383 0074 8046     		mov	r8, r0
 2384              	.LVL178:
 190:Src/main.c    **** 		  				 SAMPLING_FREQ, CARRIER_FREQ, &DACTable[dac_buff_offset],
 2385              		.loc 1 190 5 is_stmt 1 discriminator 4 view .LVU715
 2386 0076 0DF11603 		add	r3, sp, #22
 2387 007a 0293     		str	r3, [sp, #8]
 2388 007c 324A     		ldr	r2, .L101+4
 2389 007e 02EB4702 		add	r2, r2, r7, lsl #1
 2390 0082 0192     		str	r2, [sp, #4]
 2391 0084 49F64043 		movw	r3, #40000
 2392 0088 0093     		str	r3, [sp]
 2393 008a 304B     		ldr	r3, .L101+8
 2394 008c 0822     		movs	r2, #8
 2395 008e 1021     		movs	r1, #16
 2396 0090 3046     		mov	r0, r6
 2397              	.LVL179:
 190:Src/main.c    **** 		  				 SAMPLING_FREQ, CARRIER_FREQ, &DACTable[dac_buff_offset],
 2398              		.loc 1 190 5 is_stmt 0 discriminator 4 view .LVU716
 2399 0092 FFF7FEFF 		bl	CreateDACTable
 2400              	.LVL180:
 194:Src/main.c    **** 
 2401              		.loc 1 194 5 is_stmt 1 discriminator 4 view .LVU717
 194:Src/main.c    **** 
 2402              		.loc 1 194 27 is_stmt 0 discriminator 4 view .LVU718
 2403 0096 FFF7FEFF 		bl	HAL_GetTick
 2404              	.LVL181:
 194:Src/main.c    **** 
 2405              		.loc 1 194 41 discriminator 4 view .LVU719
 2406 009a A0EB0800 		sub	r0, r0, r8
 194:Src/main.c    **** 
 2407              		.loc 1 194 25 discriminator 4 view .LVU720
 2408 009e 2C4B     		ldr	r3, .L101+12
 2409 00a0 1860     		str	r0, [r3]
 196:Src/main.c    **** 
 2410              		.loc 1 196 5 is_stmt 1 discriminator 4 view .LVU721
 196:Src/main.c    **** 
 2411              		.loc 1 196 17 is_stmt 0 discriminator 4 view .LVU722
 2412 00a2 FFF7FEFF 		bl	HAL_GetTick
 2413              	.LVL182:
 2414 00a6 0646     		mov	r6, r0
 2415              	.LVL183:
 199:Src/main.c    **** 		  Flags ^= TRANSFER_COMPLETED_EVT;
 2416              		.loc 1 199 5 is_stmt 1 discriminator 4 view .LVU723
 2417              	.L95:
 199:Src/main.c    **** 		  Flags ^= TRANSFER_COMPLETED_EVT;
 2418              		.loc 1 199 46 discriminator 1 view .LVU724
 199:Src/main.c    **** 		  Flags ^= TRANSFER_COMPLETED_EVT;
 2419              		.loc 1 199 20 is_stmt 0 discriminator 1 view .LVU725
 2420 00a8 264B     		ldr	r3, .L101
 2421 00aa 1B88     		ldrh	r3, [r3]
 199:Src/main.c    **** 		  Flags ^= TRANSFER_COMPLETED_EVT;
 2422              		.loc 1 199 11 discriminator 1 view .LVU726
 2423 00ac 13F0010F 		tst	r3, #1
 2424 00b0 FAD0     		beq	.L95
 200:Src/main.c    **** 
 2425              		.loc 1 200 5 is_stmt 1 discriminator 2 view .LVU727
 200:Src/main.c    **** 
ARM GAS  /tmp/ccXE0sEe.s 			page 64


 2426              		.loc 1 200 11 is_stmt 0 discriminator 2 view .LVU728
 2427 00b2 244A     		ldr	r2, .L101
 2428 00b4 1388     		ldrh	r3, [r2]
 2429 00b6 83F00103 		eor	r3, r3, #1
 2430 00ba 1380     		strh	r3, [r2]	@ movhi
 202:Src/main.c    **** 
 2431              		.loc 1 202 5 is_stmt 1 discriminator 2 view .LVU729
 202:Src/main.c    **** 
 2432              		.loc 1 202 26 is_stmt 0 discriminator 2 view .LVU730
 2433 00bc FFF7FEFF 		bl	HAL_GetTick
 2434              	.LVL184:
 202:Src/main.c    **** 
 2435              		.loc 1 202 40 discriminator 2 view .LVU731
 2436 00c0 801B     		subs	r0, r0, r6
 202:Src/main.c    **** 
 2437              		.loc 1 202 24 discriminator 2 view .LVU732
 2438 00c2 244B     		ldr	r3, .L101+16
 2439 00c4 1860     		str	r0, [r3]
 204:Src/main.c    **** 
 2440              		.loc 1 204 5 is_stmt 1 discriminator 2 view .LVU733
 204:Src/main.c    **** 
 2441              		.loc 1 204 17 is_stmt 0 discriminator 2 view .LVU734
 2442 00c6 FFF7FEFF 		bl	HAL_GetTick
 2443              	.LVL185:
 2444 00ca 0646     		mov	r6, r0
 2445              	.LVL186:
 206:Src/main.c    **** 		  adc_start_freq = g * GROUP_BAND + START_FREQ;
 2446              		.loc 1 206 5 is_stmt 1 discriminator 2 view .LVU735
 206:Src/main.c    **** 		  adc_start_freq = g * GROUP_BAND + START_FREQ;
 2447              		.loc 1 206 21 is_stmt 0 discriminator 2 view .LVU736
 2448 00cc 04F00103 		and	r3, r4, #1
 2449 00d0 5A01     		lsls	r2, r3, #5
 2450 00d2 D21A     		subs	r2, r2, r3
 2451 00d4 03EB8203 		add	r3, r3, r2, lsl #2
 2452 00d8 C3EB0313 		rsb	r3, r3, r3, lsl #4
 2453 00dc 9A00     		lsls	r2, r3, #2
 2454 00de 92B2     		uxth	r2, r2
 2455              	.LVL187:
 207:Src/main.c    **** 
 2456              		.loc 1 207 5 is_stmt 1 discriminator 2 view .LVU737
 207:Src/main.c    **** 
 2457              		.loc 1 207 37 is_stmt 0 discriminator 2 view .LVU738
 2458 00e0 E101     		lsls	r1, r4, #7
 2459              	.LVL188:
 210:Src/main.c    **** 				  	  	  	    adc_start_freq, FREQ_STEPS,
 2460              		.loc 1 210 5 is_stmt 1 discriminator 2 view .LVU739
 2461 00e2 BDF81630 		ldrh	r3, [sp, #22]
 2462 00e6 0393     		str	r3, [sp, #12]
 2463 00e8 1B4B     		ldr	r3, .L101+20
 2464 00ea 03EB4202 		add	r2, r3, r2, lsl #1
 2465              	.LVL189:
 210:Src/main.c    **** 				  	  	  	    adc_start_freq, FREQ_STEPS,
 2466              		.loc 1 210 5 is_stmt 0 discriminator 2 view .LVU740
 2467 00ee 0292     		str	r2, [sp, #8]
 2468 00f0 49F64043 		movw	r3, #40000
 2469 00f4 0193     		str	r3, [sp, #4]
 2470 00f6 154B     		ldr	r3, .L101+8
ARM GAS  /tmp/ccXE0sEe.s 			page 65


 2471 00f8 0093     		str	r3, [sp]
 2472 00fa 0823     		movs	r3, #8
 2473 00fc 1022     		movs	r2, #16
 2474 00fe 1144     		add	r1, r1, r2
 2475              	.LVL190:
 210:Src/main.c    **** 				  	  	  	    adc_start_freq, FREQ_STEPS,
 2476              		.loc 1 210 5 discriminator 2 view .LVU741
 2477 0100 1648     		ldr	r0, .L101+24
 2478              	.LVL191:
 210:Src/main.c    **** 				  	  	  	    adc_start_freq, FREQ_STEPS,
 2479              		.loc 1 210 5 discriminator 2 view .LVU742
 2480 0102 00EB8510 		add	r0, r0, r5, lsl #6
 2481 0106 FFF7FEFF 		bl	CalculateFreqResponse
 2482              	.LVL192:
 215:Src/main.c    **** 	  }
 2483              		.loc 1 215 5 is_stmt 1 discriminator 2 view .LVU743
 215:Src/main.c    **** 	  }
 2484              		.loc 1 215 30 is_stmt 0 discriminator 2 view .LVU744
 2485 010a FFF7FEFF 		bl	HAL_GetTick
 2486              	.LVL193:
 215:Src/main.c    **** 	  }
 2487              		.loc 1 215 44 discriminator 2 view .LVU745
 2488 010e 801B     		subs	r0, r0, r6
 215:Src/main.c    **** 	  }
 2489              		.loc 1 215 28 discriminator 2 view .LVU746
 2490 0110 134B     		ldr	r3, .L101+28
 2491 0112 1860     		str	r0, [r3]
 2492              	.LBE26:
 176:Src/main.c    **** 	  {
 2493              		.loc 1 176 42 discriminator 2 view .LVU747
 2494 0114 0134     		adds	r4, r4, #1
 2495              	.LVL194:
 176:Src/main.c    **** 	  {
 2496              		.loc 1 176 42 discriminator 2 view .LVU748
 2497 0116 E4B2     		uxtb	r4, r4
 2498              	.LVL195:
 2499              	.L93:
 176:Src/main.c    **** 	  {
 2500              		.loc 1 176 4 discriminator 1 view .LVU749
 2501 0118 1F2C     		cmp	r4, #31
 2502 011a 07D8     		bhi	.L100
 2503              	.LBB27:
 178:Src/main.c    **** 		  uint16_t adc_start_freq;
 2504              		.loc 1 178 5 is_stmt 1 view .LVU750
 179:Src/main.c    **** 		  uint16_t dac_buff_offset;
 2505              		.loc 1 179 5 view .LVU751
 180:Src/main.c    **** 		  uint16_t adc_buff_offset;
 2506              		.loc 1 180 5 view .LVU752
 181:Src/main.c    **** 		  uint32_t tick_hold;
 2507              		.loc 1 181 5 view .LVU753
 182:Src/main.c    **** 
 2508              		.loc 1 182 5 view .LVU754
 184:Src/main.c    **** 		  dac_buff_offset = SAMPLE_POINTS * ((g + 1) & 0x0001);
 2509              		.loc 1 184 5 view .LVU755
 184:Src/main.c    **** 		  dac_buff_offset = SAMPLE_POINTS * ((g + 1) & 0x0001);
 2510              		.loc 1 184 20 is_stmt 0 view .LVU756
 2511 011c 1F2C     		cmp	r4, #31
ARM GAS  /tmp/ccXE0sEe.s 			page 66


 2512 011e 9AD0     		beq	.L98
 184:Src/main.c    **** 		  dac_buff_offset = SAMPLE_POINTS * ((g + 1) & 0x0001);
 2513              		.loc 1 184 54 discriminator 1 view .LVU757
 2514 0120 661C     		adds	r6, r4, #1
 184:Src/main.c    **** 		  dac_buff_offset = SAMPLE_POINTS * ((g + 1) & 0x0001);
 2515              		.loc 1 184 71 discriminator 1 view .LVU758
 2516 0122 F601     		lsls	r6, r6, #7
 2517 0124 B6B2     		uxth	r6, r6
 184:Src/main.c    **** 		  dac_buff_offset = SAMPLE_POINTS * ((g + 1) & 0x0001);
 2518              		.loc 1 184 20 discriminator 1 view .LVU759
 2519 0126 1036     		adds	r6, r6, #16
 2520 0128 B6B2     		uxth	r6, r6
 2521 012a 95E7     		b	.L94
 2522              	.L100:
 2523              	.LBE27:
 2524              	.LBE25:
 218:Src/main.c    **** 	  	   NUM_OF_FREQS, Signal);
 2525              		.loc 1 218 4 is_stmt 1 view .LVU760
 2526 012c 0D4B     		ldr	r3, .L101+32
 2527 012e 0193     		str	r3, [sp, #4]
 2528 0130 4FF48073 		mov	r3, #256
 2529 0134 0093     		str	r3, [sp]
 2530 0136 1022     		movs	r2, #16
 2531 0138 1146     		mov	r1, r2
 2532 013a 0848     		ldr	r0, .L101+24
 2533 013c FFF7FEFF 		bl	IFFT
 2534              	.LVL196:
 2535              	.L97:
 173:Src/main.c    ****   {
 2536              		.loc 1 173 3 view .LVU761
 176:Src/main.c    **** 	  {
 2537              		.loc 1 176 4 view .LVU762
 2538              	.LBB28:
 176:Src/main.c    **** 	  {
 2539              		.loc 1 176 9 view .LVU763
 176:Src/main.c    **** 	  {
 2540              		.loc 1 176 17 is_stmt 0 view .LVU764
 2541 0140 0024     		movs	r4, #0
 176:Src/main.c    **** 	  {
 2542              		.loc 1 176 4 view .LVU765
 2543 0142 E9E7     		b	.L93
 2544              	.L102:
 2545              		.align	2
 2546              	.L101:
 2547 0144 00000000 		.word	Flags
 2548 0148 00000000 		.word	DACTable
 2549 014c C0D40100 		.word	120000
 2550 0150 00000000 		.word	TickDifferenceTable
 2551 0154 00000000 		.word	TickDifferenceWait
 2552 0158 00000000 		.word	ADCBuffer
 2553 015c 00000000 		.word	FreqResponse
 2554 0160 00000000 		.word	TickDifferenceFreqResp
 2555 0164 00000000 		.word	Signal
 2556              	.LBE28:
 2557              		.cfi_endproc
 2558              	.LFE133:
 2560              		.comm	TickDifferenceWait,4,4
ARM GAS  /tmp/ccXE0sEe.s 			page 67


 2561              		.comm	TickDifferenceFreqResp,4,4
 2562              		.comm	TickDifferenceTable,4,4
 2563              		.comm	Flags,2,2
 2564              		.comm	Signal,1024,4
 2565              		.comm	FreqResponse,2048,4
 2566              		.comm	DACTable,30000,4
 2567              		.comm	ADCBuffer,30000,4
 2568              		.comm	htim6,64,4
 2569              		.comm	htim2,64,4
 2570              		.comm	hdma_dac1,96,4
 2571              		.comm	hdac,20,4
 2572              		.comm	hdma_adc1,96,4
 2573              		.comm	hadc1,72,4
 2574              		.text
 2575              	.Letext0:
 2576              		.file 2 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 2577              		.file 3 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/lock.h"
 2578              		.file 4 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_types.h"
 2579              		.file 5 "/home/onur/STM32Toolchain/gcc-arm/lib/gcc/arm-none-eabi/8.2.1/include/stddef.h"
 2580              		.file 6 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/reent.h"
 2581              		.file 7 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 2582              		.file 8 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/stdlib.h"
 2583              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 2584              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2585              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2586              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2587              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2588              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2589              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2590              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2591              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2592              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2593              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 2594              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2595              		.file 21 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/math.h"
 2596              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2597              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2598              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2599              		.file 25 "<built-in>"
ARM GAS  /tmp/ccXE0sEe.s 			page 68


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccXE0sEe.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccXE0sEe.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccXE0sEe.s:301    .text.MX_GPIO_Init:0000000000000148 $d
     /tmp/ccXE0sEe.s:312    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccXE0sEe.s:318    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccXE0sEe.s:393    .text.MX_DMA_Init:0000000000000054 $d
     /tmp/ccXE0sEe.s:398    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccXE0sEe.s:404    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccXE0sEe.s:497    .text.MX_ADC1_Init:0000000000000054 $d
                            *COM*:0000000000000048 hadc1
     /tmp/ccXE0sEe.s:503    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/ccXE0sEe.s:509    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/ccXE0sEe.s:562    .text.MX_DAC_Init:000000000000002c $d
                            *COM*:0000000000000014 hdac
     /tmp/ccXE0sEe.s:568    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccXE0sEe.s:574    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccXE0sEe.s:658    .text.MX_TIM2_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccXE0sEe.s:663    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccXE0sEe.s:669    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccXE0sEe.s:732    .text.MX_TIM6_Init:0000000000000030 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccXE0sEe.s:738    .text.StartADC:0000000000000000 $t
     /tmp/ccXE0sEe.s:745    .text.StartADC:0000000000000000 StartADC
     /tmp/ccXE0sEe.s:775    .text.StartADC:0000000000000014 $d
                            *COM*:0000000000007530 ADCBuffer
     /tmp/ccXE0sEe.s:781    .text.StartDAC:0000000000000000 $t
     /tmp/ccXE0sEe.s:788    .text.StartDAC:0000000000000000 StartDAC
     /tmp/ccXE0sEe.s:826    .text.StartDAC:0000000000000020 $d
                            *COM*:0000000000007530 DACTable
     /tmp/ccXE0sEe.s:832    .text.StartMasterTimer:0000000000000000 $t
     /tmp/ccXE0sEe.s:839    .text.StartMasterTimer:0000000000000000 StartMasterTimer
     /tmp/ccXE0sEe.s:867    .text.StartMasterTimer:0000000000000010 $d
     /tmp/ccXE0sEe.s:872    .text.StopMasterTimer:0000000000000000 $t
     /tmp/ccXE0sEe.s:879    .text.StopMasterTimer:0000000000000000 StopMasterTimer
     /tmp/ccXE0sEe.s:907    .text.StopMasterTimer:0000000000000010 $d
     /tmp/ccXE0sEe.s:912    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccXE0sEe.s:919    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccXE0sEe.s:1050   .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccXE0sEe.s:1056   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccXE0sEe.s:1063   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccXE0sEe.s:1083   .text.HAL_ADC_ConvHalfCpltCallback:000000000000000c $d
                            *COM*:0000000000000002 Flags
     /tmp/ccXE0sEe.s:1088   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccXE0sEe.s:1095   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccXE0sEe.s:1115   .text.HAL_ADC_ConvCpltCallback:000000000000000c $d
     /tmp/ccXE0sEe.s:1120   .text.Error_Handler:0000000000000000 $t
     /tmp/ccXE0sEe.s:1127   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccXE0sEe.s:1142   .text.CalculateFreqResponse:0000000000000000 $t
     /tmp/ccXE0sEe.s:1149   .text.CalculateFreqResponse:0000000000000000 CalculateFreqResponse
     /tmp/ccXE0sEe.s:1438   .text.CalculateFreqResponse:0000000000000184 $d
     /tmp/ccXE0sEe.s:1443   .text.CreateDACTable:0000000000000000 $t
     /tmp/ccXE0sEe.s:1450   .text.CreateDACTable:0000000000000000 CreateDACTable
     /tmp/ccXE0sEe.s:1845   .text.CreateDACTable:000000000000021c $d
     /tmp/ccXE0sEe.s:1853   .text.IFFT:0000000000000000 $t
ARM GAS  /tmp/ccXE0sEe.s 			page 69


     /tmp/ccXE0sEe.s:1860   .text.IFFT:0000000000000000 IFFT
     /tmp/ccXE0sEe.s:2274   .text.IFFT:0000000000000250 $d
     /tmp/ccXE0sEe.s:2280   .text.main:0000000000000000 $t
     /tmp/ccXE0sEe.s:2287   .text.main:0000000000000000 main
     /tmp/ccXE0sEe.s:2547   .text.main:0000000000000144 $d
                            *COM*:0000000000000004 TickDifferenceTable
                            *COM*:0000000000000004 TickDifferenceWait
                            *COM*:0000000000000800 FreqResponse
                            *COM*:0000000000000004 TickDifferenceFreqResp
                            *COM*:0000000000000400 Signal
                            *COM*:0000000000000060 hdma_dac1
                            *COM*:0000000000000060 hdma_adc1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_ADC_Start_DMA
HAL_DAC_Start_DMA
HAL_TIM_Base_Start
HAL_TIM_Base_Stop
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_d2f
cos
sin
sqrt
HAL_Init
HAL_GetTick
