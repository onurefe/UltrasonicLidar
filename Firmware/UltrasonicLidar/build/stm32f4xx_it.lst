ARM GAS  /tmp/ccAv7oVi.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB130:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f4xx_it.c **** 
  28:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccAv7oVi.s 			page 2


  31:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f4xx_it.c **** 
  33:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f4xx_it.c ****  
  36:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f4xx_it.c **** 
  41:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f4xx_it.c **** 
  46:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f4xx_it.c **** 
  48:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f4xx_it.c **** 
  51:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_dac1;
  61:Src/stm32f4xx_it.c **** extern DAC_HandleTypeDef hdac;
  62:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  63:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  64:Src/stm32f4xx_it.c **** 
  65:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  66:Src/stm32f4xx_it.c **** 
  67:Src/stm32f4xx_it.c **** /******************************************************************************/
  68:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  69:Src/stm32f4xx_it.c **** /******************************************************************************/
  70:Src/stm32f4xx_it.c **** /**
  71:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Src/stm32f4xx_it.c ****   */
  73:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  74:Src/stm32f4xx_it.c **** {
  29              		.loc 1 74 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  75:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Src/stm32f4xx_it.c **** 
  77:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Src/stm32f4xx_it.c **** 
  80:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Src/stm32f4xx_it.c **** }
  34              		.loc 1 81 1 view .LVU1
ARM GAS  /tmp/ccAv7oVi.s 			page 3


  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE130:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB131:
  82:Src/stm32f4xx_it.c **** 
  83:Src/stm32f4xx_it.c **** /**
  84:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Src/stm32f4xx_it.c ****   */
  86:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  87:Src/stm32f4xx_it.c **** {
  49              		.loc 1 87 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  88:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Src/stm32f4xx_it.c **** 
  90:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Src/stm32f4xx_it.c ****   while (1)
  56              		.loc 1 91 3 discriminator 1 view .LVU3
  92:Src/stm32f4xx_it.c ****   {
  93:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Src/stm32f4xx_it.c ****   }
  57              		.loc 1 95 3 discriminator 1 view .LVU4
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE131:
  62              		.section	.text.MemManage_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	MemManage_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	MemManage_Handler:
  71              	.LFB132:
  96:Src/stm32f4xx_it.c **** }
  97:Src/stm32f4xx_it.c **** 
  98:Src/stm32f4xx_it.c **** /**
  99:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 100:Src/stm32f4xx_it.c ****   */
 101:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 102:Src/stm32f4xx_it.c **** {
  72              		.loc 1 102 1 view -0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
ARM GAS  /tmp/ccAv7oVi.s 			page 4


  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.L5:
 103:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Src/stm32f4xx_it.c **** 
 105:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Src/stm32f4xx_it.c ****   while (1)
  79              		.loc 1 106 3 discriminator 1 view .LVU6
 107:Src/stm32f4xx_it.c ****   {
 108:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Src/stm32f4xx_it.c ****   }
  80              		.loc 1 110 3 discriminator 1 view .LVU7
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE132:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	BusFault_Handler:
  94              	.LFB133:
 111:Src/stm32f4xx_it.c **** }
 112:Src/stm32f4xx_it.c **** 
 113:Src/stm32f4xx_it.c **** /**
 114:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 115:Src/stm32f4xx_it.c ****   */
 116:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 117:Src/stm32f4xx_it.c **** {
  95              		.loc 1 117 1 view -0
  96              		.cfi_startproc
  97              		@ Volatile: function does not return.
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.L7:
 118:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Src/stm32f4xx_it.c **** 
 120:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Src/stm32f4xx_it.c ****   while (1)
 102              		.loc 1 121 3 discriminator 1 view .LVU9
 122:Src/stm32f4xx_it.c ****   {
 123:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Src/stm32f4xx_it.c ****   }
 103              		.loc 1 125 3 discriminator 1 view .LVU10
 104 0000 FEE7     		b	.L7
 105              		.cfi_endproc
 106              	.LFE133:
 108              		.section	.text.UsageFault_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	UsageFault_Handler
 111              		.syntax unified
ARM GAS  /tmp/ccAv7oVi.s 			page 5


 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	UsageFault_Handler:
 117              	.LFB134:
 126:Src/stm32f4xx_it.c **** }
 127:Src/stm32f4xx_it.c **** 
 128:Src/stm32f4xx_it.c **** /**
 129:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Src/stm32f4xx_it.c ****   */
 131:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 132:Src/stm32f4xx_it.c **** {
 118              		.loc 1 132 1 view -0
 119              		.cfi_startproc
 120              		@ Volatile: function does not return.
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.L9:
 133:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Src/stm32f4xx_it.c **** 
 135:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Src/stm32f4xx_it.c ****   while (1)
 125              		.loc 1 136 3 discriminator 1 view .LVU12
 137:Src/stm32f4xx_it.c ****   {
 138:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Src/stm32f4xx_it.c ****   }
 126              		.loc 1 140 3 discriminator 1 view .LVU13
 127 0000 FEE7     		b	.L9
 128              		.cfi_endproc
 129              	.LFE134:
 131              		.section	.text.SVC_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	SVC_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	SVC_Handler:
 140              	.LFB135:
 141:Src/stm32f4xx_it.c **** }
 142:Src/stm32f4xx_it.c **** 
 143:Src/stm32f4xx_it.c **** /**
 144:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 145:Src/stm32f4xx_it.c ****   */
 146:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 147:Src/stm32f4xx_it.c **** {
 141              		.loc 1 147 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 148:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 149:Src/stm32f4xx_it.c **** 
 150:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 151:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
ARM GAS  /tmp/ccAv7oVi.s 			page 6


 152:Src/stm32f4xx_it.c **** 
 153:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 154:Src/stm32f4xx_it.c **** }
 146              		.loc 1 154 1 view .LVU15
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE135:
 151              		.section	.text.DebugMon_Handler,"ax",%progbits
 152              		.align	1
 153              		.global	DebugMon_Handler
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	DebugMon_Handler:
 160              	.LFB136:
 155:Src/stm32f4xx_it.c **** 
 156:Src/stm32f4xx_it.c **** /**
 157:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 158:Src/stm32f4xx_it.c ****   */
 159:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 160:Src/stm32f4xx_it.c **** {
 161              		.loc 1 160 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 161:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 162:Src/stm32f4xx_it.c **** 
 163:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 164:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 165:Src/stm32f4xx_it.c **** 
 166:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 167:Src/stm32f4xx_it.c **** }
 166              		.loc 1 167 1 view .LVU17
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE136:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv4-sp-d16
 179              	PendSV_Handler:
 180              	.LFB137:
 168:Src/stm32f4xx_it.c **** 
 169:Src/stm32f4xx_it.c **** /**
 170:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 171:Src/stm32f4xx_it.c ****   */
 172:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 173:Src/stm32f4xx_it.c **** {
 181              		.loc 1 173 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccAv7oVi.s 			page 7


 185              		@ link register save eliminated.
 174:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 175:Src/stm32f4xx_it.c **** 
 176:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 177:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 178:Src/stm32f4xx_it.c **** 
 179:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 180:Src/stm32f4xx_it.c **** }
 186              		.loc 1 180 1 view .LVU19
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE137:
 191              		.section	.text.SysTick_Handler,"ax",%progbits
 192              		.align	1
 193              		.global	SysTick_Handler
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	SysTick_Handler:
 200              	.LFB138:
 181:Src/stm32f4xx_it.c **** 
 182:Src/stm32f4xx_it.c **** /**
 183:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 184:Src/stm32f4xx_it.c ****   */
 185:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 186:Src/stm32f4xx_it.c **** {
 201              		.loc 1 186 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 187:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 188:Src/stm32f4xx_it.c **** 
 189:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 190:Src/stm32f4xx_it.c ****   HAL_IncTick();
 210              		.loc 1 190 3 view .LVU21
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 191:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 192:Src/stm32f4xx_it.c **** 
 193:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 194:Src/stm32f4xx_it.c **** }
 213              		.loc 1 194 1 is_stmt 0 view .LVU22
 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE138:
 218              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 219              		.align	1
 220              		.global	DMA1_Stream5_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
ARM GAS  /tmp/ccAv7oVi.s 			page 8


 224              		.fpu fpv4-sp-d16
 226              	DMA1_Stream5_IRQHandler:
 227              	.LFB139:
 195:Src/stm32f4xx_it.c **** 
 196:Src/stm32f4xx_it.c **** /******************************************************************************/
 197:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 198:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 199:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 200:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 201:Src/stm32f4xx_it.c **** /******************************************************************************/
 202:Src/stm32f4xx_it.c **** 
 203:Src/stm32f4xx_it.c **** /**
 204:Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 205:Src/stm32f4xx_it.c ****   */
 206:Src/stm32f4xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 207:Src/stm32f4xx_it.c **** {
 228              		.loc 1 207 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI1:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 208:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
 209:Src/stm32f4xx_it.c **** 
 210:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 211:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac1);
 237              		.loc 1 211 3 view .LVU24
 238 0002 0248     		ldr	r0, .L17
 239 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 240              	.LVL1:
 212:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 213:Src/stm32f4xx_it.c **** 
 214:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 215:Src/stm32f4xx_it.c **** }
 241              		.loc 1 215 1 is_stmt 0 view .LVU25
 242 0008 08BD     		pop	{r3, pc}
 243              	.L18:
 244 000a 00BF     		.align	2
 245              	.L17:
 246 000c 00000000 		.word	hdma_dac1
 247              		.cfi_endproc
 248              	.LFE139:
 250              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 251              		.align	1
 252              		.global	TIM6_DAC_IRQHandler
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	TIM6_DAC_IRQHandler:
 259              	.LFB140:
 216:Src/stm32f4xx_it.c **** 
 217:Src/stm32f4xx_it.c **** /**
 218:Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
ARM GAS  /tmp/ccAv7oVi.s 			page 9


 219:Src/stm32f4xx_it.c ****   */
 220:Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 221:Src/stm32f4xx_it.c **** {
 260              		.loc 1 221 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 222:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 223:Src/stm32f4xx_it.c **** 
 224:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 225:Src/stm32f4xx_it.c ****   HAL_DAC_IRQHandler(&hdac);
 269              		.loc 1 225 3 view .LVU27
 270 0002 0348     		ldr	r0, .L21
 271 0004 FFF7FEFF 		bl	HAL_DAC_IRQHandler
 272              	.LVL2:
 226:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 273              		.loc 1 226 3 view .LVU28
 274 0008 0248     		ldr	r0, .L21+4
 275 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 276              	.LVL3:
 227:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 228:Src/stm32f4xx_it.c **** 
 229:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 230:Src/stm32f4xx_it.c **** }
 277              		.loc 1 230 1 is_stmt 0 view .LVU29
 278 000e 08BD     		pop	{r3, pc}
 279              	.L22:
 280              		.align	2
 281              	.L21:
 282 0010 00000000 		.word	hdac
 283 0014 00000000 		.word	htim6
 284              		.cfi_endproc
 285              	.LFE140:
 287              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 288              		.align	1
 289              		.global	DMA2_Stream0_IRQHandler
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	DMA2_Stream0_IRQHandler:
 296              	.LFB141:
 231:Src/stm32f4xx_it.c **** 
 232:Src/stm32f4xx_it.c **** /**
 233:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 234:Src/stm32f4xx_it.c ****   */
 235:Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 236:Src/stm32f4xx_it.c **** {
 297              		.loc 1 236 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccAv7oVi.s 			page 10


 301 0000 08B5     		push	{r3, lr}
 302              	.LCFI3:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
 237:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 238:Src/stm32f4xx_it.c **** 
 239:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 240:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 306              		.loc 1 240 3 view .LVU31
 307 0002 0248     		ldr	r0, .L25
 308 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 309              	.LVL4:
 241:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 242:Src/stm32f4xx_it.c **** 
 243:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 244:Src/stm32f4xx_it.c **** }
 310              		.loc 1 244 1 is_stmt 0 view .LVU32
 311 0008 08BD     		pop	{r3, pc}
 312              	.L26:
 313 000a 00BF     		.align	2
 314              	.L25:
 315 000c 00000000 		.word	hdma_adc1
 316              		.cfi_endproc
 317              	.LFE141:
 319              		.text
 320              	.Letext0:
 321              		.file 2 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 322              		.file 3 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 323              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 324              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 325              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 326              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 327              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 328              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 329              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 330              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccAv7oVi.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccAv7oVi.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccAv7oVi.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccAv7oVi.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccAv7oVi.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccAv7oVi.s:63     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccAv7oVi.s:70     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccAv7oVi.s:86     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccAv7oVi.s:93     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccAv7oVi.s:109    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccAv7oVi.s:116    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccAv7oVi.s:132    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccAv7oVi.s:139    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccAv7oVi.s:152    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccAv7oVi.s:159    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccAv7oVi.s:172    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccAv7oVi.s:179    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccAv7oVi.s:192    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccAv7oVi.s:199    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccAv7oVi.s:219    .text.DMA1_Stream5_IRQHandler:0000000000000000 $t
     /tmp/ccAv7oVi.s:226    .text.DMA1_Stream5_IRQHandler:0000000000000000 DMA1_Stream5_IRQHandler
     /tmp/ccAv7oVi.s:246    .text.DMA1_Stream5_IRQHandler:000000000000000c $d
     /tmp/ccAv7oVi.s:251    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/ccAv7oVi.s:258    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/ccAv7oVi.s:282    .text.TIM6_DAC_IRQHandler:0000000000000010 $d
     /tmp/ccAv7oVi.s:288    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccAv7oVi.s:295    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
     /tmp/ccAv7oVi.s:315    .text.DMA2_Stream0_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_dac1
HAL_DAC_IRQHandler
HAL_TIM_IRQHandler
hdac
htim6
hdma_adc1
